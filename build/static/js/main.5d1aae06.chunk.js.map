{"version":3,"sources":["services/authenticatedSlice/api.js","services/authenticatedSlice/index.js","services/loader/getInitiateLoadingRequest.js","services/hooks/useWindowSize.js","services/authenticatedSlice/selectors.js","components/Header/index.js","services/loader/selectLoadingRequestStatus.js","components/Resource/index.js","components/GetRequestCard/components/PendingCard/index.js","components/GetRequestCard/components/RejectedCard/index.js","components/GetRequestCard/index.js","components/AlertSystem/services/alertSystemSlice/index.js","components/AlertSystem/services/alertSystemSlice/selectors.js","components/AlertSystem/index.js","services/hooks/useQuery.js","components/ProtectedRoute/index.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/api.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/index.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/selectors.js","components/RepeatedPostRequestButton/index.js","components/PostRequestButton/index.js","areas/Account/scenes/Dashboard/index.js","areas/Account/scenes/Profile/services/accountProfileSlice/api.js","areas/Account/scenes/Profile/services/accountProfileSlice/index.js","areas/Account/scenes/Profile/services/accountProfileSlice/selectors.js","components/ArtCard/index.js","areas/Account/scenes/Profile/components/ArtHighlights/index.js","areas/Account/scenes/Profile/index.js","components/Paginator/components/pages.js","components/Paginator/components/MinimalPagination/index.js","components/Paginator/components/CollapsedPagination/index.js","components/Paginator/components/ExpandedPagination/index.js","components/Paginator/index.js","components/ArtBrowser/index.js","components/ArtBrowser/services/grid.js","areas/Art/scenes/Browse/services/artBrowseSlice/api.js","areas/Art/scenes/Browse/services/artBrowseSlice/selectors.js","areas/Art/scenes/Browse/services/artBrowseSlice/index.js","areas/Art/scenes/Browse/index.js","areas/Art/scenes/Browse/services/getTotalPages.js","areas/Art/scenes/Create/services/createFormSchema.js","areas/Art/scenes/Create/services/artCreateSlice/api.js","services/functions/validateWithJoi.js","services/functions/postToApi.js","services/functions/processPostFormRequest.js","areas/Art/scenes/Create/services/artCreateSlice/index.js","areas/Art/scenes/Create/services/artCreateSlice/selectors.js","areas/Art/scenes/Create/index.js","areas/Art/scenes/Open/services/artOpenSlice/api.js","areas/Art/scenes/Open/services/artOpenSlice/selectors.js","areas/Art/scenes/Open/services/artOpenSlice/index.js","areas/Art/scenes/Open/index.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/api.js","areas/Authentication/services/validationSchemas.js","areas/Authentication/scenes/Login/services/loginFormSchema.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/index.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/selectors.js","services/constants.js","areas/Authentication/scenes/Login/index.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/api.js","areas/Authentication/scenes/Register/services/registerFormSchema.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/index.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/selectors.js","areas/Authentication/scenes/Register/index.js","areas/Authentication/scenes/EmailVerification/services/authenticationEmailVerificationSlice/api.js","areas/Authentication/scenes/EmailVerification/services/authenticationEmailVerificationSlice/index.js","areas/Authentication/scenes/EmailVerification/services/authenticationEmailVerificationSlice/selectors.js","areas/Authentication/scenes/EmailVerification/index.js","areas/Authentication/scenes/RecoverPassword/services/authenticationRecoverPasswordSlice/api.js","areas/Authentication/scenes/RecoverPassword/services/recoverPasswordFormSchema.js","areas/Authentication/scenes/RecoverPassword/services/authenticationRecoverPasswordSlice/index.js","areas/Authentication/scenes/RecoverPassword/services/authenticationRecoverPasswordSlice/selectors.js","areas/Authentication/scenes/RecoverPassword/index.js","areas/Authentication/scenes/NewPassword/services/authenticationNewPasswordSlice/api.js","areas/Authentication/scenes/NewPassword/services/newPasswordFormSchema.js","areas/Authentication/scenes/NewPassword/services/authenticationNewPasswordSlice/index.js","areas/Authentication/scenes/NewPassword/services/authenticationNewPasswordSlice/selectors.js","areas/Authentication/scenes/NewPassword/index.js","areas/Authentication/index.js","components/Main/index.js","areas/Account/index.js","areas/Art/index.js","components/Footer/index.js","App.js","areas/Art/services/artReducer.js","areas/Authentication/services/authenticationReducer.js","areas/Account/services/accountReducer.js","services/redux/store.js","index.js"],"names":["getAuthenticatedApi","a","fetch","response","json","data","getAuthenticated","createAsyncThunk","_","rejectWithValue","success","payload","authenticatedSlice","createSlice","name","initialState","isAuthenticated","user","getAuthenticatedRequestStatus","reducers","resetAuthentication","state","action","extraReducers","builder","addCase","pending","rejected","fulfilled","authenticated","actions","initiateLoadingRequest","dispatch","useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","selectAuthenticated","selectIsAuthenticated","selectUser","selectUserId","_id","selectUsername","username","selectEmail","email","selectRank","rank","NonMobileHeaderLinks","useSelector","userId","Nav","style","flex","Link","to","className","MobileHeaderLinks","NavDropdown","title","Item","Divider","Header","Navbar","variant","bg","Brand","selectLoadingRequestStatus","selectGetAuthenticatedRequestStatus","Resource","loadingRequestStatus","Idle","idleComponent","Pending","pendingComponent","Rejected","rejectedComponent","Fulfilled","fulfilledComponent","PendingCard","Card","Body","Button","disabled","RejectedCard","onClick","GetRequestCard","alert","alertSystemSlice","reset","setAlert","Boolean","selectAlert","alertSystem","selectAlertSystem","AlertSystem","useDispatch","location","useLocation","Alert","onClose","dismissible","message","useQuery","URLSearchParams","search","ProtectedRoute","children","rest","query","set","pathname","exact","toString","getLogoutApi","getEmailVerificationApi","getEmailVerification","setErrors","errors","path","getLogout","getEmailVerificationRequestStatus","getLogoutRequestStatus","accountDashboardSlice","selectDashboard","account","dashboard","selectGetEmailVerificationRequestStatus","selectGetLogoutRequestStatus","InitiateLoadingRequestButton","text","LoadingButton","RepeatedPostRequestButton","idleText","idleVariant","hideRetry","PostRequestButton","redirectLink","Dashboard","textAlign","Badge","getProfileApi","getProfile","profileData","getProfileRequestStatus","accountProfileSlice","selectProfile","profile","selectProfileData","selectTotalArtsCreated","totalArtsCreated","selectCreatedArts","createdArts","selectTotalArtsLiked","totalArtsLiked","selectLikedArts","likedArts","selectGetProfileRequestStatus","ArtCard","props","history","useHistory","simplifiedArt","description","Footer","push","ArtHighlights","highlightArts","totalArts","browseLink","Container","Row","map","simplifiedArtIndex","Col","md","Profile","useParams","createdArtsQuery","browseCreatedArtsLink","likedArtsQuery","browseLikedArtsLink","getPagesToGenerate","totalPages","currentPage","pageChangeCallback","pagesToGenerate","counter","generatePages","index","Pagination","active","generateMinimalPages","MinimalPagination","generatePrevPagination","newPageValue","Prev","generateCollapsedPages","generateNextPagination","Next","CollapsedPagination","generateFirstPagination","First","generateLeftEllipse","shouldGenerateLeftEllipsis","Ellipsis","pageValue","getLeftEllipsisPageValue","generateExpandedPages","shift","pop","generateRightEllipse","shouldGenerateRightEllipsis","getRightEllipsisPageValue","generateLastPagination","Last","ExpandedPagination","Paginator","ArtBrowser","cardsPerRow","totalRows","simplifiedArts","rows","rowsData","rowIndex","startingCardIndex","cardIndex","cardData","getRowsFromSimplifiedArts","length","row","getArtCountApi","selectors","method","headers","body","JSON","stringify","getSimplifiedArtsApi","pageOffset","pageSize","selectBrowse","art","browse","selectArtCount","artCount","selectSimplifiedArts","getArtCountRequestStatus","selectGetArtCountRequestStatus","getSimplifiedArtsRequestStatus","selectGetSimplifiedArtsRequestStatus","selectCurrentPage","getArtCount","getSimplifiedArts","loadResources","queriedPage","getState","artBrowseSlice","setCurrentPage","Browse","artsPerPage","Math","ceil","getTotalPages","parsedQueriedPage","parseInt","get","isNaN","type","loadingRequestPromise","abort","fluid","newPage","Joi","object","string","trim","min","max","required","messages","content","postCreateArtApi","validateWithJoi","schema","validationResult","validate","abortEarly","error","details","postToApi","postApi","processPostFormRequest","formData","formSchema","setValidationErrors","validationSuccess","validationErrors","postResponse","postErrors","postPayload","postCreateArt","createFormSchema","formResponse","responseArt","postCreateArtRequestStatus","artCreateSlice","resetArt","setTitle","setDescription","setContent","selectCreate","create","selectArt","selectTitle","selectDescription","selectContent","selectResponseArtId","selectResponseArt","selectPostCreateArtRequestStatus","selectTitleError","filter","selectDescriptionError","selectContentError","Create","responseArtId","titleError","descriptionError","contentError","Form","Group","controlId","Label","Control","placeholder","value","isInvalid","onChange","event","target","Feedback","autoComplete","as","getArtApi","artId","getDeleteArtApi","getLikeArtApi","getUnlikeArtApi","selectOpen","open","selectHasLiked","hasLiked","selectCreatorId","creatorId","selectLikes","likes","selectGetArtRequestStatus","getArtRequestStatus","selectGetDeleteArtRequestStatus","getDeleteArtRequestStatus","selectGetLikeArtRequestStatus","getLikeArtRequestStatus","getArt","getDeleteArt","getLikeArt","like","setLikes","setHasLiked","artOpenSlice","Open","queriedArtId","isCreator","initiateDeleteRequest","deleteRequestStatus","initiateLikeRequest","showLoadingLikeButton","whiteSpace","fontFamily","ButtonToolbar","aria-label","ButtonGroup","color","navigator","clipboard","writeText","postLoginUserApi","userAndRecaptchaToken","alphanum","tlds","allow","password","recaptchaToken","userSchema","postLoginUser","loginFormSchema","postLoginUserRequestStatus","authenticationLoginSlice","setEmail","setPassword","setRecaptchaToken","setPostLoginUserRequestStatus","selectLogin","authentication","login","selectPassword","selectRecaptchaToken","selectPostLoginUserRequestStatus","selectEmailError","selectPasswordError","selectRecaptchaTokenError","SITE_KEY","Login","redirectValue","isRedirect","delete","emailError","passwordError","recaptchaTokenError","Text","sitekey","tokenValue","display","postRegisterUserApi","postRegisterUser","registerFormSchema","postRegisterUserRequestStatus","authenticationRegisterSlice","setUsername","selectRegister","register","selectPostRegisterUserRequestStatus","selectUsernameError","Register","usernameError","token","authenticationEmailVerificationSlice","emailVerification","selectEmailVerification","EmailVerification","postRecoverPasswordApi","recoverPasswordEmail","postRecoverPassword","recoverPasswordFormSchema","postRecoverPasswordRequestStatus","authenticationRecoverPasswordSlice","selectRecoverPassword","recoverPassword","selectPostRecoverPasswordRequestStatus","RecoverPassword","postNewPasswordApi","newPasswordAndToken","guid","postNewPassword","newPasswordFormSchema","postNewPasswordRequestStatus","authenticationNewPasswordSlice","selectNewPassword","newPassword","selectPostNewPasswordRequestStatus","NewPassword","Authentication","getInitiateLoadingRequest","href","App","minHeight","Main","artReducer","combineReducers","createReducer","browseReducer","openReducer","authenticationReducer","registerReducer","loginReducer","emailVerificationReducer","recoverPasswordReducer","newPasswordReducer","accountReducer","dashboardReducer","profileReducer","configureStore","reducer","authenticatedReducer","alertSystemReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"gOAAO,SAAeA,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,MAAM,qCADxB,cACCC,EADD,gBAGcA,EAASC,OAHvB,cAGCC,EAHD,yBAIEA,GAJF,4C,sBCGA,IAAMC,EAAmBC,YAC9B,iCAD8C,uCAE9C,WAAOC,EAAP,oBAAAP,EAAA,6DAAYQ,EAAZ,EAAYA,gBAAZ,SACqBT,IADrB,YACQK,EADR,QAGWK,QAHX,yCAIWL,EAAKM,SAJhB,gCAMWF,KANX,2CAF8C,yDAmB1CG,EAAqBC,YAAY,CACrCC,KAAM,gBACNC,aARmB,CACnBC,iBAAiB,EACjBC,KAAM,KACNC,8BAA+B,QAM/BC,SAAU,CACRC,oBAAqB,SAACC,EAAOC,GAC3BD,EAAML,iBAAkB,EACxBK,EAAMJ,KAAO,OAGjBM,cAAe,SAACC,GACdA,EACGC,QAAQnB,EAAiBoB,SAAS,SAACL,EAAOC,GACzCD,EAAMH,8BAAgC,aAEvCO,QAAQnB,EAAiBqB,UAAU,SAACN,EAAOC,GAC1CD,EAAMH,8BAAgC,cAEvCO,QAAQnB,EAAiBsB,WAAW,SAACP,EAAOC,GAC3CD,EAAMH,8BAAgC,YAEtC,MAAgCI,EAAOX,QAA/BkB,EAAR,EAAQA,cAAeZ,EAAvB,EAAuBA,KACvBI,EAAML,gBAAkBa,EACxBR,EAAMJ,KAAOA,QAKNG,EAAwBR,EAAmBkB,QAA3CV,oBAEAR,IAAf,QCjDe,SAASmB,EAAuBC,GAC7C,OAAO,WACLA,EAAS1B,M,YCDE,SAAS2B,IAGtB,MAAoCC,mBAAS,CAC3CC,WAAOC,EACPC,YAAQD,IAFV,mBAAOE,EAAP,KAAmBC,EAAnB,KAoBA,OAhBAC,qBAAU,WAER,SAASC,IAEPF,EAAc,CACZJ,MAAOO,OAAOC,WACdN,OAAQK,OAAOE,cAQnB,OAJAF,OAAOG,iBAAiB,SAAUJ,GAElCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,EC1BF,IAAMS,EAAsB,SAAC1B,GAAD,OAAWA,EAAMQ,eAEvCmB,EAAwB,SAAC3B,GAAD,OACnC0B,EAAoB1B,GAAOL,iBAEhBiC,EAAa,SAAC5B,GAAD,OAAW0B,EAAoB1B,GAAOJ,MAEnDiC,EAAe,SAAC7B,GAAD,uBAAW4B,EAAW5B,UAAtB,aAAW,EAAmB8B,KAE7CC,EAAiB,SAAC/B,GAAD,uBAAW4B,EAAW5B,UAAtB,aAAW,EAAmBgC,UAE/CC,EAAc,SAACjC,GAAD,uBAAW4B,EAAW5B,UAAtB,aAAW,EAAmBkC,OAE5CC,EAAa,SAACnC,GAAD,uBAAW4B,EAAW5B,UAAtB,aAAW,EAAmBoC,M,0CCHxD,SAASC,IACP,IAAM1C,EAAkB2C,YAAYX,GAC9BY,EAASD,YAAYT,GAE3B,OACE,eAACW,EAAA,EAAD,CAAKC,MAAO,CAAEC,KAAM,GAApB,UACE,cAACF,EAAA,EAAIG,KAAL,mBACA,cAAC,gBAAD,CAAeC,GAAG,cAAlB,SACE,cAACJ,EAAA,EAAIG,KAAL,uBAEF,cAAC,gBAAD,CAAeC,GAAG,cAAlB,SACE,cAACJ,EAAA,EAAIG,KAAL,uBAGDhD,EACC,qCACE,cAAC,gBAAD,CAAeiD,GAAE,2BAAsBL,GAAvC,SACE,cAACC,EAAA,EAAIG,KAAL,wBAGF,cAAC,gBAAD,CAAeC,GAAG,qBAAlB,SACE,cAACJ,EAAA,EAAIG,KAAL,CAAUE,UAAU,UAApB,0BAIJ,qCACE,cAAC,gBAAD,CAAeD,GAAG,wBAAlB,SACE,cAACJ,EAAA,EAAIG,KAAL,CAAUE,UAAU,UAApB,qBAEF,cAAC,gBAAD,CAAeD,GAAG,2BAAlB,SACE,cAACJ,EAAA,EAAIG,KAAL,+BAQZ,SAASG,IACP,IAAMnD,EAAkB2C,YAAYX,GAC9BY,EAASD,YAAYT,GAE3B,OACE,cAACW,EAAA,EAAD,CAAKK,UAAU,UAAf,SACE,eAACE,EAAA,EAAD,CAAaC,MAAM,OAAnB,UACE,cAACD,EAAA,EAAYE,KAAb,mBACA,cAAC,gBAAD,CAAeL,GAAG,cAAlB,SACE,cAACG,EAAA,EAAYE,KAAb,uBAEF,cAAC,gBAAD,CAAeL,GAAG,cAAlB,SACE,cAACG,EAAA,EAAYE,KAAb,uBAEF,cAACF,EAAA,EAAYG,QAAb,IACCvD,EACC,qCACE,cAAC,gBAAD,CAAeiD,GAAE,2BAAsBL,GAAvC,SACE,cAACQ,EAAA,EAAYE,KAAb,wBAEF,cAAC,gBAAD,CAAeL,GAAG,qBAAlB,SACE,cAACG,EAAA,EAAYE,KAAb,2BAIJ,qCACE,cAAC,gBAAD,CAAeL,GAAG,wBAAlB,SACE,cAACG,EAAA,EAAYE,KAAb,sBAEF,cAAC,gBAAD,CAAeL,GAAG,2BAAlB,SACE,cAACG,EAAA,EAAYE,KAAb,iCASC,SAASE,IACtB,IAAQrC,EAAUF,IAAVE,MAER,OACE,qBAAK+B,UAAU,SAAf,SACE,eAACO,EAAA,EAAD,CAAQC,QAAQ,OAAOC,GAAG,OAA1B,UACE,cAACF,EAAA,EAAOG,MAAR,0BACCzC,EAAQ,IAAM,cAACuB,EAAD,IAA2B,cAACS,EAAD,SC5FnC,SAASU,EAA2BxD,GAIjD,OFSiD,SAACA,GAAD,OACjD0B,EAAoB1B,GAAOH,8BEZzB4D,CAAoCzD,G,qBCJzB,SAAS0D,EAAT,GAOX,IANFhD,EAMC,EANDA,uBACAiD,EAKC,EALDA,qBACeC,EAId,EAJDC,cACkBC,EAGjB,EAHDC,iBACmBC,EAElB,EAFDC,kBACoBC,EACnB,EADDC,mBAEA,MAAgC,SAAzBR,EACL,cAACC,EAAD,CAAMlD,uBAAwBA,IACH,YAAzBiD,EACF,cAACG,EAAD,IAC2B,aAAzBH,EACF,cAACK,EAAD,CAAUtD,uBAAwBA,IACP,cAAzBiD,EACF,cAACO,EAAD,IAEA,U,qBCfW,SAASE,IACtB,OACE,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,6CACA,uBAFF,gCAIE,uBACA,cAACC,EAAA,EAAD,CAAQ1B,UAAU,aAAaQ,QAAQ,YAAYmB,UAAQ,EAA3D,6BCRO,SAASC,EAAT,GAAmD,IAA3B/D,EAA0B,EAA1BA,uBACrC,OACE,cAAC2D,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,WACE,uCACA,uBAFF,wCAIE,uBACA,cAACC,EAAA,EAAD,CACE1B,UAAU,aACVQ,QAAQ,SACRqB,QAAShE,EAHX,wBCNO,SAASiE,EAAT,GAIX,IAHFjE,EAGC,EAHDA,uBACAiD,EAEC,EAFDA,qBACAQ,EACC,EADDA,mBAEA,OACE,cAACT,EAAD,CACEhD,uBAAwBA,EACxBiD,qBAAsBA,EACtBE,cAAeO,EACfL,iBAAkBK,EAClBH,kBAAmBQ,EACnBN,mBAAoBA,I,YCdpBzE,EAAe,CACnBkF,MAAO,MAGHC,EAAmBrF,YAAY,CACnCC,KAAM,cACNC,eACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,IAGdqF,SAAU,SAAC/E,EAAOC,GAChB,IAAI+E,QAAQ/E,GACP,sBAAYP,GADIM,EAAM4E,MAAQ3E,EAAOX,YAMzC,EAA4BuF,EAAiBpE,QAArCqE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEPF,IAAf,QCrBaI,EAAc,SAACjF,GAAD,OAFM,SAACA,GAAD,OAAWA,EAAMkF,YAEZC,CAAkBnF,GAAO4E,O,SCOhD,SAASQ,KACtB,IAAMzE,EAAW0E,cACXC,EAAWC,cAEXX,EAAQtC,YAAY2C,GAM1B,OAJA9D,qBAAU,WACR,OAAO,kBAAMR,EAASmE,QACrB,CAACQ,IAGF,mCACGN,QAAQJ,IACP,cAACY,EAAA,EAAD,CACEnC,QAASuB,EAAMvB,QACfoC,QAAS,kBAAM9E,EAASmE,MACxBY,aAAW,EAHb,SAKGd,EAAMe,Y,aCzBF,SAASC,KACtB,OAAO,IAAIC,gBAAgBN,cAAcO,QCI5B,SAASC,GAAT,GAAgD,IAAtBC,EAAqB,EAArBA,SAAaC,EAAQ,6BACtDX,EAAWC,cACXW,EAAQN,KACdM,EAAMC,IAAI,WAAYb,EAASc,UAE/B,IAAMzG,EAAkB2C,YAAYX,GAEpC,OACE,cAAC,IAAD,2BAAWsE,GAAX,aACGtG,EACCqG,EAEA,cAAC,IAAD,CAAUK,OAAK,EAACzD,GAAI,yBAA2BsD,EAAMI,gBCnBtD,SAAeC,KAAtB,gC,8CAAO,8BAAA3H,EAAA,sEACkBC,MAAM,8BADxB,cACCC,EADD,gBAGcA,EAASC,OAHvB,cAGCC,EAHD,yBAIEA,GAJF,4C,sBAOA,SAAewH,KAAtB,gC,8CAAO,8BAAA5H,EAAA,sEACkBC,MAAM,yCADxB,cACCC,EADD,gBAGcA,EAASC,OAHvB,cAGCC,EAHD,yBAIEA,GAJF,4C,sBCDA,IAAMyH,GAAuBvH,YAClC,iCADkD,uCAElD,WAAOC,EAAP,sBAAAP,EAAA,6DAAY+B,EAAZ,EAAYA,SAAUvB,EAAtB,EAAsBA,gBAAtB,SACqBoH,KADrB,YACQxH,EADR,QAGWK,QAHX,uBAIIsB,EAAS+F,GAAU,KAJvB,mBAKW,GALX,OAOQ1H,EAAK2H,SACwB,UAA3B3H,EAAK2H,OAAO,GAAGC,KAAK,GACtBjG,EACEoE,EAAS,CAAE1B,QAAS,SAAUsC,QAAS3G,EAAK2H,OAAO,GAAGhB,WAErDhF,EAAS+F,GAAU1H,EAAK2H,UAG/BvH,IAfJ,4CAFkD,yDAsBvCyH,GAAY3H,YACvB,sBADuC,uCAEvC,WAAOC,EAAP,oBAAAP,EAAA,6DAAY+B,EAAZ,EAAYA,SAAUvB,EAAtB,EAAsBA,gBAAtB,SACqBmH,KADrB,kBAGWlH,QAHX,uBAIIsB,EAASZ,KAJb,mBAKW,GALX,OAOIX,IAPJ,4CAFuC,yDAcnCM,GAAe,CACnBoH,kCAAmC,OACnCC,uBAAwB,OACxBJ,OAAQ,IAGJK,GAAwBxH,YAAY,CACxCC,KAAM,YACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,KAGdgH,UAAW,SAAC1G,EAAOC,GACjBD,EAAM2G,OAAS1G,EAAOX,UAG1BY,cAAe,SAACC,GACdA,EACGC,QAAQqG,GAAqBpG,SAAS,SAACL,EAAOC,GAC7CD,EAAM8G,kCAAoC,aAE3C1G,QAAQqG,GAAqBnG,UAAU,SAACN,EAAOC,GAC9CD,EAAM8G,kCAAoC,cAE3C1G,QAAQqG,GAAqBlG,WAAW,SAACP,EAAOC,GAC/CD,EAAM8G,kCAAoC,eAE3C1G,QAAQyG,GAAUxG,SAAS,SAACL,EAAOC,GAClCD,EAAM+G,uBAAyB,aAEhC3G,QAAQyG,GAAUvG,UAAU,SAACN,EAAOC,GACnCD,EAAM+G,uBAAyB,cAEhC3G,QAAQyG,GAAUtG,WAAW,SAACP,EAAOC,GACpCD,EAAM+G,uBAAyB,kBAKhC,GAA6BC,GAAsBvG,QAA3CqE,GAAR,GAAQA,MAAO4B,GAAf,GAAeA,UAEPM,MAAf,QCrFaC,GAAkB,SAACjH,GAAD,OAAWA,EAAMkH,QAAQC,WAE3CC,GAA0C,SAACpH,GAAD,OACrDiH,GAAgBjH,GAAO8G,mCAEZO,GAA+B,SAACrH,GAAD,OAC1CiH,GAAgBjH,GAAO+G,wB,UCHzB,SAASO,GAAT,GAKI,IAJFzE,EAIC,EAJDA,UACAnC,EAGC,EAHDA,uBACA6G,EAEC,EAFDA,KACAlE,EACC,EADDA,QAEA,OACE,cAACkB,EAAA,EAAD,CACE1B,UAAWA,EACXQ,QAASA,EACTqB,QAAShE,EAHX,SAKG6G,IAKP,SAASC,GAAT,GAAuC,IAAd3E,EAAa,EAAbA,UACvB,OACE,cAAC0B,EAAA,EAAD,CAAQ1B,UAAWA,EAAWQ,QAAQ,YAAYmB,UAAQ,EAA1D,wBAMW,SAASiD,GAAT,GAOX,IANF5E,EAMC,EANDA,UACAnC,EAKC,EALDA,uBACAiD,EAIC,EAJDA,qBACA+D,EAGC,EAHDA,SAGC,IAFDC,mBAEC,MAFa,UAEb,MADDC,iBACC,SACD,OACE,cAAClE,EAAD,CACEhD,uBAAwBA,EACxBiD,qBAAsBA,EACtBE,cAAe,kBACb,cAACyD,GAAD,CACEzE,UAAWA,EACXnC,uBAAwBA,EACxB6G,KAAMG,EACNrE,QAASsE,KAGb5D,iBAAkB,kBAAM,cAACyD,GAAD,CAAe3E,UAAWA,KAClDoB,kBAAmB,kBACjB2D,EACE,cAACN,GAAD,CACEzE,UAAWA,EACXnC,uBAAwBA,EACxB6G,KAAMG,EACNrE,QAASsE,IAGX,cAACL,GAAD,CACEzE,UAAWA,EACXnC,uBAAwBA,EACxB6G,KAAK,QACLlE,QAAQ,YAIdc,mBAAoB,kBAClB,cAACmD,GAAD,CACEzE,UAAWA,EACXnC,uBAAwBA,EACxB6G,KAAMG,EACNrE,QAASsE,OCnEnB,SAASL,GAAT,GAKI,IAJFzE,EAIC,EAJDA,UACAnC,EAGC,EAHDA,uBACA6G,EAEC,EAFDA,KACAlE,EACC,EADDA,QAEA,OACE,cAACkB,EAAA,EAAD,CACE1B,UAAWA,EACXQ,QAASA,EACTqB,QAAShE,EAHX,SAKG6G,IAKP,SAASC,GAAT,GAAuC,IAAd3E,EAAa,EAAbA,UACvB,OACE,cAAC0B,EAAA,EAAD,CAAQ1B,UAAWA,EAAWQ,QAAQ,YAAYmB,UAAQ,EAA1D,wBAMW,SAASqD,GAAT,GAOX,IANFhF,EAMC,EANDA,UACAnC,EAKC,EALDA,uBACAiD,EAIC,EAJDA,qBACA+D,EAGC,EAHDA,SAGC,IAFDC,mBAEC,MAFa,UAEb,EADDG,EACC,EADDA,aAEA,OACE,cAACpE,EAAD,CACEhD,uBAAwBA,EACxBiD,qBAAsBA,EACtBE,cAAe,kBACb,cAAC,GAAD,CACEhB,UAAWA,EACXnC,uBAAwBA,EACxB6G,KAAMG,EACNrE,QAASsE,KAGb5D,iBAAkB,kBAAM,cAAC,GAAD,CAAelB,UAAWA,KAClDoB,kBAAmB,kBACjB,cAAC,GAAD,CACEpB,UAAWA,EACXnC,uBAAwBA,EACxB6G,KAAK,QACLlE,QAAQ,YAGZc,mBAAoB,kBAAM,cAAC,IAAD,CAAUkC,OAAK,EAACzD,GAAIkF,OCnCrC,SAASC,KACtB,IAAMpH,EAAW0E,cAEXrD,EAAWM,YAAYP,GACvBG,EAAQI,YAAYL,GACpBG,EAAOE,YAAYH,GAKnB2E,EAAoCxE,YACxC8E,IAIIzD,EAAuBrB,YAAY+E,IAMzC,OAJAlG,qBAAU,WACR,OAAO,kBAAMR,EAASmE,SACrB,IAGD,qBAAKjC,UAAU,uCAAuCJ,MAAO,CAAEC,KAAM,GAArE,SACE,gCACE,qBAAID,MAAO,CAAEuF,UAAW,UAAxB,qBAA6ChG,EAA7C,OACA,uBACA,oBAAIa,UAAU,WAAd,wBAHF,IAG4Cb,EAH5C,IAGsD,uBACpD,oBAAIa,UAAU,WAAd,qBACCX,EAAO,IACE,eAATE,GAAyB,cAAC6F,GAAA,EAAD,CAAO5E,QAAQ,SAAf,0BAC1B,uBACA,oBAAIR,UAAU,WAAd,oBARF,IAQwCT,EARxC,IAQ8C,uBAC5C,sBAAKS,UAAU,OAAf,UACY,eAATT,GACC,cAACqF,GAAD,CACE5E,UAAU,OACVnC,uBA7ByB,WACnCC,EAAS8F,OA6BC9C,qBAAsBmD,EACtBY,SAAS,4BAGb,cAACG,GAAD,CACEnH,uBA5BqB,kBAAMC,EAASkG,OA6BpClD,qBAAsBA,EACtB+D,SAAS,SACTC,YAAY,UACZG,aAAa,kCCrElB,SAAeI,GAAtB,mC,8CAAO,WAA6B3F,GAA7B,iBAAA3D,EAAA,sEACkBC,MAAM,wBAAD,OAAyB0D,IADhD,cACCzD,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAGEA,GAHF,4C,sBCGA,IAAMmJ,GAAajJ,YACxB,qBADwC,uCAExC,WAAOqD,EAAP,wBAAA3D,EAAA,6DAAiBQ,EAAjB,EAAiBA,gBAAjB,SACqC8I,GAAc3F,GADnD,mBACUlD,EADV,EACUA,QAASC,EADnB,EACmBA,SAEbD,EAHN,0CAIWC,GAJX,iCAMWF,KANX,4CAFwC,yDAapCM,GAAe,CACnB0I,YAAa,GACbC,wBAAyB,QAGrBC,GAAsB9I,YAAY,CACtCC,KAAM,UACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,MAGhBQ,cAAe,SAACC,GACdA,EACGC,QAAQ+H,GAAW9H,SAAS,SAACL,EAAOC,GACnCD,EAAMqI,wBAA0B,aAEjCjI,QAAQ+H,GAAW7H,UAAU,SAACN,EAAOC,GACpCD,EAAMqI,wBAA0B,cAEjCjI,QAAQ+H,GAAW5H,WAAW,SAACP,EAAOC,GACrCD,EAAMqI,wBAA0B,YAChCrI,EAAMoI,YAAcnI,EAAOX,cAKpBwF,GAAUwD,GAAoB7H,QAA9BqE,MAEAwD,MAAf,QC9CaC,GAAgB,SAACvI,GAAD,OAAWA,EAAMkH,QAAQsB,SAEzCC,GAAoB,SAACzI,GAAD,OAAWuI,GAAcvI,GAAOoI,aAIpDrG,GAAiB,SAAC/B,GAAD,OAAWyI,GAAkBzI,GAAOgC,UAErD0G,GAAyB,SAAC1I,GAAD,OACpCyI,GAAkBzI,GAAO2I,kBAEdC,GAAoB,SAAC5I,GAAD,OAC/ByI,GAAkBzI,GAAO6I,aAEdC,GAAuB,SAAC9I,GAAD,OAClCyI,GAAkBzI,GAAO+I,gBAEdC,GAAkB,SAAChJ,GAAD,OAAWyI,GAAkBzI,GAAOiJ,WAEtDC,GAAgC,SAAClJ,GAAD,OAC3CuI,GAAcvI,GAAOqI,yB,mBCfR,SAASc,GAAQC,GAC9B,IAAMC,EAAUC,cACVpD,EAAQN,KAEN2D,EAAkBH,EAAlBG,cACAzH,EAA4ByH,EAA5BzH,IAAKkB,EAAuBuG,EAAvBvG,MAAOwG,EAAgBD,EAAhBC,YAEpB,OACE,eAACnF,EAAA,EAAD,CAAMxB,UAAU,QAAQS,GAAG,QAAQiE,KAAK,OAAxC,UACE,eAAClD,EAAA,EAAKC,KAAN,CAAW7B,MAAO,CAAEuF,UAAW,UAA/B,UACE,6BAAKhF,IACL,uBACCwG,KAEH,cAACnF,EAAA,EAAKoF,OAAN,UACE,cAAClF,EAAA,EAAD,CACE1B,UAAU,QACVQ,QAAQ,UACRqB,QAAS,kBAAM2E,EAAQK,KAAR,oBAA0B5H,EAA1B,YAAiCoE,EAAMI,cAHxD,uBCfO,SAASqD,GAAT,GAKX,IAJF9G,EAIC,EAJDA,UACA+G,EAGC,EAHDA,cACAC,EAEC,EAFDA,UACAC,EACC,EADDA,WAEMT,EAAUC,cAEhB,OACE,sBAAKzG,UAAWA,EAAhB,UACE,cAACwB,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,cAACyF,EAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGH,EAAY,EACXD,EAAcK,KAAI,SAACV,EAAeW,GAAhB,OAChB,cAACC,GAAA,EAAD,CAA8BC,GAAI,EAAlC,SACE,cAACjB,GAAD,CAASI,cAAeA,KADhBW,MAKZ,cAACC,GAAA,EAAD,UACE,oBAAItH,UAAU,aAAaJ,MAAO,CAAEuF,UAAW,UAA/C,kDASX6B,EAAY,IACVA,GAAa,EACZ,sBAAKhH,UAAU,cAAf,yBAA0CgH,KAE1C,sBAAKhH,UAAU,cAAf,yBACegH,EACb,cAACtF,EAAA,EAAD,CACE1B,UAAU,UACVQ,QAAQ,UACRqB,QAAS,WACP2E,EAAQK,KAAKI,IAJjB,+BCxBG,SAASO,KACtB,IAAM1J,EAAW0E,cACT9C,EAAW+H,cAAX/H,OAEFP,EAAWM,YAAYP,IACvB4G,EAAmBrG,YAAYoG,IAC/BG,EAAcvG,YAAYsG,IAC1B2B,EAAmB3E,KACzB2E,EAAiBpE,IAAI,kBAAmB5D,GACxC,IAAMiI,EAAqB,sBAAkBD,EAAiBjE,YAExDyC,EAAiBzG,YAAYwG,IAC7BG,EAAY3G,YAAY0G,IACxByB,EAAiB7E,KACvB6E,EAAetE,IAAI,gBAAiB5D,GACpC,IAAMmI,EAAmB,sBAAkBD,EAAenE,YAEpD5F,EAAyB,kBAAMC,EAASwH,GAAW5F,KACnDoB,EAAuBrB,YAAY4G,IAOzC,OALA/H,qBAAU,WAER,OADAT,IACO,kBAAMC,EAASmE,SACrB,CAACvC,IAGF,qBAAKM,UAAU,qCAAqCJ,MAAO,CAAEC,KAAM,GAAnE,SACE,cAACiC,EAAD,CACEjE,uBAAwBA,EACxBiD,qBAAsBA,EACtBQ,mBAAoB,kBAClB,gCACE,oBAAI1B,MAAO,CAAEuF,UAAW,UAAxB,SAAqChG,IACrC,uBAEA,2CACA,cAAC2H,GAAD,CACEC,cAAef,EACfgB,UAAWlB,EACXmB,WAAYU,IAEd,uBACA,uCACA,cAACb,GAAD,CACEC,cAAeX,EACfY,UAAWd,EACXe,WAAYY,Y,cC9DbC,GAAqB,SAChCC,EACAC,EACAC,GAEA,IAAIC,EAAkB,GACtB,GAAIH,GAAc,EAChB,IAAK,IAAII,EAAU,EAAGA,EAAUJ,EAAa,EAAGI,IAC9CD,EAAgBrB,KAAKsB,QAGvB,IAAK,IAAIA,EAAUH,EAAc,EAAGG,EAAUH,EAAc,EAAGG,IACzDA,EAAU,GAAKA,GAAWJ,GAC5BG,EAAgBrB,KAAKsB,GAI3B,OAAOD,GAGIE,GAAgB,SAC3BL,EACAC,EACAC,EACAC,GAEA,OAAOA,EAAgBd,KAAI,SAACiB,GAAD,OACzB,cAACC,GAAA,EAAWlI,KAAZ,CAEEmI,OAAQF,GAASL,EACjBnG,QAAS,kBAAMoG,EAAmBI,IAHpC,SAKGA,GAJIA,OC3BX,SAASG,GAAT,GAAgF,IAAhDT,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,mBACvD,OAAOG,GACLL,EACAC,EACAC,EACAH,GAAmBC,EAAYC,IAIpB,SAASS,GAAkBlC,GACxC,OAAO,cAAC+B,GAAA,EAAD,UAAaE,GAAqBjC,KCV3C,SAASmC,GAAT,GAAsE,IAApCV,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,mBACzCU,EAAeX,EAAc,EAIjC,OAHIW,GAAgB,IAClBA,EAAe,GAEV,cAACL,GAAA,EAAWM,KAAZ,CAAiB/G,QAAS,kBAAMoG,EAAmBU,MAG5D,SAASE,GAAT,GAII,IAHFd,EAGC,EAHDA,WACAC,EAEC,EAFDA,YACAC,EACC,EADDA,mBAEA,OAAOG,GACLL,EACAC,EACAC,EACAH,GAAmBC,EAAYC,IAInC,SAASc,GAAuBvC,GAC9B,IAAQwB,EAAgDxB,EAAhDwB,WAAYC,EAAoCzB,EAApCyB,YAAaC,EAAuB1B,EAAvB0B,mBAE7BU,EAAeX,EAAc,EAIjC,OAHIW,GAAgBZ,IAClBY,EAAeZ,GAEV,cAACO,GAAA,EAAWS,KAAZ,CAAiBlH,QAAS,kBAAMoG,EAAmBU,MAG7C,SAASK,GAAoBzC,GAC1C,OACE,eAAC+B,GAAA,EAAD,WACGI,GAAuBnC,GACvBsC,GAAuBtC,GACvBuC,GAAuBvC,MCV9B,SAAS0C,GAAT,GAA0D,IAAvBhB,EAAsB,EAAtBA,mBACjC,OAAO,cAACK,GAAA,EAAWY,MAAZ,CAAkBrH,QAAS,kBAAMoG,EAAmB,MAG7D,SAASS,GAAT,GAAsE,IAApCV,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,mBACzCU,EAAeX,EAAc,EAIjC,OAHIW,GAAgB,IAClBA,EAAe,GAEV,cAACL,GAAA,EAAWM,KAAZ,CAAiB/G,QAAS,kBAAMoG,EAAmBU,MAG5D,SAASQ,GAAT,GAA8E,EAA/CpB,WAAgD,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,mBACtD,OAvCF,SAAoCF,EAAYC,GAC9C,OAAOA,EAAc,EAuCnBoB,CAA2BrB,EAAYC,IACrC,cAACM,GAAA,EAAWe,SAAZ,CACExH,QAAS,kBACPoG,EAnCV,SAAkCF,EAAYC,GAC5C,IAAMsB,EAAYtB,EAAc,EAChC,OAAIsB,GAAa,EACR,EAEAA,EA8BkBC,CAAyBxB,EAAYC,OAOlE,SAASwB,GAAT,GAII,IAHFzB,EAGC,EAHDA,WACAC,EAEC,EAFDA,YACAC,EACC,EADDA,mBAEIC,EAAkBJ,GAAmBC,EAAYC,GAGrD,OAFAE,EAAgBuB,QAChBvB,EAAgBwB,MACTtB,GACLL,EACAC,EACAC,EACAC,GAIJ,SAASyB,GAAT,GAAgF,IAAhD5B,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,mBACvD,OA/DF,SAAqCF,EAAYC,GAC/C,OAAOA,EAAcD,EAAa,EA+DhC6B,CAA4B7B,EAAYC,IACtC,cAACM,GAAA,EAAWe,SAAZ,CACExH,QAAS,kBACPoG,EAtDV,SAAmCF,EAAYC,GAC7C,IAAMsB,EAAYtB,EAAc,EAChC,OAAIsB,GAAavB,EACRA,EAEAuB,EAiDkBO,CAA0B9B,EAAYC,OAOnE,SAASc,GAAT,GAII,IAHFf,EAGC,EAHDA,WACAC,EAEC,EAFDA,YACAC,EACC,EADDA,mBAEIU,EAAeX,EAAc,EAIjC,OAHIW,GAAgBZ,IAClBY,EAAeZ,GAEV,cAACO,GAAA,EAAWS,KAAZ,CAAiBlH,QAAS,kBAAMoG,EAAmBU,MAG5D,SAASmB,GAAT,GAAqE,IAAnC/B,EAAkC,EAAlCA,WAAYE,EAAsB,EAAtBA,mBAC5C,OAAO,cAACK,GAAA,EAAWyB,KAAZ,CAAiBlI,QAAS,kBAAMoG,EAAmBF,MAG7C,SAASiC,GAAmBzD,GACzC,IAAQwB,EAAgDxB,EAAhDwB,WAAYC,EAAoCzB,EAApCyB,YAAaC,EAAuB1B,EAAvB0B,mBAEjC,OACE,eAACK,GAAA,EAAD,WACGW,GAAwB1C,GACxBmC,GAAuBnC,GACxB,cAAC+B,GAAA,EAAWlI,KAAZ,CACEmI,OAAQ,IAAMP,EACdnG,QAAS,kBAAMoG,EAAmB,IAFpC,eAMCkB,GAAoB5C,GACpBiD,GAAsBjD,GACtBoD,GAAqBpD,GACtB,cAAC+B,GAAA,EAAWlI,KAAZ,CACEmI,OAAQR,IAAeC,EACvBnG,QAAS,kBAAMoG,EAAmBF,IAFpC,SAIGA,IAEFe,GAAuBvC,GACvBuD,GAAuBvD,MCpHf,SAAS0D,GAAT,GAKX,IAJFjK,EAIC,EAJDA,UACAgI,EAGC,EAHDA,YACAD,EAEC,EAFDA,WACAE,EACC,EADDA,mBAEA,OACE,qBAAKjI,UAAW,2CAA6CA,EAA7D,SACG+H,GAAc,EACb,cAACU,GAAD,CACET,YAAaA,EACbD,WAAYA,EACZE,mBAAoBA,IAEpBF,GAAc,EAChB,cAACiB,GAAD,CACEhB,YAAaA,EACbD,WAAYA,EACZE,mBAAoBA,IAGtB,cAAC+B,GAAD,CACEhC,YAAaA,EACbD,WAAYA,EACZE,mBAAoBA,MCvBf,SAASiC,GAAT,GAKX,IAJFlK,EAIC,EAJDA,UACAmK,EAGC,EAHDA,YACAC,EAEC,EAFDA,UACAC,EACC,EADDA,eAEMC,ECXD,SACLH,EACAC,EACAC,GAGA,IADA,IAAIE,EAAW,GACNC,EAAW,EAAGA,EAAWJ,EAAWI,IAAY,CACvDD,EAASC,GAAY,GAGrB,IAFA,IACIC,EADuBD,EAAWL,EAGhCO,EAAYD,EAChBC,EAAYD,EAAoBN,EAChCO,IACA,CACA,IAAIC,EAAWN,EAAeK,GAC1BC,GAAUJ,EAASC,GAAU3D,KAAK8D,IAG1C,OAAOJ,EDRMK,CACXT,EACAC,EACAC,GAGF,OACE,qBAAKrK,UAAW,eAAiBA,EAAjC,SAC6B,IAA1BqK,EAAeQ,OACd,oBAAI7K,UAAU,aAAaJ,MAAO,CAAEuF,UAAW,UAA/C,wCAIAmF,EAAKlD,KAAI,SAAC0D,EAAKN,GAAN,OACP,cAACrD,GAAA,EAAD,UACG2D,EAAI1D,KAAI,SAACV,EAAeW,GAAhB,OACP,cAACC,GAAA,EAAD,CACEtH,UAAU,OACVuH,GAAI,GAAK4C,EAFX,SAKE,cAAC7D,GAAD,CAASI,cAAeA,KAFnBW,OALDmD,QEzBb,SAAeO,GAAtB,mC,8CAAO,WAA8BC,GAA9B,iBAAAjP,EAAA,sEACkBC,MAAM,2BAA4B,CACvDiP,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEL,gBANpB,cACC/O,EADD,gBAScA,EAASC,OATvB,cASCC,EATD,yBAUEA,GAVF,4C,sBAaA,SAAemP,GAAtB,uC,8CAAO,WAAoCC,EAAYC,EAAUR,GAA1D,iBAAAjP,EAAA,sEACkBC,MAAM,kCAAD,OACQuP,EADR,YACsBC,GAChD,CACEP,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEL,gBARtB,cACC/O,EADD,gBAYcA,EAASC,OAZvB,cAYCC,EAZD,yBAaEA,GAbF,4C,sBCbA,IAAMsP,GAAe,SAACtO,GAAD,OAAWA,EAAMuO,IAAIC,QAEpCC,GAAiB,SAACzO,GAAD,OAAWsO,GAAatO,GAAO0O,UAKhDC,GAAuB,SAAC3O,GAAD,OAClCsO,GAAatO,GAAOkN,gBAiBT1J,GAA6B,SAACxD,GACzC,IAAM4O,EAtBsC,SAAC5O,GAAD,OAC5CsO,GAAatO,GAAO4O,yBAqBaC,CAA+B7O,GAC1D8O,EAL4C,SAAC9O,GAAD,OAClDsO,GAAatO,GAAO8O,+BAKlBC,CAAqC/O,GACvC,MAAoC,aAA7B4O,GAC8B,aAAnCE,EACE,WAC6B,cAA7BF,GACmC,cAAnCE,EACA,YACA,WAGOE,GAAoB,SAAChP,GAAD,OAAWsO,GAAatO,GAAO6K,aClCnDoE,GAAc/P,YACzB,qBADyC,uCAEzC,WAAO2O,EAAP,wBAAAjP,EAAA,6DAAoBQ,EAApB,EAAoBA,gBAApB,SACqCwO,GAAeC,GADpD,mBACUxO,EADV,EACUA,QAASC,EADnB,EACmBA,QACZD,EAFP,0CAGWD,KAHX,iCAKWE,GALX,4CAFyC,yDAY9B4P,GAAoBhQ,YAC/B,2BAD+C,uCAE/C,2CAAAN,EAAA,6DAASwP,EAAT,EAASA,WAAYC,EAArB,EAAqBA,SAAUR,EAA/B,EAA+BA,UAAezO,EAA9C,EAA8CA,gBAA9C,SACqC+O,GACjCC,EACAC,EACAR,GAJJ,mBACUxO,EADV,EACUA,QAASC,EADnB,EACmBA,QAKZD,EANP,0CAOWD,KAPX,iCASWE,GATX,4CAF+C,yDAgBpC6P,GAAgBjQ,YAC3B,uBAD2C,uCAE3C,yCAAAN,EAAA,yDACIwP,EADJ,EACIA,WAAYC,EADhB,EACgBA,SAAUe,EAD1B,EAC0BA,YAAavB,EADvC,EACuCA,UACnCwB,EAFJ,EAEIA,SAAU1O,EAFd,EAEcA,UAE8C,IAAhC8N,GAAeY,KAJ3C,gCAKgC1O,EAASsO,GAAYpB,IALrD,UAOyBmB,GAAkBK,OAAgBD,EAP3D,kCASUzO,EAASuO,GAAkB,CAAEd,aAAYC,WAAUR,eAT7D,4CAF2C,yDAevCnO,GAAe,CACnBgP,UAAW,EACXE,yBAA0B,OAC1B1B,eAAgB,GAChB4B,+BAAgC,OAChCjE,YAAa,GAGTyE,GAAiB9P,YAAY,CACjCC,KAAM,SACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,KAGd6P,eAAgB,SAACvP,EAAOC,GACtBD,EAAM6K,YAAc5K,EAAOX,UAG/BY,cAAe,SAACC,GACdA,EACGC,QAAQ6O,GAAY5O,SAAS,SAACL,EAAOC,GACpCD,EAAM4O,yBAA2B,aAElCxO,QAAQ6O,GAAY3O,UAAU,SAACN,EAAOC,GACrCD,EAAM4O,yBAA2B,cAElCxO,QAAQ6O,GAAY1O,WAAW,SAACP,EAAOC,GACtCD,EAAM4O,yBAA2B,YACjC5O,EAAM0O,SAAWzO,EAAOX,WAEzBc,QAAQ8O,GAAkB7O,SAAS,SAACL,EAAOC,GAC1CD,EAAM8O,+BAAiC,aAExC1O,QAAQ8O,GAAkB5O,UAAU,SAACN,EAAOC,GAC3CD,EAAM8O,+BAAiC,cAExC1O,QAAQ8O,GAAkB3O,WAAW,SAACP,EAAOC,GAC5CD,EAAM8O,+BAAiC,YACvC9O,EAAMkN,eAAiBjN,EAAOX,cAK/B,GAAkCgQ,GAAe7O,QAAzCqE,GAAR,GAAQA,MAAOyK,GAAf,GAAeA,eAEPD,MAAf,QCnEe,SAASE,KACtB,IAAM7O,EAAW0E,cACXa,EAAQN,KACRyD,EAAUC,cACVhE,EAAWC,cAEXmJ,EAAWpM,YAAYmM,IACvB5D,EAAcvI,YAAY0M,IAC1B9B,EAAiB5K,YAAYqM,IAE7B/D,ECrCO,SAAuBoC,EAAaC,EAAWyB,GAC5D,IAAMe,EAAczC,EAAcC,EAClC,OAAOyC,KAAKC,KAAKjB,EAAWe,GDmCTG,CAbD,EACF,EAYyClB,GAEnDmB,EAAoBC,SAAS5J,EAAM6J,IAAI,SACvCX,EACJY,MAAMH,IACNA,EAAoB,GACpBA,EAAoBjF,EAChB,EACAiF,GAC6B,IAAdnB,GAA0BU,IAAgBvE,GAE7ClK,EAAS4O,GAAeH,IAE1C,IAQMvB,EAAY,CARM,CACtBoC,KAAM,kBACN3Q,QAAS4G,EAAM6J,IAAI,oBAEC,CACpBE,KAAM,gBACN3Q,QAAS4G,EAAM6J,IAAI,mBAIfrP,EAAyB,kBAC7BC,EACEwO,GAAc,CACZf,WAAYvD,EAAc,EAC1BwD,SAAUrB,GACVoC,cACAvB,gBAIAlK,EAAuBrB,YAAYkB,IAWzC,OATArC,qBAAU,WACR,OAAO,kBAAMR,EAASmE,SACrB,IAEH3D,qBAAU,WACR,IAAM+O,EAAwBxP,IAC9B,OAAO,kBAAMwP,EAAsBC,WAClC,CAACtF,IAGF,qBAAKhI,UAAU,gCAAgCJ,MAAO,CAAEC,KAAM,GAA9D,SACE,gCACE,oBAAID,MAAO,CAAEuF,UAAW,UAAxB,yBACA,uBACA,cAACrD,EAAD,CACEjE,uBAAwBA,EACxBiD,qBAAsBA,EACtBQ,mBAAoB,kBAClB,cAAC4F,EAAA,EAAD,CAAWlH,UAAU,OAAOuN,OAAK,EAAjC,SACE,cAACrD,GAAD,CACEC,YApEI,EAqEJC,UApEE,EAqEFC,eAAgBA,SAKxB,cAACJ,GAAD,CACEjK,UAAU,UACVgI,YAAaA,EACbD,WAAYA,EACZE,mBAAoB,SAACuF,GACnBnK,EAAMC,IAAI,OAAQkK,GAClBhH,EAAQK,KAAKpE,EAASc,SAAW,IAAMF,EAAMI,oB,kCEvG1CgK,QAAIC,OAAO,CACxBvN,MAAOsN,KAAIE,SAASC,OAAOC,IAAI,GAAGC,IAAI,IAAIC,WAAWC,SAAS,CAC5D,eAAgB,qBAChB,aAAc,4CACd,aAAc,4DAEhBrH,YAAa8G,KAAIE,SAASC,OAAOC,IAAI,GAAGC,IAAI,KAAKC,WAAWC,SAAS,CACnE,eAAgB,2BAChB,aAAc,kDACd,aACE,mEAEJC,QAASR,KAAIE,SAASE,IAAI,GAAGC,IAAI,KAAMC,WAAWC,SAAS,CACzD,eAAgB,uBAChB,aAAc,8CACd,aAAc,kECjBX,SAAeE,GAAtB,mC,8CAAO,WAAgCxC,GAAhC,iBAAA3P,EAAA,sEACkBC,MAAM,kBAAmB,CAC9CiP,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUK,KANlB,cACCzP,EADD,gBAScA,EAASC,OATvB,cASCC,EATD,yBAUEA,GAVF,4C,sBCAQ,SAASgS,GAAgBhS,EAAMiS,GAC5C,IAAMC,EAAmBD,EAAOE,SAASnS,EAAM,CAC7CoS,YAAY,IAGR/R,GAAW2F,QAAQkM,EAAiBG,OAQ1C,MAAO,CAAEhS,UAASsH,QANftH,GACD6R,EAAiBG,MAAMC,QAAQrH,KAAI,kBAAwB,CACzDtE,QADiC,EAAGA,QAEpCiB,KAFiC,EAAYA,UCRpC,SAAe2K,GAA9B,qC,8CAAe,WAAyBvS,EAAMwS,GAA/B,qBAAA5S,EAAA,sEACU4S,EAAQxS,GADlB,UACPF,EADO,OAGPO,EAAUP,EAASO,QACnBC,EAAUD,GAAWP,EAASQ,QAC9BqH,GAAUtH,GAAWP,EAAS6H,QAEhCtH,EAPS,0CAOO,CAAEA,UAASC,YAPlB,iCAQD,CAAED,UAASsH,WARV,6C,sBCKA,SAAe8K,GAA9B,2C,8CAAe,WACbC,EACAC,EACAH,EACA7Q,EACAiR,GALa,yBAAAhT,EAAA,2DAQXoS,GAAgBU,EAAUC,GADXE,EAPJ,EAOLxS,QAAoCyS,EAP/B,EAOuBnL,OAG/BkL,EAVQ,uBAWXlR,EAASiR,EAAoBE,IAXlB,kBAYJ,CAAEzS,SAAS,EAAOsH,OAAQmL,IAZtB,cAebnR,EAASiR,EAAoB,KAfhB,SAiBcL,GAAUG,EAAUF,GAjBlC,UAiBPO,EAjBO,OAkBoBA,EAAzB1S,QAlBK,wBAqBK2S,EAAeD,EAAvBpL,UAGwB,UAA1BqL,EAAW,GAAGpL,KAAK,GACrBjG,EACEoE,EAAS,CAAE1B,QAAS,SAAUsC,QAASqM,EAAW,GAAGrM,WAEpDhF,EAASiR,EAAoBI,KA5BzB,kBA+BJ,CAAE3S,SAAS,EAAOsH,OAAQqL,GAAc,KA/BpC,eAkCIC,EAAgBF,EAAzBzS,QAlCK,kBAmCN,CAAED,SAAS,EAAMC,QAAS2S,IAnCpB,6C,sBCER,IAAMC,GAAgBhT,YAC3B,uBAD2C,uCAE3C,WAAOqP,EAAP,sBAAA3P,EAAA,6DAAc+B,EAAd,EAAcA,SAAUvB,EAAxB,EAAwBA,gBAAxB,SAC6BqS,GACzBlD,EACA4D,GACApB,GACApQ,EACAiR,IANJ,UACQQ,EADR,QASsBA,EAAZ/S,QATV,yCAYW+S,EAAa9S,SAZxB,UAc2C,oBAAnC8S,EAAazL,OAAO,GAAGC,KAAK,GAdpC,wBAeMjG,EAASZ,KAff,kBAgBaX,EAAgB,wBAhB7B,iCAmBWA,KAnBX,4CAF2C,yDA0BvCM,GAAe,CACnB6O,IAAK,CACHvL,MAAO,GACPwG,YAAa,GACbsH,QAAS,IAEXuB,YAAa,KACbP,iBAAkB,GAClBQ,2BAA4B,QAGjBC,GAAiB/S,YAAY,CACxCC,KAAM,SACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,KAGd8S,SAAU,SAACxS,EAAOC,GAChBD,EAAMuO,IAAN,eAAiB7O,GAAa6O,MAGhCkE,SAAU,SAACzS,EAAOC,GAChBD,EAAMuO,IAAIvL,MAAQ/C,EAAOX,SAG3BoT,eAAgB,SAAC1S,EAAOC,GACtBD,EAAMuO,IAAI/E,YAAcvJ,EAAOX,SAGjCqT,WAAY,SAAC3S,EAAOC,GAClBD,EAAMuO,IAAIuC,QAAU7Q,EAAOX,SAG7BsS,oBAAqB,SAAC5R,EAAOC,GAC3BD,EAAM8R,iBAAmB7R,EAAOX,UAGpCY,cAAe,SAACC,GACdA,EACGC,QAAQ8R,GAAc7R,SAAS,SAACL,EAAOC,GACtCD,EAAMsS,2BAA6B,aAEpClS,QAAQ8R,GAAc5R,UAAU,SAACN,EAAOC,GAChB,wBAAnBA,EAAOX,UACTU,EAAMsS,2BAA6B,eAEtClS,QAAQ8R,GAAc3R,WAAW,SAACP,EAAOC,GACxCD,EAAMqS,YAAcpS,EAAOX,QAC3BU,EAAMsS,2BAA6B,kBAKpC,GAOHC,GAAe9R,QANjBqE,GADK,GACLA,MACA0N,GAFK,GAELA,SACAC,GAHK,GAGLA,SACAC,GAJK,GAILA,eACAC,GALK,GAKLA,WACAf,GANK,GAMLA,oBAGaW,MAAf,QCjGaK,GAAe,SAAC5S,GAAD,OAAWA,EAAMuO,IAAIsE,QAEpCC,GAAY,SAAC9S,GAAD,OAAW4S,GAAa5S,GAAOuO,KAE3CwE,GAAc,SAAC/S,GAAD,OAAW8S,GAAU9S,GAAOgD,OAE1CgQ,GAAoB,SAAChT,GAAD,OAAW8S,GAAU9S,GAAOwJ,aAEhDyJ,GAAgB,SAACjT,GAAD,OAAW8S,GAAU9S,GAAO8Q,SAI5CoC,GAAsB,SAAClT,GAAD,uBAFF,SAACA,GAAD,OAAW4S,GAAa5S,GAAOqS,YAElBc,CAAkBnT,UAA7B,aAAW,EAA0B8B,KAE3DsR,GAAmC,SAACpT,GAAD,OAC9C4S,GAAa5S,GAAOsS,4BAETe,GAAmB,SAACrT,GAAD,uBAC9B4S,GAAa5S,GAAO8R,iBAAiBwB,QACnC,gBAAG1M,EAAH,EAAGA,KAAH,OAA8B,IAAhBA,EAAK8G,QAA4B,UAAZ9G,EAAK,MACxC,UAH4B,aAC9B,EAEMjB,SAEK4N,GAAyB,SAACvT,GAAD,uBACpC4S,GAAa5S,GAAO8R,iBAAiBwB,QACnC,gBAAG1M,EAAH,EAAGA,KAAH,OAA8B,IAAhBA,EAAK8G,QAA4B,gBAAZ9G,EAAK,MACxC,UAHkC,aACpC,EAEMjB,SAEK6N,GAAqB,SAACxT,GAAD,uBAChC4S,GAAa5S,GAAO8R,iBAAiBwB,QACnC,gBAAG1M,EAAH,EAAGA,KAAH,OAA8B,IAAhBA,EAAK8G,QAA4B,YAAZ9G,EAAK,MACxC,UAH8B,aAChC,EAEMjB,SCJO,SAAS8N,KACtB,IAAM9S,EAAW0E,cAEXkJ,EAAMjM,YAAYwQ,IAClB9P,EAAQV,YAAYyQ,IACpBvJ,EAAclH,YAAY0Q,IAC1BlC,EAAUxO,YAAY2Q,IACtBX,EAA6BhQ,YACjC8Q,IAEIM,EAAgBpR,YAAY4Q,IAE5BS,EAAarR,YAAY+Q,IACzBO,EAAmBtR,YAAYiR,IAC/BM,EAAevR,YAAYkR,IAMjC,OAJArS,qBAAU,WACR,OAAO,kBAAMR,EAASmE,SACrB,IAGD,sBAAKjC,UAAU,gCAAgCJ,MAAO,CAAEC,KAAM,GAA9D,UACE,gCACE,oBAAIG,UAAU,OAAOJ,MAAO,CAAEuF,UAAW,UAAzC,wBAGA,0BAGF,eAAC8L,GAAA,EAAD,WACE,eAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,oBACA,cAACH,GAAA,EAAKI,QAAN,CACEjE,KAAK,OACLkE,YAAY,QACZC,MAAOpR,EACPqR,UAAWrP,QAAQ2O,GACnBW,SAAU,SAACC,GAAD,OAAW5T,EAAS8R,GAAS8B,EAAMC,OAAOJ,WAEtD,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACG0D,OAIL,eAACG,GAAA,EAAKC,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,0BACA,cAACH,GAAA,EAAKI,QAAN,CACEjE,KAAK,OACLkE,YAAY,cACZC,MAAO5K,EACP6K,UAAWrP,QAAQ4O,GACnBU,SAAU,SAACC,GAAD,OAAW5T,EAAS+R,GAAe6B,EAAMC,OAAOJ,WAE5D,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACG2D,OAIL,eAACE,GAAA,EAAKC,MAAN,CAAYC,UAAU,UAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,sBACA,cAACH,GAAA,EAAKI,QAAN,CACEQ,aAAa,MACbC,GAAG,WACHxH,KAAM,EACNgH,YAAY,UACZC,MAAOtD,EACPuD,UAAWrP,QAAQ6O,GACnBS,SAAU,SAACC,GAAD,OAAW5T,EAASgS,GAAW4B,EAAMC,OAAOJ,WAExD,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACG4D,UAKP,sBAAKhR,UAAU,cAAf,UACE,cAAC0B,EAAA,EAAD,CAAQlB,QAAQ,UAAUqB,QAAS,kBAAM/D,EAAS6R,OAAlD,iBAIA,cAAC3K,GAAD,CACEhF,UAAU,UACVnC,uBAAwB,kBAAMC,EAASuR,GAAc3D,KACrD5K,qBAAsB2O,EACtB5K,SAAS,SACTI,aAAY,oBAAe4L,W,wBC/G9B,SAAekB,GAAtB,mC,8CAAO,WAAyBC,GAAzB,iBAAAjW,EAAA,sEACkBC,MAAM,iBAAD,OAAkBgW,IADzC,cACC/V,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAe8V,GAAtB,mC,8CAAO,WAA+BD,GAA/B,iBAAAjW,EAAA,sEACkBC,MAAM,mBAAD,OAAoBgW,IAD3C,cACC/V,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAe+V,GAAtB,mC,8CAAO,WAA6BF,GAA7B,iBAAAjW,EAAA,sEACkBC,MAAM,sBAAD,OAAuBgW,IAD9C,cACC/V,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAGEA,GAHF,4C,sBAMA,SAAegW,GAAtB,mC,8CAAO,WAA+BH,GAA/B,iBAAAjW,EAAA,sEACkBC,MAAM,wBAAD,OAAyBgW,IADhD,cACC/V,EADD,gBAEcA,EAASC,OAFvB,cAECC,EAFD,yBAGEA,GAHF,4C,sBClBA,IAAMiW,GAAa,SAACjV,GAAD,OAAWA,EAAMuO,IAAI2G,MAElCC,GAAiB,SAACnV,GAAD,OAAWiV,GAAWjV,GAAOoV,UAE9CtC,GAAY,SAAC9S,GAAD,OAAWiV,GAAWjV,GAAOuO,KAEzC8G,GAAkB,SAACrV,GAAD,OAAW8S,GAAU9S,GAAOsV,WAI9CvC,GAAc,SAAC/S,GAAD,OAAW8S,GAAU9S,GAAOgD,OAE1CgQ,GAAoB,SAAChT,GAAD,OAAW8S,GAAU9S,GAAOwJ,aAEhDyJ,GAAgB,SAACjT,GAAD,OAAW8S,GAAU9S,GAAO8Q,SAE5CyE,GAAc,SAACvV,GAAD,OAAW8S,GAAU9S,GAAOwV,OAE1CC,GAA4B,SAACzV,GAAD,OACvCiV,GAAWjV,GAAO0V,qBAEPC,GAAkC,SAAC3V,GAAD,OAC7CiV,GAAWjV,GAAO4V,2BAEPC,GAAgC,SAAC7V,GAAD,OAC3CiV,GAAWjV,GAAO8V,yBChBPC,GAAS7W,YACpB,cADoC,uCAEpC,WAAO2V,EAAP,wBAAAjW,EAAA,6DAAgBQ,EAAhB,EAAgBA,gBAAhB,SACqCwV,GAAUC,GAD/C,mBACUxV,EADV,EACUA,QAASC,EADnB,EACmBA,QAEZD,EAHP,0CAIWD,KAJX,iCAMWE,GANX,4CAFoC,yDAazB0W,GAAe9W,YAC1B,oBAD0C,uCAE1C,WAAO2V,EAAP,wBAAAjW,EAAA,6DAAgBQ,EAAhB,EAAgBA,gBAAhB,SACqC0V,GAAgBD,GADrD,mBACUxV,EADV,EACUA,QAASC,EADnB,EACmBA,QAEZD,EAHP,0CAIWD,KAJX,iCAMWE,GANX,4CAF0C,yDAa/B2W,GAAa/W,YACxB,kBADwC,uCAExC,yCAAAN,EAAA,yDAASiW,EAAT,EAASA,MAAOqB,EAAhB,EAAgBA,KAAUvV,EAA1B,EAA0BA,SAAU0O,EAApC,EAAoCA,SAAUjQ,EAA9C,EAA8CA,iBACxB8W,EADtB,gCAEYnB,GAAcF,GAF1B,2DAGYG,GAAgBH,GAH5B,wCACUxV,QADV,0CAMWD,KANX,eAQIuB,EAASwV,GAASZ,GAAYlG,MAAe6G,EAAO,GAAK,KACzDvV,EAASyV,GAAYF,IATzB,mBAUW,GAVX,4CAFwC,yDAiBpCxW,GAAe,CACnB6O,IAAK,GACL6G,SAAU,KACVM,oBAAqB,OACrBE,0BAA2B,OAC3BE,wBAAyB,QAGrBO,GAAe7W,YAAY,CAC/BC,KAAM,OACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,KAGdyW,SAAU,SAACnW,EAAOC,GAChBD,EAAMuO,IAAIiH,MAAQvV,EAAOX,SAG3B8W,YAAa,SAACpW,EAAOC,GACnBD,EAAMoV,SAAWnV,EAAOX,UAG5BY,cAAe,SAACC,GACdA,EACGC,QAAQ2V,GAAO1V,SAAS,SAACL,EAAOC,GAC/BD,EAAM0V,oBAAsB,aAE7BtV,QAAQ2V,GAAOzV,UAAU,SAACN,EAAOC,GAChCD,EAAM0V,oBAAsB,cAE7BtV,QAAQ2V,GAAOxV,WAAW,SAACP,EAAOC,GACjCD,EAAM0V,oBAAsB,YAC5B1V,EAAMuO,IAAMtO,EAAOX,QAAQiP,IAC3BvO,EAAMoV,SAAWnV,EAAOX,QAAQ8V,YAEjChV,QAAQ4V,GAAa3V,SAAS,SAACL,EAAOC,GACrCD,EAAM4V,0BAA4B,aAEnCxV,QAAQ4V,GAAa1V,UAAU,SAACN,EAAOC,GACtCD,EAAM4V,0BAA4B,cAEnCxV,QAAQ4V,GAAazV,WAAW,SAACP,EAAOC,GACvCD,EAAM4V,0BAA4B,eAEnCxV,QAAQ6V,GAAW5V,SAAS,SAACL,EAAOC,GACnCD,EAAM8V,wBAA0B,aAEjC1V,QAAQ6V,GAAW3V,UAAU,SAACN,EAAOC,GACpCD,EAAM8V,wBAA0B,cAEjC1V,QAAQ6V,GAAW1V,WAAW,SAACP,EAAOC,GACrCD,EAAM8V,wBAA0B,kBAKjC,GAAyCO,GAAa5V,QAA9CqE,GAAR,GAAQA,MAAOqR,GAAf,GAAeA,SAAUC,GAAzB,GAAyBA,YAEjBC,MAAf,QCxEe,SAASC,KACtB,IAAM3V,EAAW0E,cACXgE,EAAUC,cACVpD,EAAQN,KACN9E,EAAUF,IAAVE,MAEOyV,EAAiBjM,cAAxBuK,MAEFO,EAAW9S,YAAY6S,IACvBG,EAAYhT,YAAY+S,IACxBrS,EAAQV,YAAYyQ,IACpBvJ,EAAclH,YAAY0Q,IAC1BlC,EAAUxO,YAAY2Q,IACtBuC,EAAQlT,YAAYiT,IAEpB5V,EAAkB2C,YAAYX,GAE9B6U,EADSlU,YAAYT,KACEyT,EAEvBI,EAAsBpT,YAAYmT,IAElC/U,EAAyB,kBAAMC,EAASoV,GAAOQ,KAC/C5S,EAAuB+R,EAEvBe,EAAwB,kBAAM9V,EAASqV,GAAaO,KACpDG,EAAsBpU,YAAYqT,IAElCgB,EAAsB,kBAC1BhW,EAASsV,GAAW,CAAEpB,MAAO0B,EAAcL,MAAOd,MAE9CwB,EAA8C,YAD1BtU,YAAYuT,IAQtC,OALA1U,qBAAU,WAER,OADAT,IACO,kBAAMC,EAASmE,SACrB,IAGD,qBAAKjC,UAAU,8BAA8BJ,MAAO,CAAEC,KAAM,GAA5D,SACE,cAACiC,EAAD,CACEjE,uBAAwBA,EACxBiD,qBAAsBA,EACtBQ,mBAAoB,kBAClB,sBAAK1B,MAAO,CAAEuF,UAAW,UAAzB,UACE,6BAAKhF,IACL,uBACCwG,EACD,cAACnF,EAAA,EAAD,CAAMxB,UAAU,OAAhB,SACE,cAACwB,EAAA,EAAKC,KAAN,CACE7B,MAAO,CAAEoU,WAAY,WAAYC,WAAY,aAD/C,SAGGhG,MAIL,eAACiG,GAAA,EAAD,CACElU,UACE/B,EAAQ,IAAM,OAAS,iCAEzBkW,aAAW,WAJb,UAME,eAACC,GAAA,EAAD,CACEpU,UAAW/B,EAAQ,IAAM,GAAK,OAC9BkW,aAAW,MAFb,UAIE,eAACzS,EAAA,EAAD,CACElB,QAASuT,EAAwB,YAAc,UAC/CpS,SAAUoS,IAA0BjX,EACpC+E,QAASiS,EAHX,UAKGC,EAAwB,aAAe,OACxC,eAAC3O,GAAA,EAAD,CACEpF,UAAU,OACVJ,MAAO,CAAEyU,MAAO,QAChB7T,QAAQ,QAHV,UAKG+R,GAAY,IACZI,QAGL,cAACjR,EAAA,EAAD,CACElB,QAAQ,YACRqB,QAAS,kBAAMyS,UAAUC,UAAUC,UAAUvG,IAF/C,kBAMC0F,GACC,cAAC3O,GAAD,CACEH,SAAS,SACTC,YAAY,SACZjH,uBAAwB+V,EACxB9S,qBAAsB+S,EACtB5O,aAAY,sBAAiB5B,EAAMI,iBAKzC,eAAC2Q,GAAA,EAAD,CACEpU,UAAW/B,EAAQ,IAAM,UAAY,OACrCkW,aAAW,aAFb,UAIE,cAACzS,EAAA,EAAD,CACElB,QAAQ,UACRqB,QAAS,kBACP2E,EAAQK,KAAR,2BACsB4L,EADtB,YACmCpP,EAAMI,cAJ7C,qBAUA,cAAC/B,EAAA,EAAD,CACElB,QAAQ,UACRqB,QAAS,WACP2E,EAAQK,KAAR,sBAA4BxD,EAAMI,cAHtC,kCCvJT,SAAegR,GAAtB,mC,8CAAO,WAAgCC,GAAhC,iBAAA3Y,EAAA,sEACkBC,MAAM,4BAA6B,CACxDiP,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUqJ,KANlB,cACCzY,EADD,gBAScA,EAASC,OATvB,cASCC,EATD,yBAUEA,GAVF,4C,sBCEA,IAAMgD,GAAWsO,KAAIE,SACzBgH,WACA/G,OACAC,IAAI,GACJC,IAAI,IACJC,WACAC,SAAS,CACR,eAAgB,wBAChB,aAAc,+CACd,aAAc,+DAGL3O,GAAQoO,KAAIE,SACtBtO,MAAM,CAAEuV,KAAM,CAAEC,OAAO,KACvB9G,WACAC,SAAS,CACR,eAAgB,qBAChB,eAAgB,kCAGP8G,GAAWrH,KAAIE,SAASE,IAAI,IAAIC,IAAI,KAAKC,WAAWC,SAAS,CACxE,eAAgB,wBAChB,aAAc,gDACd,aAAc,gEAGH+G,GAAiBtH,KAAIE,SAASI,WAAWC,SAAS,CAC7D,eAAgB,2BCrBZgH,GAAavH,KAAIC,OAAO,CAC5BrO,SACAyV,cAGarH,QAAIC,OAAO,CACxB3Q,KAAMiY,GACND,oBCRWE,GAAgB5Y,YAC3B,sBAD2C,uCAE3C,WAAOqY,EAAP,sBAAA3Y,EAAA,6DAAgC+B,EAAhC,EAAgCA,SAAUvB,EAA1C,EAA0CA,gBAA1C,SAC6BqS,GACzB8F,EACAQ,GACAT,GACA3W,EACAiR,IANJ,UACQQ,EADR,QASsBA,EAAZ/S,QATV,iCAYUsB,EAAS1B,KAZnB,gCAaWmT,EAAa9S,SAbxB,WAe2C,mBAAnC8S,EAAazL,OAAO,GAAGC,KAAK,GAfpC,kCAgBYjG,EAAS1B,KAhBrB,iCAiBaG,EAAgB,wBAjB7B,iCAoBWA,KApBX,4CAF2C,yDA2BvCM,GAAe,CACnBwC,MAAO,GACPyV,SAAU,GACVC,eAAgB,GAChB9F,iBAAkB,GAClBkG,2BAA4B,QAGxBC,GAA2BzY,YAAY,CAC3CC,KAAM,QACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,KAGdwY,SAAU,SAAClY,EAAOC,GAChBD,EAAMkC,MAAQjC,EAAOX,SAGvB6Y,YAAa,SAACnY,EAAOC,GACnBD,EAAM2X,SAAW1X,EAAOX,SAG1B8Y,kBAAmB,SAACpY,EAAOC,GACzBD,EAAM4X,eAAiB3X,EAAOX,SAGhCsS,oBAAqB,SAAC5R,EAAOC,GAC3BD,EAAM8R,iBAAmB7R,EAAOX,SAGlC+Y,8BAA+B,SAACrY,EAAOC,GACrCD,EAAMgY,2BAA6B/X,EAAOX,UAG9CY,cAAe,SAACC,GACdA,EACGC,QAAQ0X,GAAczX,SAAS,SAACL,EAAOC,GACtCD,EAAMgY,2BAA6B,aAEpC5X,QAAQ0X,GAAcxX,UAAU,SAACN,EAAOC,GAChB,wBAAnBA,EAAOX,UACTU,EAAMgY,2BAA6B,eAEtC5X,QAAQ0X,GAAcvX,WAAW,SAACP,EAAOC,GACxCD,EAAMgY,2BAA6B,kBAKpC,GAMHC,GAAyBxX,QAL3BqE,GADK,GACLA,MACAoT,GAFK,GAELA,SACAC,GAHK,GAGLA,YACAC,GAJK,GAILA,kBACAxG,GALK,GAKLA,oBAGaqG,MAAf,QC7FaK,GAAc,SAACtY,GAAD,OAAWA,EAAMuY,eAAeC,OAE9CvW,GAAc,SAACjC,GAAD,OAAWsY,GAAYtY,GAAOkC,OAE5CuW,GAAiB,SAACzY,GAAD,OAAWsY,GAAYtY,GAAO2X,UAE/Ce,GAAuB,SAAC1Y,GAAD,OAClCsY,GAAYtY,GAAO4X,gBAERe,GAAmC,SAAC3Y,GAAD,OAC9CsY,GAAYtY,GAAOgY,4BAERY,GAAmB,SAAC5Y,GAAD,uBAC9BsY,GAAYtY,GAAO8R,iBAAiBwB,QAClC,gBAAG1M,EAAH,EAAGA,KAAH,OAA6B,GAAfA,EAAK8G,QAA2B,SAAZ9G,EAAK,IAA6B,UAAZA,EAAK,MAC7D,UAH4B,aAC9B,EAEMjB,SAEKkT,GAAsB,SAAC7Y,GAAD,uBACjCsY,GAAYtY,GAAO8R,iBAAiBwB,QAClC,gBAAG1M,EAAH,EAAGA,KAAH,OACiB,GAAfA,EAAK8G,QAA2B,SAAZ9G,EAAK,IAA6B,aAAZA,EAAK,MACjD,UAJ+B,aACjC,EAGMjB,SAEKmT,GAA4B,SAAC9Y,GAAD,uBACvCsY,GAAYtY,GAAO8R,iBAAiBwB,QAClC,gBAAG1M,EAAH,EAAGA,KAAH,OAA6B,GAAfA,EAAK8G,QAA2B,mBAAZ9G,EAAK,MACvC,UAHqC,aACvC,EAEMjB,SC1BKoT,GAAW,2C,SC4BT,SAASC,KACtB,IAAMrY,EAAW0E,cACXa,EAAQN,KAERqT,EAAgB/S,EAAM6J,IAAI,YAC1BmJ,EAAalU,QAAQiU,GACvBC,GAAYhT,EAAMiT,OAAO,YAC7B,IAAMrR,EAAeoR,EAAU,UAAMD,EAAN,YAAuB/S,EAAMI,YAAe,GAErEpE,EAAQI,YAAYL,IACpB0V,EAAWrV,YAAYmW,IACvBb,EAAiBtV,YAAYoW,IAE7BU,EAAa9W,YAAYsW,IACzBS,EAAgB/W,YAAYuW,IAC5BS,EAAsBhX,YAAYwW,IAIlCnV,EAAuBrB,YAAYqW,IAMzC,OAJAxX,qBAAU,WACR,OAAO,kBAAMR,EAASmE,SACrB,IAGD,qBACEjC,UAAU,0CACVJ,MAAO,CAAEC,KAAM,GAFjB,SAIE,gCACE,oBAAID,MAAO,CAAEuF,UAAW,UAAxB,mBACA,uBAEA,eAAC8L,GAAA,EAAD,WACE,eAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,oBACA,cAACH,GAAA,EAAKI,QAAN,CACEjE,KAAK,QACLmE,MAAOlS,EACPmS,UAAWrP,QAAQoU,GACnB9E,SAAU,SAACC,GAAD,OAAW5T,EAASuX,GAAS3D,EAAMC,OAAOJ,WAEtD,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACGmJ,OAIL,eAACtF,GAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,uBACA,cAACH,GAAA,EAAKI,QAAN,CACEjE,KAAK,WACLmE,MAAOuD,EACPtD,UAAWrP,QAAQqU,GACnB/E,SAAU,SAACC,GAAD,OAAW5T,EAASwX,GAAY5D,EAAMC,OAAOJ,WAEzD,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACGoJ,IAEH,cAAC,gBAAD,CAAezW,GAAG,kCAAlB,SACE,mBAAGC,UAAU,kCAAb,SACE,cAACiR,GAAA,EAAKyF,KAAN,yCAMR,cAAC,KAAD,CACEC,QAAST,GACTzE,SAAU,SAACmF,GAAD,OAAgB9Y,EAASyX,GAAkBqB,OAGvD,qBAAK5W,UAAU,mBAAmBJ,MAAO,CAAEiX,QAAS,SAApD,SACGJ,IAGH,qBAAKzW,UAAU,cAAf,SACE,cAACgF,GAAD,CACEnH,uBA7DqB,kBAC7BC,EAASmX,GAAc,CAAElY,KAAM,CAAEsC,QAAOyV,YAAYC,qBA6D5CjU,qBAAsBA,EACtB+D,SAAS,QACTI,aAAcoR,EAAapR,EAAe,8BC7G/C,SAAe6R,GAAtB,mC,8CAAO,WAAmCpC,GAAnC,iBAAA3Y,EAAA,sEACkBC,MAAM,+BAAgC,CAC3DiP,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUqJ,KANlB,cACCzY,EADD,gBAScA,EAASC,OATvB,cASCC,EATD,yBAUEA,GAVF,4C,sBCSP,IAAM6Y,GAAavH,KAAIC,OAAO,CAC5BvO,YACAE,SACAyV,cAGarH,QAAIC,OAAO,CACxB3Q,KAAMiY,GACND,oBCVWgC,GAAmB1a,YAC9B,4BAD8C,uCAE9C,WAAOqY,EAAP,sBAAA3Y,EAAA,6DAAgC+B,EAAhC,EAAgCA,SAAUvB,EAA1C,EAA0CA,gBAA1C,SAC6BqS,GACzB8F,EACAsC,GACAF,GACAhZ,EACAiR,IANJ,UACQQ,EADR,QASsBA,EAAZ/S,QATV,iCAYUsB,EAAS1B,KAZnB,gCAaWmT,EAAa9S,SAbxB,WAe2C,mBAAnC8S,EAAazL,OAAO,GAAGC,KAAK,GAfpC,kCAgBYjG,EAAS1B,KAhBrB,iCAiBaG,EAAgB,wBAjB7B,iCAoBWA,KApBX,4CAF8C,yDA2B1CM,GAAe,CACnBsC,SAAU,GACVE,MAAO,GACPyV,SAAU,GACVC,eAAgB,GAChBkC,8BAA+B,OAC/BhI,iBAAkB,IAGdiI,GAA8Bva,YAAY,CAC9CC,KAAM,WACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,KAGdsa,YAAa,SAACha,EAAOC,GACnBD,EAAMgC,SAAW/B,EAAOX,SAG1B4Y,SAAU,SAAClY,EAAOC,GAChBD,EAAMkC,MAAQjC,EAAOX,SAGvB6Y,YAAa,SAACnY,EAAOC,GACnBD,EAAM2X,SAAW1X,EAAOX,SAG1B8Y,kBAAmB,SAACpY,EAAOC,GACzBD,EAAM4X,eAAiB3X,EAAOX,SAGhCsS,oBAAqB,SAAC5R,EAAOC,GAC3BD,EAAM8R,iBAAmB7R,EAAOX,UAGpCY,cAAe,SAACC,GACdA,EACGC,QAAQwZ,GAAiBvZ,SAAS,SAACL,EAAOC,GACzCD,EAAM8Z,8BAAgC,aAEvC1Z,QAAQwZ,GAAiBtZ,UAAU,SAACN,EAAOC,GACnB,wBAAnBA,EAAOX,UACTU,EAAM8Z,8BAAgC,eAEzC1Z,QAAQwZ,GAAiBrZ,WAAW,SAACP,EAAOC,GAC3CD,EAAM8Z,8BAAgC,kBAKvC,GAOHC,GAA4BtZ,QAN9BqE,GADK,GACLA,MACAkV,GAFK,GAELA,YACA9B,GAHK,GAGLA,SACAC,GAJK,GAILA,YACAC,GALK,GAKLA,kBACAxG,GANK,GAMLA,oBAGamI,MAAf,QC/FaE,GAAiB,SAACja,GAAD,OAAWA,EAAMuY,eAAe2B,UAEjDnY,GAAiB,SAAC/B,GAAD,OAAWia,GAAeja,GAAOgC,UAElDC,GAAc,SAACjC,GAAD,OAAWia,GAAeja,GAAOkC,OAE/CuW,GAAiB,SAACzY,GAAD,OAAWia,GAAeja,GAAO2X,UAElDe,GAAuB,SAAC1Y,GAAD,OAClCia,GAAeja,GAAO4X,gBAEXuC,GAAsC,SAACna,GAAD,OACjDia,GAAeja,GAAO8Z,+BAEXM,GAAsB,SAACpa,GAAD,uBACjCia,GAAeja,GAAO8R,iBAAiBwB,QACrC,gBAAG1M,EAAH,EAAGA,KAAH,OACiB,GAAfA,EAAK8G,QAA2B,SAAZ9G,EAAK,IAA6B,aAAZA,EAAK,MACjD,UAJ+B,aACjC,EAGMjB,SAEKiT,GAAmB,SAAC5Y,GAAD,uBAC9Bia,GAAeja,GAAO8R,iBAAiBwB,QACrC,gBAAG1M,EAAH,EAAGA,KAAH,OAA6B,GAAfA,EAAK8G,QAA2B,SAAZ9G,EAAK,IAA6B,UAAZA,EAAK,MAC7D,UAH4B,aAC9B,EAEMjB,SAEKkT,GAAsB,SAAC7Y,GAAD,uBACjCia,GAAeja,GAAO8R,iBAAiBwB,QACrC,gBAAG1M,EAAH,EAAGA,KAAH,OACiB,GAAfA,EAAK8G,QAA2B,SAAZ9G,EAAK,IAA6B,aAAZA,EAAK,MACjD,UAJ+B,aACjC,EAGMjB,SAEKmT,GAA4B,SAAC9Y,GAAD,uBACvCia,GAAeja,GAAO8R,iBAAiBwB,QACrC,gBAAG1M,EAAH,EAAGA,KAAH,OAA6B,GAAfA,EAAK8G,QAA2B,mBAAZ9G,EAAK,MACvC,UAHqC,aACvC,EAEMjB,SCLO,SAAS0U,KACtB,IAAM1Z,EAAW0E,cAEXrD,EAAWM,YAAYP,IACvBG,EAAQI,YAAYL,IACpB0V,EAAWrV,YAAYmW,IACvBb,EAAiBtV,YAAYoW,IAE7B4B,EAAgBhY,YAAY8X,IAC5BhB,EAAa9W,YAAYsW,IACzBS,EAAgB/W,YAAYuW,IAC5BS,EAAsBhX,YAAYwW,IAMlCnV,EAAuBrB,YAAY6X,IAMzC,OAJAhZ,qBAAU,WACR,OAAO,kBAAMR,EAASmE,SACrB,IAGD,qBACEjC,UAAU,6CACVJ,MAAO,CAAEC,KAAM,GAFjB,SAIE,gCACE,oBAAID,MAAO,CAAEuF,UAAW,UAAxB,sBACA,uBAEA,eAAC8L,GAAA,EAAD,WACE,eAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,uBACA,cAACH,GAAA,EAAKI,QAAN,CACEjE,KAAK,OACLmE,MAAOpS,EACPqS,UAAWrP,QAAQsV,GACnBhG,SAAU,SAACC,GAAD,OAAW5T,EAASqZ,GAAYzF,EAAMC,OAAOJ,WAEzD,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACGqK,OAIL,eAACxG,GAAA,EAAKC,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,oBACA,cAACH,GAAA,EAAKI,QAAN,CACEjE,KAAK,QACLmE,MAAOlS,EACPmS,UAAWrP,QAAQoU,GACnB9E,SAAU,SAACC,GAAD,OAAW5T,EAASuX,GAAS3D,EAAMC,OAAOJ,WAEtD,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACGmJ,OAIL,eAACtF,GAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,uBACA,cAACH,GAAA,EAAKI,QAAN,CACEjE,KAAK,WACLmE,MAAOuD,EACPtD,UAAWrP,QAAQqU,GACnB/E,SAAU,SAACC,GAAD,OAAW5T,EAASwX,GAAY5D,EAAMC,OAAOJ,WAEzD,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACGoJ,UAKP,cAAC,KAAD,CACEG,QAAST,GACTzE,SAAU,SAACmF,GAAD,OAAgB9Y,EAASyX,GAAkBqB,OAGvD,qBAAK5W,UAAU,mBAAmBJ,MAAO,CAAEiX,QAAS,SAApD,SACGJ,IAGH,qBAAKzW,UAAU,cAAf,SACE,cAACgF,GAAD,CACEnH,uBAvEqB,kBAC7BC,EACEiZ,GAAiB,CAAEha,KAAM,CAAEoC,WAAUE,QAAOyV,YAAYC,qBAsElDjU,qBAAsBA,EACtB+D,SAAS,WACTI,aAAa,iCCpHlB,SAAetB,GAAtB,mC,8CAAO,WAAuC+T,GAAvC,iBAAA3b,EAAA,sEACkBC,MAAM,yCAAD,OACe0b,IAFtC,cACCzb,EADD,gBAKcA,EAASC,OALvB,cAKCC,EALD,yBAMEA,GANF,4C,sBCIA,IAAMyH,GAAuBvH,YAClC,uDADkD,uCAElD,WAAOqb,EAAP,sBAAA3b,EAAA,6DAAgB+B,EAAhB,EAAgBA,SAAUvB,EAA1B,EAA0BA,gBAA1B,SACqBoH,GAAwB+T,GAD7C,YACQvb,EADR,QAGWK,QAHX,0CAIW,GAJX,cAMQL,EAAK2H,SACwB,UAA3B3H,EAAK2H,OAAO,GAAGC,KAAK,GACtBjG,EACEoE,EAAS,CAAE1B,QAAS,SAAUsC,QAAS3G,EAAK2H,OAAO,GAAGhB,WAErDhF,EAAS+F,GAAU1H,EAAK2H,UAXnC,kBAcWvH,KAdX,4CAFkD,yDAqB9CM,GAAe,CACnBoH,kCAAmC,OACnCH,OAAQ,IAGJ6T,GAAuChb,YAAY,CACvDC,KAAM,oBACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,KAGdgH,UAAW,SAAC1G,EAAOC,GACjBD,EAAM2G,OAAS1G,EAAOX,UAG1BY,cAAe,SAACC,GACdA,EACGC,QAAQqG,GAAqBpG,SAAS,SAACL,EAAOC,GAC7CD,EAAM8G,kCAAoC,aAE3C1G,QAAQqG,GAAqBnG,UAAU,SAACN,EAAOC,GAC9CD,EAAM8G,kCAAoC,cAE3C1G,QAAQqG,GAAqBlG,WAAW,SAACP,EAAOC,GAC/CD,EAAM8G,kCAAoC,kBAK3C,GACL0T,GAAqC/Z,QADxBqE,GAAR,GAAQA,MAAO4B,GAAf,GAAeA,UAGP8T,MAAf,QCxDapT,GAA0C,SAACpH,GAAD,OAHhB,SAACA,GAAD,OACrCA,EAAMuY,eAAekC,kBAGrBC,CAAwB1a,GAAO8G,mCCelB,SAAS6T,KACtB,IAAMha,EAAW0E,cACTkV,EAAUjQ,cAAViQ,MACFlR,EAAUC,cAEV1E,EAAQtC,YAAY2C,GACpBtF,EAAkB2C,YAAYX,GAE9BjB,EAAyB,kBAAMC,EAAS8F,GAAqB8T,KAC7D5W,EAAuBrB,YAC3B8E,IAQF,OALAjG,qBAAU,WAER,OADAT,IACO,kBAAMC,EAASmE,SACrB,IAGD,sBACEjC,UAAU,sDACVJ,MAAO,CAAEC,KAAM,GAFjB,UAIE,oBAAID,MAAO,CAAEuF,UAAW,UAAxB,gCACA,uBACA,kCACKhD,QAAQJ,IAA4B,WAAlBA,EAAMvB,UACzB,cAACsB,EAAD,CACEjE,uBAAwBA,EACxBiD,qBAAsBA,EACtBQ,mBAAoB,WAQlB,OAPAxD,EACEoE,EAAS,CACP1B,QAAS,UACTsC,QACE,+EAGC,gCAKZhG,EACC,cAAC4E,EAAA,EAAD,CACEG,QAAS,WACP/D,EAAS1B,KACToK,EAAQK,KAAK,uBAEf7G,UAAU,OACVQ,QAAQ,UANV,uBAWA,cAACkB,EAAA,EAAD,CACEG,QAAS,WACP2E,EAAQK,KAAK,0BAEf7G,UAAU,OACVQ,QAAQ,UALV,yBC1EH,SAAeuX,GAAtB,mC,8CAAO,WAAsCC,GAAtC,iBAAAjc,EAAA,sEACkBC,MAAM,sCAAuC,CAClEiP,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU2M,KANlB,cACC/b,EADD,gBAScA,EAASC,OATvB,cASCC,EATD,yBAUEA,GAVF,4C,sBCIQsR,YAAIC,OAAO,CACxBrO,WCAW4Y,GAAsB5b,YACjC,sCADiD,uCAEjD,WAAO2b,EAAP,sBAAAjc,EAAA,6DAA+B+B,EAA/B,EAA+BA,SAAUvB,EAAzC,EAAyCA,gBAAzC,SAC6BqS,GACzBoJ,EACAE,GACAH,GACAja,EACAiR,IANJ,UACQQ,EADR,QASsBA,EAAZ/S,QATV,yCAYW+S,EAAa9S,SAZxB,gCAcWF,KAdX,4CAFiD,yDAqB7CM,GAAe,CACnBwC,MAAO,GACP4P,iBAAkB,GAClBkJ,iCAAkC,QAG9BC,GAAqCzb,YAAY,CACrDC,KAAM,kBACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,KAGdwY,SAAU,SAAClY,EAAOC,GAChBD,EAAMkC,MAAQjC,EAAOX,SAGvBsS,oBAAqB,SAAC5R,EAAOC,GAC3BD,EAAM8R,iBAAmB7R,EAAOX,UAGpCY,cAAe,SAACC,GACdA,EACGC,QAAQ0a,GAAoBza,SAAS,SAACL,EAAOC,GAC5CD,EAAMgb,iCAAmC,aAE1C5a,QAAQ0a,GAAoBxa,UAAU,SAACN,EAAOC,GAC7CD,EAAMgb,iCAAmC,cAE1C5a,QAAQ0a,GAAoBva,WAAW,SAACP,EAAOC,GAC9CD,EAAMgb,iCAAmC,kBAK1C,GACLC,GAAmCxa,QADtBqE,GAAR,GAAQA,MAAOoT,GAAf,GAAeA,SAAUtG,GAAzB,GAAyBA,oBAGjBqJ,MAAf,QCjEaC,GAAwB,SAAClb,GAAD,OACnCA,EAAMuY,eAAe4C,iBAEVlZ,GAAc,SAACjC,GAAD,OAAWkb,GAAsBlb,GAAOkC,OAEtDkZ,GAAyC,SAACpb,GAAD,OACpDkb,GAAsBlb,GAAOgb,kCAElBpC,GAAmB,SAAC5Y,GAAD,uBAC9Bkb,GAAsBlb,GAAO8R,iBAAiBwB,QAC5C,gBAAG1M,EAAH,EAAGA,KAAH,OAA6B,GAAfA,EAAK8G,QAA2B,UAAZ9G,EAAK,MACvC,UAH4B,aAC9B,EAEMjB,SCMO,SAAS0V,KACtB,IAAM1a,EAAW0E,cAEXnD,EAAQI,YAAYL,IAEpBmX,EAAa9W,YAAYsW,IAGzBjV,EAAuBrB,YAC3B8Y,IAOF,OAJAja,qBAAU,WACR,OAAO,kBAAMR,EAASmE,SACrB,IAGD,sBACEjC,UAAU,oDACVJ,MAAO,CAAEC,KAAM,GAFjB,UAIE,gCACE,oBAAID,MAAO,CAAEuF,UAAW,UAAxB,8BACA,0BAGF,cAAC8L,GAAA,EAAD,UACE,eAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,oBACA,cAACH,GAAA,EAAKI,QAAN,CACEjE,KAAK,QACLmE,MAAOlS,EACPmS,UAAWrP,QAAQoU,GACnB9E,SAAU,SAACC,GAAD,OAAW5T,EAASuX,GAAS3D,EAAMC,OAAOJ,WAEtD,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACGmJ,SAKP,8BACE,cAAC3R,GAAD,CACE/G,uBApCuB,kBAAMC,EAASma,GAAoB,CAAE5Y,YAqC5DyB,qBAAsBA,EACtB+D,SAAS,6BC9DZ,SAAe4T,GAAtB,mC,8CAAO,WAAkCC,GAAlC,iBAAA3c,EAAA,sEACkBC,MAAM,kCAAmC,CAC9DiP,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUqN,KANlB,cACCzc,EADD,gBAScA,EAASC,OATvB,cASCC,EATD,yBAUEA,GAVF,4C,sBCIQsR,YAAIC,OAAO,CACxBzO,IAAKwO,KAAIE,SAASI,WAClB2J,MAAOjK,KAAIE,SAASgL,OAAO5K,WAC3B+G,cCFW8D,GAAkBvc,YAC7B,8BAD6C,uCAE7C,WAAOqc,EAAP,sBAAA3c,EAAA,6DAA8B+B,EAA9B,EAA8BA,SAAUvB,EAAxC,EAAwCA,gBAAxC,SAC6BqS,GACzB8J,EACAG,GACAJ,GACA3a,EACAiR,IANJ,UACQQ,EADR,QASsBA,EAAZ/S,QATV,yCAYW+S,EAAa9S,SAZxB,gCAcWF,KAdX,4CAF6C,yDAqBzCM,GAAe,CACnBiY,SAAU,GACVgE,6BAA8B,OAC9B7J,iBAAkB,IAGd8J,GAAiCpc,YAAY,CACjDC,KAAM,cACNC,gBACAI,SAAU,CACRgF,MAAO,SAAC9E,EAAOC,GACb,OAAO,eAAKP,KAGdyY,YAAa,SAACnY,EAAOC,GACnBD,EAAM2X,SAAW1X,EAAOX,SAG1BsS,oBAAqB,SAAC5R,EAAOC,GAC3BD,EAAM8R,iBAAmB7R,EAAOX,UAGpCY,cAAe,SAACC,GACdA,EACGC,QAAQqb,GAAgBpb,SAAS,SAACL,EAAOC,GACxCD,EAAM2b,6BAA+B,aAEtCvb,QAAQqb,GAAgBnb,UAAU,SAACN,EAAOC,GACzCD,EAAM2b,6BAA+B,cAEtCvb,QAAQqb,GAAgBlb,WAAW,SAACP,EAAOC,GAC1CD,EAAM2b,6BAA+B,kBAKtC,GACLC,GAA+Bnb,QADlBqE,GAAR,GAAQA,MAAOqT,GAAf,GAAeA,YAAavG,GAA5B,GAA4BA,oBAGpBgK,MAAf,QCjEaC,GAAoB,SAAC7b,GAAD,OAAWA,EAAMuY,eAAeuD,aAEpDrD,GAAiB,SAACzY,GAAD,OAAW6b,GAAkB7b,GAAO2X,UAErDoE,GAAqC,SAAC/b,GAAD,OAChD6b,GAAkB7b,GAAO2b,8BAEd9C,GAAsB,SAAC7Y,GAAD,uBACjC6b,GAAkB7b,GAAO8R,iBAAiBwB,QACxC,gBAAG1M,EAAH,EAAGA,KAAH,OAA6B,GAAfA,EAAK8G,QAA2B,aAAZ9G,EAAK,MACvC,UAH+B,aACjC,EAEMjB,SCQO,SAASqW,KACtB,IAAMrb,EAAW0E,cACjB,EAAuBiF,cAAfxI,EAAR,EAAQA,IAAKyY,EAAb,EAAaA,MAEP5C,EAAWrV,YAAYmW,IAEvBY,EAAgB/W,YAAYuW,IAI5BlV,EAAuBrB,YAAYyZ,IAMzC,OAJA5a,qBAAU,WACR,OAAO,kBAAMR,EAASmE,SACrB,IAGD,sBACEjC,UAAU,gDACVJ,MAAO,CAAEC,KAAM,GAFjB,UAIE,gCACE,oBAAID,MAAO,CAAEuF,UAAW,UAAxB,0BACA,0BAGF,cAAC8L,GAAA,EAAD,UACE,eAACA,GAAA,EAAKC,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACF,GAAA,EAAKG,MAAN,2BACA,cAACH,GAAA,EAAKI,QAAN,CACEjE,KAAK,WACLmE,MAAOuD,EACPtD,UAAWrP,QAAQqU,GACnB/E,SAAU,SAACC,GAAD,OAAW5T,EAASwX,GAAY5D,EAAMC,OAAOJ,WAEzD,cAACN,GAAA,EAAKI,QAAQO,SAAd,CAAuBxE,KAAK,UAA5B,SACGoJ,SAKP,8BACE,cAACxR,GAAD,CACEnH,uBAnCuB,kBAC7BC,EAAS8a,GAAgB,CAAE3Z,MAAKyY,QAAO5C,eAmCjChU,qBAAsBA,EACtB+D,SAAS,eACTI,aAAa,+BCrDR,SAASmU,KACtB,IAAMtc,EAAkB2C,YAAYX,GAEpC,MAAO,CACL,cAAC,IAAD,CAAO0E,OAAK,EAACO,KAAK,wBAAlB,SACGjH,EAAkB,cAAC,IAAD,CAAU0G,OAAK,EAACzD,GAAG,uBAA0B,cAACoW,GAAD,KADpB,yBAG9C,cAAC,IAAD,CAAO3S,OAAK,EAACO,KAAK,2BAAlB,SACGjH,EACC,cAAC,IAAD,CAAU0G,OAAK,EAACzD,GAAG,uBAEnB,cAACyX,GAAD,KAJ6C,4BAOjD,cAAC,IAAD,CACEhU,OAAK,EACLO,KAAK,2CAFP,SAKE,cAAC+T,GAAD,KAFI,4CAIN,cAAC,IAAD,CACEtU,OAAK,EACLO,KAAK,kCAFP,SAKE,cAACyU,GAAD,KAFI,mCAIN,cAAC,IAAD,CACEhV,OAAK,EACLO,KAAK,0CAFP,SAKE,cAACoV,GAAD,KAFI,4CC5BK,kBACb,IAEMtb,EAAyBwb,EAFd7W,eAGX1B,EAAuBrB,YAAYkB,GAEzC,OACE,qBAAKX,UAAU,0BAA0BJ,MAAO,CAAEC,KAAM,GAAxD,SACE,cAACqH,EAAA,EAAD,CAAWlH,UAAU,0BAA0BJ,MAAO,CAAEC,KAAM,GAA9D,SACE,cAACiC,EAAD,CACEjE,uBAAwBA,EACxBiD,qBAAsBA,EACtBQ,mBAAoB,kBAClB,qCACE,cAACiB,GAAD,IACA,eAAC,IAAD,WCtBL,CACL,cAACW,GAAD,CAAgBM,OAAK,EAACO,KAAK,qBAA3B,SACE,cAACmB,GAAD,KADkD,sBAGpD,cAAC,IAAD,CAAO1B,OAAK,EAACO,KAAK,2BAAlB,SACE,cAACyD,GAAD,KAD+C,qBCH5C,CACL,cAAC,IAAD,CAAOhE,OAAK,EAACO,KAAK,cAAlB,SACE,cAAC4I,GAAD,KADkC,eAGpC,cAACzJ,GAAD,CAAgBM,OAAK,EAACO,KAAK,cAA3B,SACE,cAAC6M,GAAD,KAD2C,eAG7C,cAAC,IAAD,CAAOpN,OAAK,EAACO,KAAK,mBAAlB,SACE,cAAC0P,GAAD,KADuC,cFiB5B2F,mB,OG5BF,SAASxS,KACtB,OACE,qBAAK5G,UAAU,qBAAf,SACE,eAACkH,EAAA,EAAD,CAAWqG,OAAK,EAAhB,UAEE,eAACpG,GAAA,EAAD,CAAKvH,MAAO,CAAEuF,UAAW,UAAzB,UACE,eAACmC,GAAA,EAAD,CAAKC,IAAE,EAAP,UACE,6CACA,sBAAKvH,UAAU,qBAAf,UACE,8BACE,mBAAGA,UAAU,OAAOsZ,KAAK,IAAzB,0BAIF,8BACE,mBAAGA,KAAK,IAAR,8BAEF,8BACE,mBAAGA,KAAK,IAAR,sCAIN,eAAChS,GAAA,EAAD,CAAKC,IAAE,EAAP,UACE,sCACA,qBAAKvH,UAAU,qBAAf,SACE,8BACE,mBAAGsZ,KAAK,IAAR,2BAMR,uBAEA,iI,cC3BO,SAASC,KACtB,IAEM1b,EAAyBwb,EAFd7W,eAMjB,OAFAlE,qBAAU,kBAAMT,OAGd,sBAAKmC,UAAU,yBAAyBJ,MAAO,CAAE4Z,UAAW,SAA5D,UACE,cAAClZ,EAAD,IACA,cAACmZ,GAAD,IACA,cAAC7S,GAAD,O,sBCVS8S,GANIC,aAAgB,CACjC3J,OAAQ4J,GACRjO,OAAQkO,GACRxH,KAAMyH,KCOOC,GAReJ,aAAgB,CAC5CtC,SAAU2C,GACVrE,MAAOsE,GACPrC,kBAAmBsC,GACnB5B,gBAAiB6B,GACjBlB,YAAamB,KCHAC,GALQV,aAAgB,CACrCrV,UAAWgW,GACX3U,QAAS4U,KCEIC,eAAe,CAC5BC,QAAS,CACP/O,IAAKgO,GACLhE,eAAgBqE,GAChB1V,QAASgW,GAET1c,cAAe+c,EACfrY,YAAasY,KCPjBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,iBAAD,UACE,cAACxB,GAAD,UAINyB,SAASC,eAAe,W","file":"static/js/main.5d1aae06.chunk.js","sourcesContent":["export async function getAuthenticatedApi() {\r\n  const response = await fetch(\"/api/authentication/authenticated\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getAuthenticatedApi } from \"./api.js\";\r\n\r\nexport const getAuthenticated = createAsyncThunk(\r\n  \"authenticated/getAuthenticated\",\r\n  async (_, { rejectWithValue }) => {\r\n    const data = await getAuthenticatedApi();\r\n\r\n    if (data.success) {\r\n      return data.payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  getAuthenticatedRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticatedSlice = createSlice({\r\n  name: \"authenticated\",\r\n  initialState,\r\n  reducers: {\r\n    resetAuthentication: (state, action) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAuthenticated.pending, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getAuthenticated.rejected, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getAuthenticated.fulfilled, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"fulfilled\";\r\n\r\n        const { authenticated, user } = action.payload;\r\n        state.isAuthenticated = authenticated;\r\n        state.user = user;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetAuthentication } = authenticatedSlice.actions;\r\n\r\nexport default authenticatedSlice.reducer;\r\n","import { getAuthenticated } from \"../authenticatedSlice\";\r\n\r\nexport default function initiateLoadingRequest(dispatch) {\r\n  return () => {\r\n    dispatch(getAuthenticated());\r\n  };\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// Hook\r\nexport default function useWindowSize() {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return windowSize;\r\n}\r\n","export const selectAuthenticated = (state) => state.authenticated;\r\n\r\nexport const selectIsAuthenticated = (state) =>\r\n  selectAuthenticated(state).isAuthenticated;\r\n\r\nexport const selectUser = (state) => selectAuthenticated(state).user;\r\n\r\nexport const selectUserId = (state) => selectUser(state)?._id;\r\n\r\nexport const selectUsername = (state) => selectUser(state)?.username;\r\n\r\nexport const selectEmail = (state) => selectUser(state)?.email;\r\n\r\nexport const selectRank = (state) => selectUser(state)?.rank;\r\n\r\nexport const selectGetAuthenticatedRequestStatus = (state) =>\r\n  selectAuthenticated(state).getAuthenticatedRequestStatus;\r\n","import useWindowSize from \"../../services/hooks/useWindowSize.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectIsAuthenticated,\r\n  selectUserId,\r\n} from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction NonMobileHeaderLinks() {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n\r\n  return (\r\n    <Nav style={{ flex: 1 }}>\r\n      <Nav.Link>Home</Nav.Link>\r\n      <LinkContainer to=\"/art/browse\">\r\n        <Nav.Link>Browse</Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/art/create\">\r\n        <Nav.Link>Create</Nav.Link>\r\n      </LinkContainer>\r\n\r\n      {isAuthenticated ? (\r\n        <>\r\n          <LinkContainer to={`/account/profile/${userId}`}>\r\n            <Nav.Link>Profile</Nav.Link>\r\n          </LinkContainer>\r\n\r\n          <LinkContainer to=\"/account/dashboard\">\r\n            <Nav.Link className=\"ml-auto\">Account</Nav.Link>\r\n          </LinkContainer>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <LinkContainer to=\"/authentication/login\">\r\n            <Nav.Link className=\"ml-auto\">Login</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/authentication/register\">\r\n            <Nav.Link>Register</Nav.Link>\r\n          </LinkContainer>\r\n        </>\r\n      )}\r\n    </Nav>\r\n  );\r\n}\r\n\r\nfunction MobileHeaderLinks() {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n\r\n  return (\r\n    <Nav className=\"ml-auto\">\r\n      <NavDropdown title=\"Menu\">\r\n        <NavDropdown.Item>Home</NavDropdown.Item>\r\n        <LinkContainer to=\"/art/browse\">\r\n          <NavDropdown.Item>Browse</NavDropdown.Item>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/art/create\">\r\n          <NavDropdown.Item>Create</NavDropdown.Item>\r\n        </LinkContainer>\r\n        <NavDropdown.Divider />\r\n        {isAuthenticated ? (\r\n          <>\r\n            <LinkContainer to={`/account/profile/${userId}`}>\r\n              <NavDropdown.Item>Profile</NavDropdown.Item>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/account/dashboard\">\r\n              <NavDropdown.Item>Account</NavDropdown.Item>\r\n            </LinkContainer>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <LinkContainer to=\"/authentication/login\">\r\n              <NavDropdown.Item>Login</NavDropdown.Item>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/authentication/register\">\r\n              <NavDropdown.Item>Register</NavDropdown.Item>\r\n            </LinkContainer>\r\n          </>\r\n        )}\r\n      </NavDropdown>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default function Header() {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Navbar variant=\"dark\" bg=\"dark\">\r\n        <Navbar.Brand>ASCII-CRAFT</Navbar.Brand>\r\n        {width > 576 ? <NonMobileHeaderLinks /> : <MobileHeaderLinks />}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","import { selectGetAuthenticatedRequestStatus } from \"../authenticatedSlice/selectors.js\";\r\n\r\nexport default function selectLoadingRequestStatus(state) {\r\n  const getAuthenticatedRequestStatus =\r\n    selectGetAuthenticatedRequestStatus(state);\r\n\r\n  return getAuthenticatedRequestStatus;\r\n}\r\n","export default function Resource({\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleComponent: Idle,\r\n  pendingComponent: Pending,\r\n  rejectedComponent: Rejected,\r\n  fulfilledComponent: Fulfilled,\r\n}) {\r\n  return loadingRequestStatus === \"idle\" ? (\r\n    <Idle initiateLoadingRequest={initiateLoadingRequest} />\r\n  ) : loadingRequestStatus === \"pending\" ? (\r\n    <Pending />\r\n  ) : loadingRequestStatus === \"rejected\" ? (\r\n    <Rejected initiateLoadingRequest={initiateLoadingRequest} />\r\n  ) : loadingRequestStatus === \"fulfilled\" ? (\r\n    <Fulfilled />\r\n  ) : (\r\n    \"Default\"\r\n  );\r\n}\r\n","import { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function PendingCard() {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <h5>Please Wait</h5>\r\n        <hr />\r\n        We are loading some resources\r\n        <br />\r\n        <Button className=\"w-100 mt-3\" variant=\"secondary\" disabled>\r\n          Loading...\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function RejectedCard({ initiateLoadingRequest }) {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <h5>Uh Oh</h5>\r\n        <hr />\r\n        We were unable to load some resources\r\n        <br />\r\n        <Button\r\n          className=\"w-100 mt-3\"\r\n          variant=\"danger\"\r\n          onClick={initiateLoadingRequest}\r\n        >\r\n          Retry\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import Resource from \"../Resource\";\r\nimport PendingCard from \"./components/PendingCard\";\r\nimport RejectedCard from \"./components/RejectedCard\";\r\n\r\nexport default function GetRequestCard({\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  fulfilledComponent,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={PendingCard}\r\n      pendingComponent={PendingCard}\r\n      rejectedComponent={RejectedCard}\r\n      fulfilledComponent={fulfilledComponent}\r\n    />\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  alert: null,\r\n};\r\n\r\nconst alertSystemSlice = createSlice({\r\n  name: \"alertSystem\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setAlert: (state, action) => {\r\n      if (Boolean(action)) state.alert = action.payload;\r\n      else return { ...initialState };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { reset, setAlert } = alertSystemSlice.actions;\r\n\r\nexport default alertSystemSlice.reducer;\r\n","export const selectAlertSystem = (state) => state.alertSystem;\r\n\r\nexport const selectAlert = (state) => selectAlertSystem(state).alert;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { reset } from \"./services/alertSystemSlice\";\r\nimport { selectAlert } from \"./services/alertSystemSlice/selectors.js\";\r\n\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nexport default function AlertSystem() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const alert = useSelector(selectAlert);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      {Boolean(alert) && (\r\n        <Alert\r\n          variant={alert.variant}\r\n          onClose={() => dispatch(reset())}\r\n          dismissible\r\n        >\r\n          {alert.message}\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport useQuery from \"../../services/hooks/useQuery.js\";\r\n\r\nimport { selectIsAuthenticated } from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute({ children, ...rest }) {\r\n  const location = useLocation();\r\n  const query = useQuery();\r\n  query.set(\"redirect\", location.pathname);\r\n\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {isAuthenticated ? (\r\n        children\r\n      ) : (\r\n        <Redirect exact to={\"/authentication/login?\" + query.toString()} />\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","export async function getLogoutApi() {\r\n  const response = await fetch(\"/api/authentication/logout\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getEmailVerificationApi() {\r\n  const response = await fetch(\"/api/authentication/emailVerification\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getLogoutApi, getEmailVerificationApi } from \"./api.js\";\r\n\r\nimport { setAlert } from \"../../../../../../components/AlertSystem/services/alertSystemSlice\";\r\nimport { resetAuthentication } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const getEmailVerification = createAsyncThunk(\r\n  \"dashboard/getEmailVerification\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    const data = await getEmailVerificationApi();\r\n\r\n    if (data.success) {\r\n      dispatch(setErrors([]));\r\n      return true;\r\n    } else {\r\n      if (data.errors) {\r\n        if (data.errors[0].path[0] === \"alert\")\r\n          dispatch(\r\n            setAlert({ variant: \"danger\", message: data.errors[0].message })\r\n          );\r\n        else dispatch(setErrors(data.errors));\r\n      }\r\n\r\n      rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const getLogout = createAsyncThunk(\r\n  \"dashboard/getLogout\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    const data = await getLogoutApi();\r\n\r\n    if (data.success) {\r\n      dispatch(resetAuthentication());\r\n      return true;\r\n    } else {\r\n      rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  getEmailVerificationRequestStatus: \"idle\",\r\n  getLogoutRequestStatus: \"idle\",\r\n  errors: [],\r\n};\r\n\r\nconst accountDashboardSlice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getEmailVerification.pending, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getEmailVerification.rejected, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getEmailVerification.fulfilled, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"fulfilled\";\r\n      })\r\n      .addCase(getLogout.pending, (state, action) => {\r\n        state.getLogoutRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getLogout.rejected, (state, action) => {\r\n        state.getLogoutRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getLogout.fulfilled, (state, action) => {\r\n        state.getLogoutRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setErrors } = accountDashboardSlice.actions;\r\n\r\nexport default accountDashboardSlice.reducer;\r\n","export const selectDashboard = (state) => state.account.dashboard;\r\n\r\nexport const selectGetEmailVerificationRequestStatus = (state) =>\r\n  selectDashboard(state).getEmailVerificationRequestStatus;\r\n\r\nexport const selectGetLogoutRequestStatus = (state) =>\r\n  selectDashboard(state).getLogoutRequestStatus;\r\n","import { Button } from \"react-bootstrap\";\r\nimport Resource from \"../Resource\";\r\n\r\nfunction InitiateLoadingRequestButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  text,\r\n  variant,\r\n}) {\r\n  return (\r\n    <Button\r\n      className={className}\r\n      variant={variant}\r\n      onClick={initiateLoadingRequest}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction LoadingButton({ className }) {\r\n  return (\r\n    <Button className={className} variant=\"secondary\" disabled>\r\n      Loading...\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function RepeatedPostRequestButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleText,\r\n  idleVariant = \"success\",\r\n  hideRetry = true,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text={idleText}\r\n          variant={idleVariant}\r\n        />\r\n      )}\r\n      pendingComponent={() => <LoadingButton className={className} />}\r\n      rejectedComponent={() =>\r\n        hideRetry ? (\r\n          <InitiateLoadingRequestButton\r\n            className={className}\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            text={idleText}\r\n            variant={idleVariant}\r\n          />\r\n        ) : (\r\n          <InitiateLoadingRequestButton\r\n            className={className}\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            text=\"Retry\"\r\n            variant=\"danger\"\r\n          />\r\n        )\r\n      }\r\n      fulfilledComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text={idleText}\r\n          variant={idleVariant}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Resource from \"../Resource\";\r\n\r\nfunction InitiateLoadingRequestButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  text,\r\n  variant,\r\n}) {\r\n  return (\r\n    <Button\r\n      className={className}\r\n      variant={variant}\r\n      onClick={initiateLoadingRequest}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction LoadingButton({ className }) {\r\n  return (\r\n    <Button className={className} variant=\"secondary\" disabled>\r\n      Loading...\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function PostRequestButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleText,\r\n  idleVariant = \"success\",\r\n  redirectLink,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text={idleText}\r\n          variant={idleVariant}\r\n        />\r\n      )}\r\n      pendingComponent={() => <LoadingButton className={className} />}\r\n      rejectedComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text=\"Retry\"\r\n          variant=\"danger\"\r\n        />\r\n      )}\r\n      fulfilledComponent={() => <Redirect exact to={redirectLink} />}\r\n    />\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getEmailVerification,\r\n  getLogout,\r\n  reset,\r\n} from \"./services/accountDashboardSlice\";\r\nimport {\r\n  selectGetEmailVerificationRequestStatus,\r\n  selectGetLogoutRequestStatus,\r\n} from \"./services/accountDashboardSlice/selectors.js\";\r\n\r\nimport {\r\n  selectUsername,\r\n  selectEmail,\r\n  selectRank,\r\n} from \"../../../../services/authenticatedSlice/selectors\";\r\n\r\nimport { Badge } from \"react-bootstrap\";\r\nimport RepeatedPostRequestButton from \"../../../../components/RepeatedPostRequestButton\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const email = useSelector(selectEmail);\r\n  const rank = useSelector(selectRank);\r\n\r\n  const initiateGetEmailVerification = () => {\r\n    dispatch(getEmailVerification());\r\n  };\r\n  const getEmailVerificationRequestStatus = useSelector(\r\n    selectGetEmailVerificationRequestStatus\r\n  );\r\n\r\n  const initiateLoadingRequest = () => dispatch(getLogout());\r\n  const loadingRequestStatus = useSelector(selectGetLogoutRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"account-dashboard d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Welcome {username}!</h2>\r\n        <hr />\r\n        <h6 className=\"d-inline\">Username: </h6> {username} <br />\r\n        <h6 className=\"d-inline\">Email: </h6>\r\n        {email}{\" \"}\r\n        {rank === \"unverified\" && <Badge variant=\"danger\">Not Verified</Badge>}\r\n        <br />\r\n        <h6 className=\"d-inline\">Rank: </h6> {rank} <br />\r\n        <div className=\"mt-2\">\r\n          {rank === \"unverified\" && (\r\n            <RepeatedPostRequestButton\r\n              className=\"mr-2\"\r\n              initiateLoadingRequest={initiateGetEmailVerification}\r\n              loadingRequestStatus={getEmailVerificationRequestStatus}\r\n              idleText=\"Send Email Verification\"\r\n            />\r\n          )}\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Logout\"\r\n            idleVariant=\"primary\"\r\n            redirectLink=\"/authentication/login\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getProfileApi(userId) {\r\n  const response = await fetch(`/api/account/profile/${userId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getProfileApi } from \"./api\";\r\n\r\nexport const getProfile = createAsyncThunk(\r\n  \"profile/getProfile\",\r\n  async (userId, { rejectWithValue }) => {\r\n    const { success, payload } = await getProfileApi(userId);\r\n\r\n    if (success) {\r\n      return payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  profileData: {},\r\n  getProfileRequestStatus: \"idle\",\r\n};\r\n\r\nconst accountProfileSlice = createSlice({\r\n  name: \"profile\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getProfile.pending, (state, action) => {\r\n        state.getProfileRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getProfile.rejected, (state, action) => {\r\n        state.getProfileRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getProfile.fulfilled, (state, action) => {\r\n        state.getProfileRequestStatus = \"fulfilled\";\r\n        state.profileData = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = accountProfileSlice.actions;\r\n\r\nexport default accountProfileSlice.reducer;\r\n","export const selectProfile = (state) => state.account.profile;\r\n\r\nexport const selectProfileData = (state) => selectProfile(state).profileData;\r\n\r\nexport const selectId = (state) => selectProfileData(state)._id;\r\n\r\nexport const selectUsername = (state) => selectProfileData(state).username;\r\n\r\nexport const selectTotalArtsCreated = (state) =>\r\n  selectProfileData(state).totalArtsCreated;\r\n\r\nexport const selectCreatedArts = (state) =>\r\n  selectProfileData(state).createdArts;\r\n\r\nexport const selectTotalArtsLiked = (state) =>\r\n  selectProfileData(state).totalArtsLiked;\r\n\r\nexport const selectLikedArts = (state) => selectProfileData(state).likedArts;\r\n\r\nexport const selectGetProfileRequestStatus = (state) =>\r\n  selectProfile(state).getProfileRequestStatus;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport useQuery from \"../../services/hooks/useQuery.js\";\r\n\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function ArtCard(props) {\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n\r\n  const { simplifiedArt } = props;\r\n  const { _id, title, description } = simplifiedArt;\r\n\r\n  return (\r\n    <Card className=\"h-100\" bg=\"light\" text=\"dark\">\r\n      <Card.Body style={{ textAlign: \"center\" }}>\r\n        <h5>{title}</h5>\r\n        <hr />\r\n        {description}\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button\r\n          className=\"w-100\"\r\n          variant=\"success\"\r\n          onClick={() => history.push(`/art/open/${_id}?${query.toString()}`)}\r\n        >\r\n          Open\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n","import { useHistory } from \"react-router-dom\";\r\n\r\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport ArtCard from \"../../../../../../components/ArtCard\";\r\n\r\nexport default function ArtHighlights({\r\n  className,\r\n  highlightArts,\r\n  totalArts,\r\n  browseLink,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={className}>\r\n      <Card>\r\n        <Card.Body>\r\n          <Container>\r\n            <Row>\r\n              {totalArts > 0 ? (\r\n                highlightArts.map((simplifiedArt, simplifiedArtIndex) => (\r\n                  <Col key={simplifiedArtIndex} md={4}>\r\n                    <ArtCard simplifiedArt={simplifiedArt} />\r\n                  </Col>\r\n                ))\r\n              ) : (\r\n                <Col>\r\n                  <h2 className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n                    Uh oh... There are no arts\r\n                  </h2>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </Container>\r\n        </Card.Body>\r\n      </Card>\r\n      {totalArts > 0 &&\r\n        (totalArts <= 3 ? (\r\n          <div className=\"d-flex mt-2\">Total Arts: {totalArts}</div>\r\n        ) : (\r\n          <div className=\"d-flex mt-2\">\r\n            Total Arts: {totalArts}\r\n            <Button\r\n              className=\"ml-auto\"\r\n              variant=\"primary\"\r\n              onClick={() => {\r\n                history.push(browseLink);\r\n              }}\r\n            >\r\n              Browse All\r\n            </Button>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport { getProfile, reset } from \"./services/accountProfileSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectTotalArtsCreated,\r\n  selectCreatedArts,\r\n  selectTotalArtsLiked,\r\n  selectLikedArts,\r\n  selectGetProfileRequestStatus,\r\n} from \"./services/accountProfileSlice/selectors.js\";\r\n\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport ArtHighlights from \"./components/ArtHighlights\";\r\n\r\nexport default function Profile() {\r\n  const dispatch = useDispatch();\r\n  const { userId } = useParams();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const totalArtsCreated = useSelector(selectTotalArtsCreated);\r\n  const createdArts = useSelector(selectCreatedArts);\r\n  const createdArtsQuery = useQuery();\r\n  createdArtsQuery.set(\"createdByUserId\", userId);\r\n  const browseCreatedArtsLink = `/art/browse?${createdArtsQuery.toString()}`;\r\n\r\n  const totalArtsLiked = useSelector(selectTotalArtsLiked);\r\n  const likedArts = useSelector(selectLikedArts);\r\n  const likedArtsQuery = useQuery();\r\n  likedArtsQuery.set(\"likedByUserId\", userId);\r\n  const browseLikedArtsLink = `/art/browse?${likedArtsQuery.toString()}`;\r\n\r\n  const initiateLoadingRequest = () => dispatch(getProfile(userId));\r\n  const loadingRequestStatus = useSelector(selectGetProfileRequestStatus);\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className=\"account-profile d-flex flex-column\" style={{ flex: 1 }}>\r\n      <GetRequestCard\r\n        initiateLoadingRequest={initiateLoadingRequest}\r\n        loadingRequestStatus={loadingRequestStatus}\r\n        fulfilledComponent={() => (\r\n          <div>\r\n            <h2 style={{ textAlign: \"center\" }}>{username}</h2>\r\n            <hr />\r\n\r\n            <h2>Creations</h2>\r\n            <ArtHighlights\r\n              highlightArts={createdArts}\r\n              totalArts={totalArtsCreated}\r\n              browseLink={browseCreatedArtsLink}\r\n            />\r\n            <br />\r\n            <h2>Liked</h2>\r\n            <ArtHighlights\r\n              highlightArts={likedArts}\r\n              totalArts={totalArtsLiked}\r\n              browseLink={browseLikedArtsLink}\r\n            />\r\n          </div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Pagination } from \"react-bootstrap\";\r\n\r\nexport const getPagesToGenerate = (\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback\r\n) => {\r\n  let pagesToGenerate = [];\r\n  if (totalPages <= 5) {\r\n    for (let counter = 1; counter < totalPages + 1; counter++) {\r\n      pagesToGenerate.push(counter);\r\n    }\r\n  } else {\r\n    for (let counter = currentPage - 2; counter < currentPage + 3; counter++) {\r\n      if (counter > 0 && counter <= totalPages) {\r\n        pagesToGenerate.push(counter);\r\n      }\r\n    }\r\n  }\r\n  return pagesToGenerate;\r\n};\r\n\r\nexport const generatePages = (\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n  pagesToGenerate\r\n) => {\r\n  return pagesToGenerate.map((index) => (\r\n    <Pagination.Item\r\n      key={index}\r\n      active={index == currentPage}\r\n      onClick={() => pageChangeCallback(index)}\r\n    >\r\n      {index}\r\n    </Pagination.Item>\r\n  ));\r\n};\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction generateMinimalPages({ totalPages, currentPage, pageChangeCallback }) {\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    getPagesToGenerate(totalPages, currentPage, pageChangeCallback)\r\n  );\r\n}\r\n\r\nexport default function MinimalPagination(props) {\r\n  return <Pagination>{generateMinimalPages(props)}</Pagination>;\r\n}\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction generatePrevPagination({ currentPage, pageChangeCallback }) {\r\n  let newPageValue = currentPage - 1;\r\n  if (newPageValue <= 1) {\r\n    newPageValue = 1;\r\n  }\r\n  return <Pagination.Prev onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateCollapsedPages({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    getPagesToGenerate(totalPages, currentPage, pageChangeCallback)\r\n  );\r\n}\r\n\r\nfunction generateNextPagination(props) {\r\n  const { totalPages, currentPage, pageChangeCallback } = props;\r\n\r\n  let newPageValue = currentPage + 1;\r\n  if (newPageValue >= totalPages) {\r\n    newPageValue = totalPages;\r\n  }\r\n  return <Pagination.Next onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nexport default function CollapsedPagination(props) {\r\n  return (\r\n    <Pagination>\r\n      {generatePrevPagination(props)}\r\n      {generateCollapsedPages(props)}\r\n      {generateNextPagination(props)}\r\n    </Pagination>\r\n  );\r\n}\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction shouldGenerateLeftEllipsis(totalPages, currentPage) {\r\n  return currentPage > 3;\r\n}\r\n\r\nfunction shouldGenerateRightEllipsis(totalPages, currentPage) {\r\n  return currentPage < totalPages - 2;\r\n}\r\n\r\nfunction getLeftEllipsisPageValue(totalPages, currentPage) {\r\n  const pageValue = currentPage - 4;\r\n  if (pageValue <= 1) {\r\n    return 1;\r\n  } else {\r\n    return pageValue;\r\n  }\r\n}\r\n\r\nfunction getRightEllipsisPageValue(totalPages, currentPage) {\r\n  const pageValue = currentPage + 4;\r\n  if (pageValue >= totalPages) {\r\n    return totalPages;\r\n  } else {\r\n    return pageValue;\r\n  }\r\n}\r\n\r\nfunction generateFirstPagination({ pageChangeCallback }) {\r\n  return <Pagination.First onClick={() => pageChangeCallback(1)} />;\r\n}\r\n\r\nfunction generatePrevPagination({ currentPage, pageChangeCallback }) {\r\n  let newPageValue = currentPage - 1;\r\n  if (newPageValue <= 1) {\r\n    newPageValue = 1;\r\n  }\r\n  return <Pagination.Prev onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateLeftEllipse({ totalPages, currentPage, pageChangeCallback }) {\r\n  return (\r\n    shouldGenerateLeftEllipsis(totalPages, currentPage) && (\r\n      <Pagination.Ellipsis\r\n        onClick={() =>\r\n          pageChangeCallback(getLeftEllipsisPageValue(totalPages, currentPage))\r\n        }\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nfunction generateExpandedPages({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  let pagesToGenerate = getPagesToGenerate(totalPages, currentPage);\r\n  pagesToGenerate.shift();\r\n  pagesToGenerate.pop();\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    pagesToGenerate\r\n  );\r\n}\r\n\r\nfunction generateRightEllipse({ totalPages, currentPage, pageChangeCallback }) {\r\n  return (\r\n    shouldGenerateRightEllipsis(totalPages, currentPage) && (\r\n      <Pagination.Ellipsis\r\n        onClick={() =>\r\n          pageChangeCallback(getRightEllipsisPageValue(totalPages, currentPage))\r\n        }\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nfunction generateNextPagination({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  let newPageValue = currentPage + 1;\r\n  if (newPageValue >= totalPages) {\r\n    newPageValue = totalPages;\r\n  }\r\n  return <Pagination.Next onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateLastPagination({ totalPages, pageChangeCallback }) {\r\n  return <Pagination.Last onClick={() => pageChangeCallback(totalPages)} />;\r\n}\r\n\r\nexport default function ExpandedPagination(props) {\r\n  const { totalPages, currentPage, pageChangeCallback } = props;\r\n\r\n  return (\r\n    <Pagination>\r\n      {generateFirstPagination(props)}\r\n      {generatePrevPagination(props)}\r\n      <Pagination.Item\r\n        active={1 === currentPage}\r\n        onClick={() => pageChangeCallback(1)}\r\n      >\r\n        1\r\n      </Pagination.Item>\r\n      {generateLeftEllipse(props)}\r\n      {generateExpandedPages(props)}\r\n      {generateRightEllipse(props)}\r\n      <Pagination.Item\r\n        active={totalPages === currentPage}\r\n        onClick={() => pageChangeCallback(totalPages)}\r\n      >\r\n        {totalPages}\r\n      </Pagination.Item>\r\n      {generateNextPagination(props)}\r\n      {generateLastPagination(props)}\r\n    </Pagination>\r\n  );\r\n}\r\n","import MinimalPagination from \"./components/MinimalPagination\";\r\nimport CollapsedPagination from \"./components/CollapsedPagination\";\r\nimport ExpandedPagination from \"./components/ExpandedPagination\";\r\n\r\nexport default function Paginator({\r\n  className,\r\n  currentPage,\r\n  totalPages,\r\n  pageChangeCallback,\r\n}) {\r\n  return (\r\n    <div className={\"paginator d-flex justify-content-center \" + className}>\r\n      {totalPages <= 3 ? (\r\n        <MinimalPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      ) : totalPages <= 5 ? (\r\n        <CollapsedPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      ) : (\r\n        <ExpandedPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { getRowsFromSimplifiedArts } from \"./services/grid.js\";\r\n\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ArtCard from \"../ArtCard\";\r\n\r\nexport default function ArtBrowser({\r\n  className,\r\n  cardsPerRow,\r\n  totalRows,\r\n  simplifiedArts,\r\n}) {\r\n  const rows = getRowsFromSimplifiedArts(\r\n    cardsPerRow,\r\n    totalRows,\r\n    simplifiedArts\r\n  );\r\n\r\n  return (\r\n    <div className={\"art-browser \" + className}>\r\n      {simplifiedArts.length === 0 ? (\r\n        <h4 className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n          Uh oh... There are no arts\r\n        </h4>\r\n      ) : (\r\n        rows.map((row, rowIndex) => (\r\n          <Row key={rowIndex}>\r\n            {row.map((simplifiedArt, simplifiedArtIndex) => (\r\n              <Col\r\n                className=\"my-2\"\r\n                md={12 / cardsPerRow}\r\n                key={simplifiedArtIndex}\r\n              >\r\n                <ArtCard simplifiedArt={simplifiedArt} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export function getRowsFromSimplifiedArts(\r\n  cardsPerRow,\r\n  totalRows,\r\n  simplifiedArts\r\n) {\r\n  let rowsData = [];\r\n  for (let rowIndex = 0; rowIndex < totalRows; rowIndex++) {\r\n    rowsData[rowIndex] = [];\r\n    let rowStartingCardIndex = rowIndex * cardsPerRow;\r\n    let startingCardIndex = rowStartingCardIndex;\r\n    for (\r\n      let cardIndex = startingCardIndex;\r\n      cardIndex < startingCardIndex + cardsPerRow;\r\n      cardIndex++\r\n    ) {\r\n      let cardData = simplifiedArts[cardIndex];\r\n      if (cardData) rowsData[rowIndex].push(cardData);\r\n    }\r\n  }\r\n  return rowsData;\r\n}\r\n","export async function getArtCountApi(selectors) {\r\n  const response = await fetch(\"/api/art/browse/artCount\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ selectors }),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getSimplifiedArtsApi(pageOffset, pageSize, selectors) {\r\n  const response = await fetch(\r\n    `/api/art/browse/simplifiedArts/${pageOffset}/${pageSize}`,\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ selectors }),\r\n    }\r\n  );\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","export const selectBrowse = (state) => state.art.browse;\r\n\r\nexport const selectArtCount = (state) => selectBrowse(state).artCount;\r\n\r\nexport const selectGetArtCountRequestStatus = (state) =>\r\n  selectBrowse(state).getArtCountRequestStatus;\r\n\r\nexport const selectSimplifiedArts = (state) =>\r\n  selectBrowse(state).simplifiedArts;\r\n\r\nexport const selectSimplifiedArtByIndex = (index) => (state) =>\r\n  selectSimplifiedArts(state)[index];\r\n\r\nexport const selectSimplifiedArtIdByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state)._id;\r\n\r\nexport const selectSimplifiedArtTitleByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state).title;\r\n\r\nexport const selectSimplifiedArtDescriptionByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state).description;\r\n\r\nexport const selectGetSimplifiedArtsRequestStatus = (state) =>\r\n  selectBrowse(state).getSimplifiedArtsRequestStatus;\r\n\r\nexport const selectLoadingRequestStatus = (state) => {\r\n  const getArtCountRequestStatus = selectGetArtCountRequestStatus(state);\r\n  const getSimplifiedArtsRequestStatus =\r\n    selectGetSimplifiedArtsRequestStatus(state);\r\n  return getArtCountRequestStatus === \"rejected\" ||\r\n    getSimplifiedArtsRequestStatus === \"rejected\"\r\n    ? \"rejected\"\r\n    : getArtCountRequestStatus === \"fulfilled\" &&\r\n      getSimplifiedArtsRequestStatus === \"fulfilled\"\r\n    ? \"fulfilled\"\r\n    : \"pending\";\r\n};\r\n\r\nexport const selectCurrentPage = (state) => selectBrowse(state).currentPage;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getArtCountApi, getSimplifiedArtsApi } from \"./api.js\";\r\nimport { selectArtCount, selectCurrentPage } from \"./selectors.js\";\r\n\r\nexport const getArtCount = createAsyncThunk(\r\n  \"browse/getArtCount\",\r\n  async (selectors, { rejectWithValue }) => {\r\n    const { success, payload } = await getArtCountApi(selectors);\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getSimplifiedArts = createAsyncThunk(\r\n  \"browse/getSimplifiedArts\",\r\n  async ({ pageOffset, pageSize, selectors }, { rejectWithValue }) => {\r\n    const { success, payload } = await getSimplifiedArtsApi(\r\n      pageOffset,\r\n      pageSize,\r\n      selectors\r\n    );\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const loadResources = createAsyncThunk(\r\n  \"browse/loadResources\",\r\n  async (\r\n    { pageOffset, pageSize, queriedPage, selectors },\r\n    { getState, dispatch }\r\n  ) => {\r\n    const hasLoadedArtCount = selectArtCount(getState()) !== -1;\r\n    if (!hasLoadedArtCount) await dispatch(getArtCount(selectors));\r\n\r\n    const isPageConflict = selectCurrentPage(getState()) !== queriedPage;\r\n    if (!isPageConflict)\r\n      await dispatch(getSimplifiedArts({ pageOffset, pageSize, selectors }));\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  artCount: -1,\r\n  getArtCountRequestStatus: \"idle\",\r\n  simplifiedArts: [],\r\n  getSimplifiedArtsRequestStatus: \"idle\",\r\n  currentPage: 1,\r\n};\r\n\r\nconst artBrowseSlice = createSlice({\r\n  name: \"browse\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setCurrentPage: (state, action) => {\r\n      state.currentPage = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getArtCount.pending, (state, action) => {\r\n        state.getArtCountRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getArtCount.rejected, (state, action) => {\r\n        state.getArtCountRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getArtCount.fulfilled, (state, action) => {\r\n        state.getArtCountRequestStatus = \"fulfilled\";\r\n        state.artCount = action.payload;\r\n      })\r\n      .addCase(getSimplifiedArts.pending, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getSimplifiedArts.rejected, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getSimplifiedArts.fulfilled, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"fulfilled\";\r\n        state.simplifiedArts = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setCurrentPage } = artBrowseSlice.actions;\r\n\r\nexport default artBrowseSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport Paginator from \"../../../../components/Paginator\";\r\nimport ArtBrowser from \"../../../../components/ArtBrowser\";\r\n\r\nimport {\r\n  loadResources,\r\n  reset,\r\n  setCurrentPage,\r\n} from \"./services/artBrowseSlice\";\r\nimport {\r\n  selectArtCount,\r\n  selectCurrentPage,\r\n  selectSimplifiedArts,\r\n  selectLoadingRequestStatus,\r\n} from \"./services/artBrowseSlice/selectors.js\";\r\n\r\nimport getTotalPages from \"./services/getTotalPages.js\";\r\n\r\nconst cardsPerRow = 3;\r\nconst totalRows = 4;\r\n\r\nexport default function Browse() {\r\n  const dispatch = useDispatch();\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const artCount = useSelector(selectArtCount);\r\n  const currentPage = useSelector(selectCurrentPage);\r\n  const simplifiedArts = useSelector(selectSimplifiedArts);\r\n\r\n  const totalPages = getTotalPages(cardsPerRow, totalRows, artCount);\r\n\r\n  const parsedQueriedPage = parseInt(query.get(\"page\"));\r\n  const queriedPage =\r\n    isNaN(parsedQueriedPage) ||\r\n    parsedQueriedPage < 1 ||\r\n    parsedQueriedPage > totalPages\r\n      ? 1\r\n      : parsedQueriedPage;\r\n  const pageConflict = artCount === -1 ? false : queriedPage !== currentPage;\r\n\r\n  if (pageConflict) dispatch(setCurrentPage(queriedPage));\r\n\r\n  const createdByUserId = {\r\n    type: \"createdByUserId\",\r\n    payload: query.get(\"createdByUserId\"),\r\n  };\r\n  const likedByUserId = {\r\n    type: \"likedByUserId\",\r\n    payload: query.get(\"likedByUserId\"),\r\n  };\r\n  const selectors = [createdByUserId, likedByUserId];\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(\r\n      loadResources({\r\n        pageOffset: currentPage - 1,\r\n        pageSize: cardsPerRow * totalRows,\r\n        queriedPage,\r\n        selectors,\r\n      })\r\n    );\r\n\r\n  const loadingRequestStatus = useSelector(selectLoadingRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadingRequestPromise = initiateLoadingRequest();\r\n    return () => loadingRequestPromise.abort();\r\n  }, [currentPage]);\r\n\r\n  return (\r\n    <div className=\"art-browse d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Art Browser</h2>\r\n        <hr />\r\n        <GetRequestCard\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          fulfilledComponent={() => (\r\n            <Container className=\"mb-2\" fluid>\r\n              <ArtBrowser\r\n                cardsPerRow={cardsPerRow}\r\n                totalRows={totalRows}\r\n                simplifiedArts={simplifiedArts}\r\n              />\r\n            </Container>\r\n          )}\r\n        />\r\n        <Paginator\r\n          className=\"mt-auto\"\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={(newPage) => {\r\n            query.set(\"page\", newPage);\r\n            history.push(location.pathname + \"?\" + query.toString());\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function getTotalPages(cardsPerRow, totalRows, artCount) {\r\n  const artsPerPage = cardsPerRow * totalRows;\r\n  return Math.ceil(artCount / artsPerPage);\r\n}\r\n","import Joi from \"joi\";\r\n\r\nexport default Joi.object({\r\n  title: Joi.string().trim().min(1).max(30).required().messages({\r\n    \"string.empty\": \"Title is required.\",\r\n    \"string.min\": \"Title must be at least 1 characters long.\",\r\n    \"string.max\": \"Title must be less than or equal to 30 characters long.\",\r\n  }),\r\n  description: Joi.string().trim().min(1).max(100).required().messages({\r\n    \"string.empty\": \"Description is required.\",\r\n    \"string.min\": \"Description must be at least 1 characters long.\",\r\n    \"string.max\":\r\n      \"Description must be less than or equal to 100 characters long.\",\r\n  }),\r\n  content: Joi.string().min(1).max(4000).required().messages({\r\n    \"string.empty\": \"Content is required.\",\r\n    \"string.min\": \"Content must be at least 1 characters long.\",\r\n    \"string.max\": \"Content must be less than or equal to 4000 characters long.\",\r\n  }),\r\n});\r\n","export async function postCreateArtApi(art) {\r\n  const response = await fetch(\"/api/art/create\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(art),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","export default function validateWithJoi(data, schema) {\r\n  const validationResult = schema.validate(data, {\r\n    abortEarly: false,\r\n  });\r\n\r\n  const success = !Boolean(validationResult.error);\r\n  const errors =\r\n    !success &&\r\n    validationResult.error.details.map(({ message, path }) => ({\r\n      message,\r\n      path,\r\n    }));\r\n\r\n  return { success, errors };\r\n}\r\n","export default async function postToApi(data, postApi) {\r\n  const response = await postApi(data);\r\n\r\n  const success = response.success;\r\n  const payload = success && response.payload;\r\n  const errors = !success && response.errors;\r\n\r\n  if (success) return { success, payload };\r\n  else return { success, errors };\r\n}\r\n","import validateWithJoi from \"./validateWithJoi.js\";\r\nimport postToApi from \"./postToApi.js\";\r\n\r\nimport { setAlert } from \"../../components/AlertSystem/services/alertSystemSlice\";\r\n\r\nexport default async function processPostFormRequest(\r\n  formData,\r\n  formSchema,\r\n  postApi,\r\n  dispatch,\r\n  setValidationErrors\r\n) {\r\n  const { success: validationSuccess, errors: validationErrors } =\r\n    validateWithJoi(formData, formSchema);\r\n\r\n  if (!validationSuccess) {\r\n    dispatch(setValidationErrors(validationErrors));\r\n    return { success: false, errors: validationErrors };\r\n  }\r\n\r\n  dispatch(setValidationErrors([]));\r\n\r\n  const postResponse = await postToApi(formData, postApi);\r\n  const { success: postSuccess } = postResponse;\r\n\r\n  if (!postSuccess) {\r\n    const { errors: postErrors } = postResponse;\r\n\r\n    if (postErrors) {\r\n      if (postErrors[0].path[0] === \"alert\")\r\n        dispatch(\r\n          setAlert({ variant: \"danger\", message: postErrors[0].message })\r\n        );\r\n      else dispatch(setValidationErrors(postErrors));\r\n    }\r\n\r\n    return { success: false, errors: postErrors || [] };\r\n  }\r\n\r\n  const { payload: postPayload } = postResponse;\r\n  return { success: true, payload: postPayload };\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport createFormSchema from \"../createFormSchema.js\";\r\nimport { postCreateArtApi } from \"./api.js\";\r\nimport { setAlert } from \"../../../../../../components/AlertSystem/services/alertSystemSlice\";\r\nimport { resetAuthentication } from \"../../../../../../services/authenticatedSlice\";\r\nimport processPostFormRequest from \"../../../../../../services/functions/processPostFormRequest.js\";\r\n\r\nexport const postCreateArt = createAsyncThunk(\r\n  \"create/postCreateArt\",\r\n  async (art, { dispatch, rejectWithValue }) => {\r\n    const formResponse = await processPostFormRequest(\r\n      art,\r\n      createFormSchema,\r\n      postCreateArtApi,\r\n      dispatch,\r\n      setValidationErrors\r\n    );\r\n\r\n    const { success } = formResponse;\r\n\r\n    if (success) {\r\n      return formResponse.payload;\r\n    } else {\r\n      if (formResponse.errors[0].path[0] === \"unauthenticated\") {\r\n        dispatch(resetAuthentication());\r\n        return rejectWithValue(\"preventStateUpdates\");\r\n      }\r\n\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  art: {\r\n    title: \"\",\r\n    description: \"\",\r\n    content: \"\",\r\n  },\r\n  responseArt: null,\r\n  validationErrors: [],\r\n  postCreateArtRequestStatus: \"idle\",\r\n};\r\n\r\nexport const artCreateSlice = createSlice({\r\n  name: \"create\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    resetArt: (state, action) => {\r\n      state.art = { ...initialState.art };\r\n    },\r\n\r\n    setTitle: (state, action) => {\r\n      state.art.title = action.payload;\r\n    },\r\n\r\n    setDescription: (state, action) => {\r\n      state.art.description = action.payload;\r\n    },\r\n\r\n    setContent: (state, action) => {\r\n      state.art.content = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postCreateArt.pending, (state, action) => {\r\n        state.postCreateArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postCreateArt.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postCreateArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postCreateArt.fulfilled, (state, action) => {\r\n        state.responseArt = action.payload;\r\n        state.postCreateArtRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  resetArt,\r\n  setTitle,\r\n  setDescription,\r\n  setContent,\r\n  setValidationErrors,\r\n} = artCreateSlice.actions;\r\n\r\nexport default artCreateSlice.reducer;\r\n","export const selectCreate = (state) => state.art.create;\r\n\r\nexport const selectArt = (state) => selectCreate(state).art;\r\n\r\nexport const selectTitle = (state) => selectArt(state).title;\r\n\r\nexport const selectDescription = (state) => selectArt(state).description;\r\n\r\nexport const selectContent = (state) => selectArt(state).content;\r\n\r\nexport const selectResponseArt = (state) => selectCreate(state).responseArt;\r\n\r\nexport const selectResponseArtId = (state) => selectResponseArt(state)?._id;\r\n\r\nexport const selectPostCreateArtRequestStatus = (state) =>\r\n  selectCreate(state).postCreateArtRequestStatus;\r\n\r\nexport const selectTitleError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"title\"\r\n  )[0]?.message;\r\n\r\nexport const selectDescriptionError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"description\"\r\n  )[0]?.message;\r\n\r\nexport const selectContentError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"content\"\r\n  )[0]?.message;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nimport {\r\n  reset,\r\n  resetArt,\r\n  setTitle,\r\n  setDescription,\r\n  setContent,\r\n  postCreateArt,\r\n} from \"./services/artCreateSlice\";\r\nimport {\r\n  selectArt,\r\n  selectTitle,\r\n  selectDescription,\r\n  selectContent,\r\n  selectResponseArtId,\r\n  selectPostCreateArtRequestStatus,\r\n  selectTitleError,\r\n  selectDescriptionError,\r\n  selectContentError,\r\n} from \"./services/artCreateSlice/selectors.js\";\r\n\r\nexport default function Create() {\r\n  const dispatch = useDispatch();\r\n\r\n  const art = useSelector(selectArt);\r\n  const title = useSelector(selectTitle);\r\n  const description = useSelector(selectDescription);\r\n  const content = useSelector(selectContent);\r\n  const postCreateArtRequestStatus = useSelector(\r\n    selectPostCreateArtRequestStatus\r\n  );\r\n  const responseArtId = useSelector(selectResponseArtId);\r\n\r\n  const titleError = useSelector(selectTitleError);\r\n  const descriptionError = useSelector(selectDescriptionError);\r\n  const contentError = useSelector(selectContentError);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"art-create d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 className=\"mb-3\" style={{ textAlign: \"center\" }}>\r\n          Art Editor\r\n        </h2>\r\n        <hr />\r\n      </div>\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"title\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            value={title}\r\n            isInvalid={Boolean(titleError)}\r\n            onChange={(event) => dispatch(setTitle(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {titleError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            isInvalid={Boolean(descriptionError)}\r\n            onChange={(event) => dispatch(setDescription(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {descriptionError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"content\">\r\n          <Form.Label>Content</Form.Label>\r\n          <Form.Control\r\n            autoComplete=\"off\"\r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=\"Content\"\r\n            value={content}\r\n            isInvalid={Boolean(contentError)}\r\n            onChange={(event) => dispatch(setContent(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {contentError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <div className=\"my-4 d-flex\">\r\n        <Button variant=\"primary\" onClick={() => dispatch(resetArt())}>\r\n          New\r\n        </Button>\r\n\r\n        <PostRequestButton\r\n          className=\"ml-auto\"\r\n          initiateLoadingRequest={() => dispatch(postCreateArt(art))}\r\n          loadingRequestStatus={postCreateArtRequestStatus}\r\n          idleText=\"Create\"\r\n          redirectLink={`/art/open/${responseArtId}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getArtApi(artId) {\r\n  const response = await fetch(`/api/art/open/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getDeleteArtApi(artId) {\r\n  const response = await fetch(`/api/art/delete/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getLikeArtApi(artId) {\r\n  const response = await fetch(`/api/art/open/like/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getUnlikeArtApi(artId) {\r\n  const response = await fetch(`/api/art/open/unlike/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","export const selectOpen = (state) => state.art.open;\r\n\r\nexport const selectHasLiked = (state) => selectOpen(state).hasLiked;\r\n\r\nexport const selectArt = (state) => selectOpen(state).art;\r\n\r\nexport const selectCreatorId = (state) => selectArt(state).creatorId;\r\n\r\nexport const selectId = (state) => selectArt(state)._id;\r\n\r\nexport const selectTitle = (state) => selectArt(state).title;\r\n\r\nexport const selectDescription = (state) => selectArt(state).description;\r\n\r\nexport const selectContent = (state) => selectArt(state).content;\r\n\r\nexport const selectLikes = (state) => selectArt(state).likes;\r\n\r\nexport const selectGetArtRequestStatus = (state) =>\r\n  selectOpen(state).getArtRequestStatus;\r\n\r\nexport const selectGetDeleteArtRequestStatus = (state) =>\r\n  selectOpen(state).getDeleteArtRequestStatus;\r\n\r\nexport const selectGetLikeArtRequestStatus = (state) =>\r\n  selectOpen(state).getLikeArtRequestStatus;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getArtApi,\r\n  getDeleteArtApi,\r\n  getLikeArtApi,\r\n  getUnlikeArtApi,\r\n} from \"./api.js\";\r\nimport { selectLikes } from \"./selectors.js\";\r\n\r\nexport const getArt = createAsyncThunk(\r\n  \"open/getArt\",\r\n  async (artId, { rejectWithValue }) => {\r\n    const { success, payload } = await getArtApi(artId);\r\n\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getDeleteArt = createAsyncThunk(\r\n  \"open/getDeleteArt\",\r\n  async (artId, { rejectWithValue }) => {\r\n    const { success, payload } = await getDeleteArtApi(artId);\r\n\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getLikeArt = createAsyncThunk(\r\n  \"open/getLikeArt\",\r\n  async ({ artId, like }, { dispatch, getState, rejectWithValue }) => {\r\n    const { success } = like\r\n      ? await getLikeArtApi(artId)\r\n      : await getUnlikeArtApi(artId);\r\n\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setLikes(selectLikes(getState()) + (like ? 1 : -1)));\r\n      dispatch(setHasLiked(like));\r\n      return true;\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  art: {},\r\n  hasLiked: null,\r\n  getArtRequestStatus: \"idle\",\r\n  getDeleteArtRequestStatus: \"idle\",\r\n  getLikeArtRequestStatus: \"idle\",\r\n};\r\n\r\nconst artOpenSlice = createSlice({\r\n  name: \"open\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setLikes: (state, action) => {\r\n      state.art.likes = action.payload;\r\n    },\r\n\r\n    setHasLiked: (state, action) => {\r\n      state.hasLiked = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getArt.pending, (state, action) => {\r\n        state.getArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getArt.rejected, (state, action) => {\r\n        state.getArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getArt.fulfilled, (state, action) => {\r\n        state.getArtRequestStatus = \"fulfilled\";\r\n        state.art = action.payload.art;\r\n        state.hasLiked = action.payload.hasLiked;\r\n      })\r\n      .addCase(getDeleteArt.pending, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getDeleteArt.rejected, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getDeleteArt.fulfilled, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"fulfilled\";\r\n      })\r\n      .addCase(getLikeArt.pending, (state, action) => {\r\n        state.getLikeArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getLikeArt.rejected, (state, action) => {\r\n        state.getLikeArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getLikeArt.fulfilled, (state, action) => {\r\n        state.getLikeArtRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setLikes, setHasLiked } = artOpenSlice.actions;\r\n\r\nexport default artOpenSlice.reducer;\r\n","import GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport {\r\n  Card,\r\n  ButtonToolbar,\r\n  ButtonGroup,\r\n  Button,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\nimport useWindowSize from \"../../../../services/hooks/useWindowSize.js\";\r\n\r\nimport {\r\n  getArt,\r\n  getDeleteArt,\r\n  getLikeArt,\r\n  reset,\r\n} from \"./services/artOpenSlice\";\r\nimport {\r\n  selectHasLiked,\r\n  selectCreatorId,\r\n  selectId,\r\n  selectTitle,\r\n  selectDescription,\r\n  selectContent,\r\n  selectLikes,\r\n  selectGetArtRequestStatus,\r\n  selectGetDeleteArtRequestStatus,\r\n  selectGetLikeArtRequestStatus,\r\n} from \"./services/artOpenSlice/selectors.js\";\r\n\r\nimport {\r\n  selectIsAuthenticated,\r\n  selectUserId,\r\n} from \"../../../../services/authenticatedSlice/selectors.js\";\r\n\r\nexport default function Open() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const { width } = useWindowSize();\r\n\r\n  const { artId: queriedArtId } = useParams();\r\n\r\n  const hasLiked = useSelector(selectHasLiked);\r\n  const creatorId = useSelector(selectCreatorId);\r\n  const title = useSelector(selectTitle);\r\n  const description = useSelector(selectDescription);\r\n  const content = useSelector(selectContent);\r\n  const likes = useSelector(selectLikes);\r\n\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n  const isCreator = userId === creatorId;\r\n\r\n  const getArtRequestStatus = useSelector(selectGetArtRequestStatus);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getArt(queriedArtId));\r\n  const loadingRequestStatus = getArtRequestStatus;\r\n\r\n  const initiateDeleteRequest = () => dispatch(getDeleteArt(queriedArtId));\r\n  const deleteRequestStatus = useSelector(selectGetDeleteArtRequestStatus);\r\n\r\n  const initiateLikeRequest = () =>\r\n    dispatch(getLikeArt({ artId: queriedArtId, like: !hasLiked }));\r\n  const likeRequestStatus = useSelector(selectGetLikeArtRequestStatus);\r\n  const showLoadingLikeButton = likeRequestStatus === \"pending\";\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"art-open d-flex flex-column\" style={{ flex: 1 }}>\r\n      <GetRequestCard\r\n        initiateLoadingRequest={initiateLoadingRequest}\r\n        loadingRequestStatus={loadingRequestStatus}\r\n        fulfilledComponent={() => (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <h2>{title}</h2>\r\n            <hr />\r\n            {description}\r\n            <Card className=\"my-2\">\r\n              <Card.Body\r\n                style={{ whiteSpace: \"pre-line\", fontFamily: \"monospace\" }}\r\n              >\r\n                {content}\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <ButtonToolbar\r\n              className={\r\n                width > 576 ? \"mt-3\" : \"flex-column align-items-center\"\r\n              }\r\n              aria-label=\"controls\"\r\n            >\r\n              <ButtonGroup\r\n                className={width > 576 ? \"\" : \"mt-3\"}\r\n                aria-label=\"art\"\r\n              >\r\n                <Button\r\n                  variant={showLoadingLikeButton ? \"secondary\" : \"primary\"}\r\n                  disabled={showLoadingLikeButton || !isAuthenticated}\r\n                  onClick={initiateLikeRequest}\r\n                >\r\n                  {showLoadingLikeButton ? \"Loading...\" : \"Like\"}\r\n                  <Badge\r\n                    className=\"ml-2\"\r\n                    style={{ color: \"#000\" }}\r\n                    variant=\"light\"\r\n                  >\r\n                    {hasLiked && \"+\"}\r\n                    {likes}\r\n                  </Badge>\r\n                </Button>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => navigator.clipboard.writeText(content)}\r\n                >\r\n                  Copy\r\n                </Button>\r\n                {isCreator && (\r\n                  <PostRequestButton\r\n                    idleText=\"Delete\"\r\n                    idleVariant=\"danger\"\r\n                    initiateLoadingRequest={initiateDeleteRequest}\r\n                    loadingRequestStatus={deleteRequestStatus}\r\n                    redirectLink={`/art/browse?${query.toString()}`}\r\n                  />\r\n                )}\r\n              </ButtonGroup>\r\n\r\n              <ButtonGroup\r\n                className={width > 576 ? \"ml-auto\" : \"mt-3\"}\r\n                aria-label=\"navigation\"\r\n              >\r\n                <Button\r\n                  variant=\"success\"\r\n                  onClick={() =>\r\n                    history.push(\r\n                      `/account/profile/${creatorId}?${query.toString()}`\r\n                    )\r\n                  }\r\n                >\r\n                  Creator\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    history.push(`/art/browse?${query.toString()}`);\r\n                  }}\r\n                >\r\n                  Browse\r\n                </Button>\r\n              </ButtonGroup>\r\n            </ButtonToolbar>\r\n          </div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export async function postLoginUserApi(userAndRecaptchaToken) {\r\n  const response = await fetch(\"/api/authentication/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userAndRecaptchaToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nexport const username = Joi.string()\r\n  .alphanum()\r\n  .trim()\r\n  .min(3)\r\n  .max(20)\r\n  .required()\r\n  .messages({\r\n    \"string.empty\": \"Username is required.\",\r\n    \"string.min\": \"Username must be at least 3 characters long.\",\r\n    \"string.max\": \"Username must be less than or equal to 20 characters long.\",\r\n  });\r\n\r\nexport const email = Joi.string()\r\n  .email({ tlds: { allow: false } })\r\n  .required()\r\n  .messages({\r\n    \"string.empty\": \"Email is required.\",\r\n    \"string.email\": \"Please enter a correct email.\",\r\n  });\r\n\r\nexport const password = Joi.string().min(10).max(100).required().messages({\r\n  \"string.empty\": \"Password is required.\",\r\n  \"string.min\": \"Password must be at least 10 characters long.\",\r\n  \"string.max\": \"Password must be less than or equal to 100 characters long.\",\r\n});\r\n\r\nexport const recaptchaToken = Joi.string().required().messages({\r\n  \"string.empty\": \"reCaptcha is required.\",\r\n});\r\n","import Joi from \"joi\";\r\n\r\nimport {\r\n  email,\r\n  password,\r\n  recaptchaToken,\r\n} from \"../../../services/validationSchemas.js\";\r\n\r\nconst userSchema = Joi.object({\r\n  email,\r\n  password,\r\n});\r\n\r\nexport default Joi.object({\r\n  user: userSchema,\r\n  recaptchaToken,\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postLoginUserApi } from \"./api.js\";\r\nimport loginFormSchema from \"../loginFormSchema.js\";\r\nimport processPostFormRequest from \"../../../../../../services/functions/processPostFormRequest.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postLoginUser = createAsyncThunk(\r\n  \"login/postLoginUser\",\r\n  async (userAndRecaptchaToken, { dispatch, rejectWithValue }) => {\r\n    const formResponse = await processPostFormRequest(\r\n      userAndRecaptchaToken,\r\n      loginFormSchema,\r\n      postLoginUserApi,\r\n      dispatch,\r\n      setValidationErrors\r\n    );\r\n\r\n    const { success } = formResponse;\r\n\r\n    if (success) {\r\n      await dispatch(getAuthenticated());\r\n      return formResponse.payload;\r\n    } else {\r\n      if (formResponse.errors[0].path[0] === \"authentication\") {\r\n        await dispatch(getAuthenticated());\r\n        return rejectWithValue(\"preventStateUpdates\");\r\n      }\r\n\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  recaptchaToken: \"\",\r\n  validationErrors: [],\r\n  postLoginUserRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticationLoginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setEmail: (state, action) => {\r\n      state.email = action.payload;\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setRecaptchaToken: (state, action) => {\r\n      state.recaptchaToken = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n\r\n    setPostLoginUserRequestStatus: (state, action) => {\r\n      state.postLoginUserRequestStatus = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postLoginUser.pending, (state, action) => {\r\n        state.postLoginUserRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postLoginUser.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postLoginUserRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postLoginUser.fulfilled, (state, action) => {\r\n        state.postLoginUserRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  setValidationErrors,\r\n} = authenticationLoginSlice.actions;\r\n\r\nexport default authenticationLoginSlice.reducer;\r\n","export const selectLogin = (state) => state.authentication.login;\r\n\r\nexport const selectEmail = (state) => selectLogin(state).email;\r\n\r\nexport const selectPassword = (state) => selectLogin(state).password;\r\n\r\nexport const selectRecaptchaToken = (state) =>\r\n  selectLogin(state).recaptchaToken;\r\n\r\nexport const selectPostLoginUserRequestStatus = (state) =>\r\n  selectLogin(state).postLoginUserRequestStatus;\r\n\r\nexport const selectEmailError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) => path.length == 2 && path[0] === \"user\" && path[1] === \"email\"\r\n  )[0]?.message;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"password\"\r\n  )[0]?.message;\r\n\r\nexport const selectRecaptchaTokenError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"recaptchaToken\"\r\n  )[0]?.message;\r\n","export const SITE_KEY = \"6Lfvwf8aAAAAAGfNx8ZjRBw3wawxBMmDTkdttG6g\";\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport {\r\n  reset,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  postLoginUser,\r\n} from \"./services/authenticationLoginSlice\";\r\nimport {\r\n  selectEmail,\r\n  selectPassword,\r\n  selectRecaptchaToken,\r\n  selectPostLoginUserRequestStatus,\r\n  selectEmailError,\r\n  selectPasswordError,\r\n  selectRecaptchaTokenError,\r\n} from \"./services/authenticationLoginSlice/selectors.js\";\r\n\r\nimport { SITE_KEY } from \"../../../../services/constants.js\";\r\n\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const query = useQuery();\r\n\r\n  const redirectValue = query.get(\"redirect\");\r\n  const isRedirect = Boolean(redirectValue);\r\n  if (isRedirect) query.delete(\"redirect\");\r\n  const redirectLink = isRedirect ? `${redirectValue}?${query.toString()}` : \"\";\r\n\r\n  const email = useSelector(selectEmail);\r\n  const password = useSelector(selectPassword);\r\n  const recaptchaToken = useSelector(selectRecaptchaToken);\r\n\r\n  const emailError = useSelector(selectEmailError);\r\n  const passwordError = useSelector(selectPasswordError);\r\n  const recaptchaTokenError = useSelector(selectRecaptchaTokenError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(postLoginUser({ user: { email, password }, recaptchaToken }));\r\n  const loadingRequestStatus = useSelector(selectPostLoginUserRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-login d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Login</h2>\r\n        <hr />\r\n\r\n        <Form>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              isInvalid={Boolean(emailError)}\r\n              onChange={(event) => dispatch(setEmail(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {emailError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              isInvalid={Boolean(passwordError)}\r\n              onChange={(event) => dispatch(setPassword(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {passwordError}\r\n            </Form.Control.Feedback>\r\n            <LinkContainer to=\"/authentication/recoverpassword\">\r\n              <a className=\"text-muted text-decoration-none\">\r\n                <Form.Text>Forgot Password?</Form.Text>\r\n              </a>\r\n            </LinkContainer>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <ReCAPTCHA\r\n          sitekey={SITE_KEY}\r\n          onChange={(tokenValue) => dispatch(setRecaptchaToken(tokenValue))}\r\n        />\r\n\r\n        <div className=\"invalid-feedback\" style={{ display: \"block\" }}>\r\n          {recaptchaTokenError}\r\n        </div>\r\n\r\n        <div className=\"mt-3 d-flex\">\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Login\"\r\n            redirectLink={isRedirect ? redirectLink : \"/account/dashboard\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function postRegisterUserApi(userAndRecaptchaToken) {\r\n  const response = await fetch(\"/api/authentication/register\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userAndRecaptchaToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nimport {\r\n  username,\r\n  email,\r\n  password,\r\n  recaptchaToken,\r\n} from \"../../../services/validationSchemas.js\";\r\n\r\nconst userSchema = Joi.object({\r\n  username,\r\n  email,\r\n  password,\r\n});\r\n\r\nexport default Joi.object({\r\n  user: userSchema,\r\n  recaptchaToken,\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postRegisterUserApi } from \"./api.js\";\r\nimport registerFormSchema from \"../registerFormSchema.js\";\r\nimport processPostFormRequest from \"../../../../../../services/functions/processPostFormRequest.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postRegisterUser = createAsyncThunk(\r\n  \"register/postRegisterUser\",\r\n  async (userAndRecaptchaToken, { dispatch, rejectWithValue }) => {\r\n    const formResponse = await processPostFormRequest(\r\n      userAndRecaptchaToken,\r\n      registerFormSchema,\r\n      postRegisterUserApi,\r\n      dispatch,\r\n      setValidationErrors\r\n    );\r\n\r\n    const { success } = formResponse;\r\n\r\n    if (success) {\r\n      await dispatch(getAuthenticated());\r\n      return formResponse.payload;\r\n    } else {\r\n      if (formResponse.errors[0].path[0] === \"authentication\") {\r\n        await dispatch(getAuthenticated());\r\n        return rejectWithValue(\"preventStateUpdates\");\r\n      }\r\n\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  recaptchaToken: \"\",\r\n  postRegisterUserRequestStatus: \"idle\",\r\n  validationErrors: [],\r\n};\r\n\r\nconst authenticationRegisterSlice = createSlice({\r\n  name: \"register\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setUsername: (state, action) => {\r\n      state.username = action.payload;\r\n    },\r\n\r\n    setEmail: (state, action) => {\r\n      state.email = action.payload;\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setRecaptchaToken: (state, action) => {\r\n      state.recaptchaToken = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postRegisterUser.pending, (state, action) => {\r\n        state.postRegisterUserRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postRegisterUser.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postRegisterUserRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postRegisterUser.fulfilled, (state, action) => {\r\n        state.postRegisterUserRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  setUsername,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  setValidationErrors,\r\n} = authenticationRegisterSlice.actions;\r\n\r\nexport default authenticationRegisterSlice.reducer;\r\n","export const selectRegister = (state) => state.authentication.register;\r\n\r\nexport const selectUsername = (state) => selectRegister(state).username;\r\n\r\nexport const selectEmail = (state) => selectRegister(state).email;\r\n\r\nexport const selectPassword = (state) => selectRegister(state).password;\r\n\r\nexport const selectRecaptchaToken = (state) =>\r\n  selectRegister(state).recaptchaToken;\r\n\r\nexport const selectPostRegisterUserRequestStatus = (state) =>\r\n  selectRegister(state).postRegisterUserRequestStatus;\r\n\r\nexport const selectUsernameError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"username\"\r\n  )[0]?.message;\r\n\r\nexport const selectEmailError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) => path.length == 2 && path[0] === \"user\" && path[1] === \"email\"\r\n  )[0]?.message;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"password\"\r\n  )[0]?.message;\r\n\r\nexport const selectRecaptchaTokenError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"recaptchaToken\"\r\n  )[0]?.message;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  reset,\r\n  setUsername,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  postRegisterUser,\r\n} from \"./services/authenticationRegisterSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectEmail,\r\n  selectPassword,\r\n  selectRecaptchaToken,\r\n  selectPostRegisterUserRequestStatus,\r\n  selectUsernameError,\r\n  selectEmailError,\r\n  selectPasswordError,\r\n  selectRecaptchaTokenError,\r\n} from \"./services/authenticationRegisterSlice/selectors.js\";\r\n\r\nimport { SITE_KEY } from \"../../../../services/constants.js\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function Register() {\r\n  const dispatch = useDispatch();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const email = useSelector(selectEmail);\r\n  const password = useSelector(selectPassword);\r\n  const recaptchaToken = useSelector(selectRecaptchaToken);\r\n\r\n  const usernameError = useSelector(selectUsernameError);\r\n  const emailError = useSelector(selectEmailError);\r\n  const passwordError = useSelector(selectPasswordError);\r\n  const recaptchaTokenError = useSelector(selectRecaptchaTokenError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(\r\n      postRegisterUser({ user: { username, email, password }, recaptchaToken })\r\n    );\r\n  const loadingRequestStatus = useSelector(selectPostRegisterUserRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-register d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Register</h2>\r\n        <hr />\r\n\r\n        <Form>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={username}\r\n              isInvalid={Boolean(usernameError)}\r\n              onChange={(event) => dispatch(setUsername(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {usernameError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              isInvalid={Boolean(emailError)}\r\n              onChange={(event) => dispatch(setEmail(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {emailError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              isInvalid={Boolean(passwordError)}\r\n              onChange={(event) => dispatch(setPassword(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {passwordError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <ReCAPTCHA\r\n          sitekey={SITE_KEY}\r\n          onChange={(tokenValue) => dispatch(setRecaptchaToken(tokenValue))}\r\n        />\r\n\r\n        <div className=\"invalid-feedback\" style={{ display: \"block\" }}>\r\n          {recaptchaTokenError}\r\n        </div>\r\n\r\n        <div className=\"mt-3 d-flex\">\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Register\"\r\n            redirectLink=\"/authentication/login\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getEmailVerificationApi(token) {\r\n  const response = await fetch(\r\n    `/api/authentication/emailverification/${token}`\r\n  );\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getEmailVerificationApi } from \"./api.js\";\r\nimport { setAlert } from \"../../../../../../components/AlertSystem/services/alertSystemSlice\";\r\n\r\nexport const getEmailVerification = createAsyncThunk(\r\n  \"authenticationEmailVerification/getEmailVerification\",\r\n  async (token, { dispatch, rejectWithValue }) => {\r\n    const data = await getEmailVerificationApi(token);\r\n\r\n    if (data.success) {\r\n      return true;\r\n    } else {\r\n      if (data.errors) {\r\n        if (data.errors[0].path[0] === \"alert\")\r\n          dispatch(\r\n            setAlert({ variant: \"danger\", message: data.errors[0].message })\r\n          );\r\n        else dispatch(setErrors(data.errors));\r\n      }\r\n\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  getEmailVerificationRequestStatus: \"idle\",\r\n  errors: [],\r\n};\r\n\r\nconst authenticationEmailVerificationSlice = createSlice({\r\n  name: \"emailVerification\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getEmailVerification.pending, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getEmailVerification.rejected, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getEmailVerification.fulfilled, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setErrors } =\r\n  authenticationEmailVerificationSlice.actions;\r\n\r\nexport default authenticationEmailVerificationSlice.reducer;\r\n","export const selectEmailVerification = (state) =>\r\n  state.authentication.emailVerification;\r\n\r\nexport const selectGetEmailVerificationRequestStatus = (state) =>\r\n  selectEmailVerification(state).getEmailVerificationRequestStatus;\r\n","import { useParams, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  reset,\r\n  getEmailVerification,\r\n} from \"./services/authenticationEmailVerificationSlice\";\r\nimport { selectGetEmailVerificationRequestStatus } from \"./services/authenticationEmailVerificationSlice/selectors.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../services/authenticatedSlice\";\r\nimport { selectIsAuthenticated } from \"../../../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { setAlert } from \"../../../../components/AlertSystem/services/alertSystemSlice\";\r\nimport { selectAlert } from \"../../../../components/AlertSystem/services/alertSystemSlice/selectors.js\";\r\n\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function EmailVerification() {\r\n  const dispatch = useDispatch();\r\n  const { token } = useParams();\r\n  const history = useHistory();\r\n\r\n  const alert = useSelector(selectAlert);\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getEmailVerification(token));\r\n  const loadingRequestStatus = useSelector(\r\n    selectGetEmailVerificationRequestStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-emailVerification d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <h2 style={{ textAlign: \"center\" }}>Email Verification</h2>\r\n      <hr />\r\n      <div>\r\n        {(!Boolean(alert) || alert.variant !== \"danger\") && (\r\n          <GetRequestCard\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            fulfilledComponent={() => {\r\n              dispatch(\r\n                setAlert({\r\n                  variant: \"success\",\r\n                  message:\r\n                    \"Your email has been successfully verified and your rank has been updated!\",\r\n                })\r\n              );\r\n              return <></>;\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {isAuthenticated ? (\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(getAuthenticated());\r\n              history.push(\"/account/dashboard\");\r\n            }}\r\n            className=\"mt-2\"\r\n            variant=\"success\"\r\n          >\r\n            Dashboard\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              history.push(\"/authentication/login\");\r\n            }}\r\n            className=\"mt-2\"\r\n            variant=\"success\"\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function postRecoverPasswordApi(recoverPasswordEmail) {\r\n  const response = await fetch(\"/api/authentication/recoverpassword\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(recoverPasswordEmail),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nimport { email } from \"../../../services/validationSchemas.js\";\r\n\r\nexport default Joi.object({\r\n  email,\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postRecoverPasswordApi } from \"./api.js\";\r\nimport recoverPasswordFormSchema from \"../recoverPasswordFormSchema.js\";\r\nimport processPostFormRequest from \"../../../../../../services/functions/processPostFormRequest.js\";\r\n\r\nexport const postRecoverPassword = createAsyncThunk(\r\n  \"recoverPassword/postRecoverPassword\",\r\n  async (recoverPasswordEmail, { dispatch, rejectWithValue }) => {\r\n    const formResponse = await processPostFormRequest(\r\n      recoverPasswordEmail,\r\n      recoverPasswordFormSchema,\r\n      postRecoverPasswordApi,\r\n      dispatch,\r\n      setValidationErrors\r\n    );\r\n\r\n    const { success } = formResponse;\r\n\r\n    if (success) {\r\n      return formResponse.payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  validationErrors: [],\r\n  postRecoverPasswordRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticationRecoverPasswordSlice = createSlice({\r\n  name: \"recoverPassword\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setEmail: (state, action) => {\r\n      state.email = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postRecoverPassword.pending, (state, action) => {\r\n        state.postRecoverPasswordRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postRecoverPassword.rejected, (state, action) => {\r\n        state.postRecoverPasswordRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postRecoverPassword.fulfilled, (state, action) => {\r\n        state.postRecoverPasswordRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setEmail, setValidationErrors } =\r\n  authenticationRecoverPasswordSlice.actions;\r\n\r\nexport default authenticationRecoverPasswordSlice.reducer;\r\n","export const selectRecoverPassword = (state) =>\r\n  state.authentication.recoverPassword;\r\n\r\nexport const selectEmail = (state) => selectRecoverPassword(state).email;\r\n\r\nexport const selectPostRecoverPasswordRequestStatus = (state) =>\r\n  selectRecoverPassword(state).postRecoverPasswordRequestStatus;\r\n\r\nexport const selectEmailError = (state) =>\r\n  selectRecoverPassword(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"email\"\r\n  )[0]?.message;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  postRecoverPassword,\r\n  reset,\r\n  setEmail,\r\n} from \"./services/authenticationRecoverPasswordSlice\";\r\nimport {\r\n  selectEmail,\r\n  selectEmailError,\r\n  selectPostRecoverPasswordRequestStatus,\r\n} from \"./services/authenticationRecoverPasswordSlice/selectors.js\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport RepeatedPostRequestButton from \"../../../../components/RepeatedPostRequestButton\";\r\n\r\nexport default function RecoverPassword() {\r\n  const dispatch = useDispatch();\r\n\r\n  const email = useSelector(selectEmail);\r\n\r\n  const emailError = useSelector(selectEmailError);\r\n\r\n  const initiateLoadingRequest = () => dispatch(postRecoverPassword({ email }));\r\n  const loadingRequestStatus = useSelector(\r\n    selectPostRecoverPasswordRequestStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-recoverpassword d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Recover Password</h2>\r\n        <hr />\r\n      </div>\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            isInvalid={Boolean(emailError)}\r\n            onChange={(event) => dispatch(setEmail(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {emailError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <div>\r\n        <RepeatedPostRequestButton\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          idleText=\"Send Recovery Email\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function postNewPasswordApi(newPasswordAndToken) {\r\n  const response = await fetch(\"/api/authentication/newpassword\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(newPasswordAndToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nimport { password } from \"../../../services/validationSchemas.js\";\r\n\r\nexport default Joi.object({\r\n  _id: Joi.string().required(),\r\n  token: Joi.string().guid().required(),\r\n  password,\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postNewPasswordApi } from \"./api.js\";\r\nimport newPasswordFormSchema from \"../newPasswordFormSchema.js\";\r\nimport processPostFormRequest from \"../../../../../../services/functions/processPostFormRequest.js\";\r\n\r\nexport const postNewPassword = createAsyncThunk(\r\n  \"newPassword/postNewPassword\",\r\n  async (newPasswordAndToken, { dispatch, rejectWithValue }) => {\r\n    const formResponse = await processPostFormRequest(\r\n      newPasswordAndToken,\r\n      newPasswordFormSchema,\r\n      postNewPasswordApi,\r\n      dispatch,\r\n      setValidationErrors\r\n    );\r\n\r\n    const { success } = formResponse;\r\n\r\n    if (success) {\r\n      return formResponse.payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  password: \"\",\r\n  postNewPasswordRequestStatus: \"idle\",\r\n  validationErrors: [],\r\n};\r\n\r\nconst authenticationNewPasswordSlice = createSlice({\r\n  name: \"newPassword\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postNewPassword.pending, (state, action) => {\r\n        state.postNewPasswordRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postNewPassword.rejected, (state, action) => {\r\n        state.postNewPasswordRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postNewPassword.fulfilled, (state, action) => {\r\n        state.postNewPasswordRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setPassword, setValidationErrors } =\r\n  authenticationNewPasswordSlice.actions;\r\n\r\nexport default authenticationNewPasswordSlice.reducer;\r\n","export const selectNewPassword = (state) => state.authentication.newPassword;\r\n\r\nexport const selectPassword = (state) => selectNewPassword(state).password;\r\n\r\nexport const selectPostNewPasswordRequestStatus = (state) =>\r\n  selectNewPassword(state).postNewPasswordRequestStatus;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectNewPassword(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"password\"\r\n  )[0]?.message;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  reset,\r\n  setPassword,\r\n  postNewPassword,\r\n} from \"./services/authenticationNewPasswordSlice\";\r\nimport {\r\n  selectPassword,\r\n  selectPostNewPasswordRequestStatus,\r\n  selectPasswordError,\r\n} from \"./services/authenticationNewPasswordSlice/selectors.js\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nexport default function NewPassword() {\r\n  const dispatch = useDispatch();\r\n  const { _id, token } = useParams();\r\n\r\n  const password = useSelector(selectPassword);\r\n\r\n  const passwordError = useSelector(selectPasswordError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(postNewPassword({ _id, token, password }));\r\n  const loadingRequestStatus = useSelector(selectPostNewPasswordRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-newpassword d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>New Password</h2>\r\n        <hr />\r\n      </div>\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            isInvalid={Boolean(passwordError)}\r\n            onChange={(event) => dispatch(setPassword(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {passwordError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <div>\r\n        <PostRequestButton\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          idleText=\"Set Password\"\r\n          redirectLink=\"/authentication/login\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectIsAuthenticated } from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Login from \"./scenes/Login\";\r\nimport Register from \"./scenes/Register\";\r\nimport EmailVerification from \"./scenes/EmailVerification\";\r\nimport RecoverPassword from \"./scenes/RecoverPassword\";\r\nimport NewPassword from \"./scenes/NewPassword\";\r\n\r\nexport default function Authentication() {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  return [\r\n    <Route exact path=\"/authentication/login\" key=\"/authentication/login\">\r\n      {isAuthenticated ? <Redirect exact to=\"/account/dashboard\" /> : <Login />}\r\n    </Route>,\r\n    <Route exact path=\"/authentication/register\" key=\"/authentication/register\">\r\n      {isAuthenticated ? (\r\n        <Redirect exact to=\"/account/dashboard\" />\r\n      ) : (\r\n        <Register />\r\n      )}\r\n    </Route>,\r\n    <Route\r\n      exact\r\n      path=\"/authentication/emailverification/:token\"\r\n      key=\"/authentication/emailverification/:token\"\r\n    >\r\n      <EmailVerification />\r\n    </Route>,\r\n    <Route\r\n      exact\r\n      path=\"/authentication/recoverpassword\"\r\n      key=\"/authentication/recoverpassword\"\r\n    >\r\n      <RecoverPassword />\r\n    </Route>,\r\n    <Route\r\n      exact\r\n      path=\"/authentication/newpassword/:_id/:token\"\r\n      key=\"/authentication/newpassword/:_id/:token\"\r\n    >\r\n      <NewPassword />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport getInitiateLoadingRequest from \"../../services/loader/getInitiateLoadingRequest.js\";\r\nimport selectLoadingRequestStatus from \"../../services/loader/selectLoadingRequestStatus.js\";\r\n\r\nimport { Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../GetRequestCard\";\r\nimport AlertSystem from \"../AlertSystem\";\r\n\r\nimport Account from \"../../areas/Account\";\r\nimport Art from \"../../areas/Art\";\r\nimport Authentication from \"../../areas/Authentication\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n\r\n  const initiateLoadingRequest = getInitiateLoadingRequest(dispatch);\r\n  const loadingRequestStatus = useSelector(selectLoadingRequestStatus);\r\n\r\n  return (\r\n    <div className=\"main d-flex flex-column\" style={{ flex: 1 }}>\r\n      <Container className=\"my-3 d-flex flex-column\" style={{ flex: 1 }}>\r\n        <GetRequestCard\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          fulfilledComponent={() => (\r\n            <>\r\n              <AlertSystem />\r\n              <Switch>\r\n                {Account()}\r\n                {Art()}\r\n                {Authentication()}\r\n              </Switch>\r\n            </>\r\n          )}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\n\r\nimport Dashboard from \"./scenes/Dashboard\";\r\nimport Profile from \"./scenes/Profile\";\r\n\r\nexport default function Account() {\r\n  return [\r\n    <ProtectedRoute exact path=\"/account/dashboard\" key=\"/account/dashboard\">\r\n      <Dashboard />\r\n    </ProtectedRoute>,\r\n    <Route exact path=\"/account/profile/:userId\" key=\"/account/profile\">\r\n      <Profile />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\n\r\nimport Browse from \"./scenes/Browse\";\r\nimport Create from \"./scenes/Create\";\r\nimport Open from \"./scenes/Open\";\r\n\r\nexport default function Art() {\r\n  return [\r\n    <Route exact path=\"/art/browse\" key=\"/art/browse\">\r\n      <Browse />\r\n    </Route>,\r\n    <ProtectedRoute exact path=\"/art/create\" key=\"/art/create\">\r\n      <Create />\r\n    </ProtectedRoute>,\r\n    <Route exact path=\"/art/open/:artId\" key=\"/art/open\">\r\n      <Open />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer bg-dark p-3\">\r\n      <Container fluid>\r\n        {/* Columns have extra divs to hold link items so that the link items don't span the entire width of the column. */}\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col md>\r\n            <h5>ASCII-CRAFT</h5>\r\n            <div className=\"d-flex flex-column\">\r\n              <div>\r\n                <a className=\"px-2\" href=\"#\">\r\n                  Contact us\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <a href=\"#\">Privacy Policy</a>\r\n              </div>\r\n              <div>\r\n                <a href=\"#\">Terms of Service</a>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md>\r\n            <h5>HELP</h5>\r\n            <div className=\"d-flex flex-column\">\r\n              <div>\r\n                <a href=\"#\">FAQ</a>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <hr />\r\n\r\n        <small>\r\n          Please respect ASCII artists and do not remove their signature while\r\n          sharing their art.\r\n        </small>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport getInitiateLoadingRequest from \"./services/loader/getInitiateLoadingRequest.js\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./bootstrap.min.css\";\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const initiateLoadingRequest = getInitiateLoadingRequest(dispatch);\r\n\r\n  useEffect(() => initiateLoadingRequest());\r\n\r\n  return (\r\n    <div className=\"app d-flex flex-column\" style={{ minHeight: \"100vh\" }}>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport createReducer from \"../scenes/Create/services/artCreateSlice\";\r\nimport browseReducer from \"../scenes/Browse/services/artBrowseSlice\";\r\nimport openReducer from \"../scenes/Open/services/artOpenSlice\";\r\n\r\nconst artReducer = combineReducers({\r\n  create: createReducer,\r\n  browse: browseReducer,\r\n  open: openReducer,\r\n});\r\n\r\nexport default artReducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport registerReducer from \"../scenes/Register/services/authenticationRegisterSlice\";\r\nimport loginReducer from \"../scenes/Login/services/authenticationLoginSlice\";\r\nimport emailVerificationReducer from \"../scenes/EmailVerification/services/authenticationEmailVerificationSlice\";\r\nimport recoverPasswordReducer from \"../scenes/RecoverPassword/services/authenticationRecoverPasswordSlice\";\r\nimport newPasswordReducer from \"../scenes/NewPassword/services/authenticationNewPasswordSlice\";\r\n\r\nconst authenticationReducer = combineReducers({\r\n  register: registerReducer,\r\n  login: loginReducer,\r\n  emailVerification: emailVerificationReducer,\r\n  recoverPassword: recoverPasswordReducer,\r\n  newPassword: newPasswordReducer,\r\n});\r\n\r\nexport default authenticationReducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport dashboardReducer from \"../scenes/Dashboard/services/accountDashboardSlice\";\r\nimport profileReducer from \"../scenes/Profile/services/accountProfileSlice\";\r\n\r\nconst accountReducer = combineReducers({\r\n  dashboard: dashboardReducer,\r\n  profile: profileReducer,\r\n});\r\n\r\nexport default accountReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport artReducer from \"../../areas/Art/services/artReducer.js\";\r\nimport authenticationReducer from \"../../areas/Authentication/services/authenticationReducer.js\";\r\nimport accountReducer from \"../../areas/Account/services/accountReducer.js\";\r\n\r\nimport authenticatedReducer from \"../authenticatedSlice\";\r\nimport alertSystemReducer from \"../../components/AlertSystem/services/alertSystemSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    art: artReducer,\r\n    authentication: authenticationReducer,\r\n    account: accountReducer,\r\n\r\n    authenticated: authenticatedReducer,\r\n    alertSystem: alertSystemReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./services/redux/store.js\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}