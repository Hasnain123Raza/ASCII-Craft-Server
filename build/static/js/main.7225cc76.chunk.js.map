{"version":3,"sources":["services/authenticatedSlice/api.js","services/authenticatedSlice/index.js","services/loader/getInitiateLoadingRequest.js","services/authenticatedSlice/selectors.js","components/Header/index.js","services/hooks/useWindowSize.js","services/loader/selectLoadingRequestStatus.js","components/Resource/index.js","components/GetRequestCard/components/PendingCard/index.js","components/GetRequestCard/components/RejectedCard/index.js","components/GetRequestCard/index.js","services/hooks/useQuery.js","components/ProtectedRoute/index.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/api.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/index.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/selectors.js","components/RepeatedPostRequestButton/index.js","components/PostRequestButton/index.js","areas/Account/scenes/Dashboard/index.js","areas/Account/scenes/Profile/services/accountProfileSlice/api.js","areas/Account/scenes/Profile/services/accountProfileSlice/index.js","areas/Account/scenes/Profile/services/accountProfileSlice/selectors.js","components/ArtCard/index.js","areas/Account/scenes/Profile/index.js","components/Paginator/components/pages.js","components/Paginator/components/MinimalPagination/index.js","components/Paginator/components/CollapsedPagination/index.js","components/Paginator/components/ExpandedPagination/index.js","components/Paginator/index.js","components/ArtBrowser/index.js","components/ArtBrowser/services/grid.js","areas/Art/scenes/Browse/services/artBrowseSlice/api.js","areas/Art/scenes/Browse/services/artBrowseSlice/selectors.js","areas/Art/scenes/Browse/services/artBrowseSlice/index.js","areas/Art/scenes/Browse/index.js","areas/Art/scenes/Browse/services/getTotalPages.js","areas/Art/scenes/Create/services/createFormSchema.js","areas/Art/scenes/Create/services/artCreateSlice/api.js","areas/Art/scenes/Create/services/artCreateSlice/index.js","areas/Art/scenes/Create/services/artCreateSlice/selectors.js","areas/Art/scenes/Create/index.js","areas/Art/scenes/Open/services/artOpenSlice/api.js","areas/Art/scenes/Open/services/artOpenSlice/index.js","areas/Art/scenes/Open/services/artOpenSlice/selectors.js","areas/Art/scenes/Open/index.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/api.js","areas/Authentication/services/validationSchemas.js","areas/Authentication/scenes/Login/services/loginFormSchema.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/index.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/selectors.js","services/constants.js","areas/Authentication/scenes/Login/index.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/api.js","areas/Authentication/scenes/Register/services/registerFormSchema.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/index.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/selectors.js","areas/Authentication/scenes/Register/index.js","areas/Authentication/scenes/EmailVerification/services/authenticationEmailVerificationSlice/api.js","areas/Authentication/scenes/EmailVerification/services/authenticationEmailVerificationSlice/index.js","areas/Authentication/scenes/EmailVerification/services/authenticationEmailVerificationSlice/selectors.js","areas/Authentication/scenes/EmailVerification/index.js","areas/Authentication/scenes/RecoverPassword/services/authenticationRecoverPasswordSlice/api.js","areas/Authentication/scenes/RecoverPassword/services/recoverPasswordFormSchema.js","areas/Authentication/scenes/RecoverPassword/services/authenticationRecoverPasswordSlice/index.js","areas/Authentication/scenes/RecoverPassword/services/authenticationRecoverPasswordSlice/selectors.js","areas/Authentication/scenes/RecoverPassword/index.js","areas/Authentication/scenes/NewPassword/services/authenticationNewPasswordSlice/api.js","areas/Authentication/scenes/NewPassword/services/newPasswordFormSchema.js","areas/Authentication/scenes/NewPassword/services/authenticationNewPasswordSlice/index.js","areas/Authentication/scenes/NewPassword/services/authenticationNewPasswordSlice/selectors.js","areas/Authentication/scenes/NewPassword/index.js","areas/Authentication/index.js","components/Main/index.js","areas/Account/index.js","areas/Art/index.js","components/Footer/index.js","App.js","areas/Art/services/artReducer.js","areas/Authentication/services/authenticationReducer.js","areas/Account/services/accountReducer.js","services/redux/store.js","index.js"],"names":["getAuthenticatedApi","a","fetch","response","json","data","getAuthenticated","createAsyncThunk","_","rejectWithValue","success","payload","authenticatedSlice","createSlice","name","initialState","isAuthenticated","user","getAuthenticatedRequestStatus","reducers","resetAuthentication","state","action","extraReducers","builder","addCase","pending","rejected","fulfilled","authenticated","actions","initiateLoadingRequest","dispatch","selectAuthenticated","selectIsAuthenticated","selectUser","selectUserId","_id","selectUsername","username","selectEmail","email","selectRank","rank","NonMobileHeaderLinks","useSelector","userId","Nav","style","flex","Link","to","className","MobileHeaderLinks","NavDropdown","title","Item","Divider","Header","width","useState","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","Navbar","variant","Brand","selectLoadingRequestStatus","selectGetAuthenticatedRequestStatus","Resource","loadingRequestStatus","Idle","idleComponent","Pending","pendingComponent","Rejected","rejectedComponent","Fulfilled","fulfilledComponent","PendingCard","Card","Body","Button","disabled","RejectedCard","onClick","GetRequestCard","useQuery","URLSearchParams","useLocation","search","ProtectedRoute","children","rest","location","query","set","pathname","exact","toString","getLogoutApi","getEmailVerificationApi","getEmailVerification","setErrors","error","getLogout","getEmailVerificationRequestStatus","getLogoutRequestStatus","errors","accountDashboardSlice","reset","selectDashboard","account","dashboard","selectGetEmailVerificationRequestStatus","selectGetLogoutRequestStatus","selectAlertError","filter","path","length","message","InitiateLoadingRequestButton","text","LoadingButton","RepeatedPostRequestButton","idleText","idleVariant","hideRetry","PostRequestButton","redirectLink","Dashboard","useDispatch","alertError","textAlign","Boolean","Alert","Badge","getProfileApi","getProfile","profileData","getProfileRequestStatus","accountProfileSlice","selectProfile","profile","selectProfileData","selectTotalArtsCreated","totalArtsCreated","selectRecentSimplifiedArts","recentSimplifiedArts","selectGetProfileRequestStatus","ArtCard","props","history","useHistory","simplifiedArt","description","Footer","push","Profile","useParams","Container","Row","map","simplifiedArtIndex","Col","md","getPagesToGenerate","totalPages","currentPage","pageChangeCallback","pagesToGenerate","counter","generatePages","index","Pagination","active","generateMinimalPages","MinimalPagination","generatePrevPagination","newPageValue","Prev","generateCollapsedPages","generateNextPagination","Next","CollapsedPagination","generateFirstPagination","First","generateLeftEllipse","shouldGenerateLeftEllipsis","Ellipsis","pageValue","getLeftEllipsisPageValue","generateExpandedPages","shift","pop","generateRightEllipse","shouldGenerateRightEllipsis","getRightEllipsisPageValue","generateLastPagination","Last","ExpandedPagination","Paginator","ArtBrowser","cardsPerRow","totalRows","simplifiedArts","rows","rowsData","rowIndex","startingCardIndex","cardIndex","cardData","getRowsFromSimplifiedArts","row","getArtCountApi","urlSearchParams","getSimplifiedArtsApi","pageOffset","pageSize","selectBrowse","art","browse","selectArtCount","artCount","selectSimplifiedArts","getArtCountRequestStatus","selectGetArtCountRequestStatus","getSimplifiedArtsRequestStatus","selectGetSimplifiedArtsRequestStatus","selectCurrentPage","getArtCount","getSimplifiedArts","loadResources","queriedPage","getState","artBrowseSlice","setCurrentPage","Browse","artsPerPage","Math","ceil","getTotalPages","parsedQueriedPage","parseInt","get","isNaN","queriedUserId","loadingRequestPromise","abort","fluid","newPage","Joi","object","string","trim","min","max","required","messages","content","postCreateArtApi","method","headers","body","JSON","stringify","postCreateArt","validationResult","createFormSchema","validate","abortEarly","validationErrors","details","setValidationErrors","unauthenticated","responseArt","postCreateArtRequestStatus","artCreateSlice","resetArt","setTitle","setDescription","setContent","selectCreate","create","selectArt","selectTitle","selectDescription","selectContent","selectResponseArtId","selectResponseArt","selectPostCreateArtRequestStatus","selectTitleError","selectDescriptionError","selectContentError","Create","responseArtId","titleError","descriptionError","contentError","Form","Group","controlId","Label","Control","type","placeholder","value","isInvalid","onChange","event","target","Feedback","autoComplete","as","getArtApi","artId","getDeleteArtApi","getArt","getDeleteArt","getArtRequestStatus","getDeleteArtRequestStatus","artOpenSlice","selectOpen","open","selectCreatorId","creatorId","selectGetArtRequestStatus","selectGetDeleteArtRequestStatus","Open","queriedArtId","isCreator","initiateDeleteRequest","deleteRequestStatus","whiteSpace","fontFamily","navigator","clipboard","writeText","postLoginUserApi","userAndRecaptchaToken","alphanum","tlds","allow","password","recaptchaToken","userSchema","postLoginUser","loginFormSchema","postLoginUserRequestStatus","authenticationLoginSlice","setEmail","setPassword","setRecaptchaToken","setPostLoginUserRequestStatus","selectLogin","authentication","login","selectPassword","selectRecaptchaToken","selectPostLoginUserRequestStatus","selectEmailError","selectPasswordError","selectRecaptchaTokenError","SITE_KEY","Login","redirectValue","isRedirect","delete","emailError","passwordError","recaptchaTokenError","Text","sitekey","tokenValue","display","postRegisterUserApi","postRegisterUser","registerFormSchema","postRegisterUserRequestStatus","authenticationRegisterSlice","setUsername","selectRegister","register","selectPostRegisterUserRequestStatus","selectUsernameError","Register","usernameError","token","authenticationEmailVerificationSlice","selectEmailVerification","emailVerification","EmailVerification","postRecoverPasswordApi","recoverPasswordEmail","postRecoverPassword","recoverPasswordFormSchema","postRecoverPasswordRequestStatus","authenticationRecoverPasswordSlice","selectRecoverPassword","recoverPassword","selectPostRecoverPasswordRequestStatus","RecoverPassword","postNewPasswordApi","newPasswordAndToken","guid","postNewPassword","newPasswordFormSchema","postNewPasswordRequestStatus","authenticationNewPasswordSlice","selectNewPassword","newPassword","selectPostNewPasswordRequestStatus","NewPassword","Authentication","getInitiateLoadingRequest","href","App","minHeight","Main","artReducer","combineReducers","createReducer","browseReducer","openReducer","authenticationReducer","registerReducer","loginReducer","emailVerificationReducer","recoverPasswordReducer","newPasswordReducer","accountReducer","dashboardReducer","profileReducer","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7225cc76.chunk.js","sourcesContent":["export async function getAuthenticatedApi() {\r\n  const response = await fetch(\"/api/authentication/authenticated\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getAuthenticatedApi } from \"./api.js\";\r\n\r\nexport const getAuthenticated = createAsyncThunk(\r\n  \"authenticated/getAuthenticated\",\r\n  async (_, { rejectWithValue }) => {\r\n    const data = await getAuthenticatedApi();\r\n\r\n    if (data.success) {\r\n      return data.payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  getAuthenticatedRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticatedSlice = createSlice({\r\n  name: \"authenticated\",\r\n  initialState,\r\n  reducers: {\r\n    resetAuthentication: (state, action) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAuthenticated.pending, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getAuthenticated.rejected, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getAuthenticated.fulfilled, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"fulfilled\";\r\n\r\n        const { authenticated, user } = action.payload;\r\n        state.isAuthenticated = authenticated;\r\n        state.user = user;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetAuthentication } = authenticatedSlice.actions;\r\n\r\nexport default authenticatedSlice.reducer;\r\n","import { getAuthenticated } from \"../authenticatedSlice\";\r\n\r\nexport default function initiateLoadingRequest(dispatch) {\r\n  return () => {\r\n    dispatch(getAuthenticated());\r\n  };\r\n}\r\n","export const selectAuthenticated = (state) => state.authenticated;\r\n\r\nexport const selectIsAuthenticated = (state) =>\r\n  selectAuthenticated(state).isAuthenticated;\r\n\r\nexport const selectUser = (state) => selectAuthenticated(state).user;\r\n\r\nexport const selectUserId = (state) => selectUser(state)?._id;\r\n\r\nexport const selectUsername = (state) => selectUser(state)?.username;\r\n\r\nexport const selectEmail = (state) => selectUser(state)?.email;\r\n\r\nexport const selectRank = (state) => selectUser(state)?.rank;\r\n\r\nexport const selectGetAuthenticatedRequestStatus = (state) =>\r\n  selectAuthenticated(state).getAuthenticatedRequestStatus;\r\n","import useWindowSize from \"../../services/hooks/useWindowSize.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectIsAuthenticated,\r\n  selectUserId,\r\n} from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction NonMobileHeaderLinks() {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n\r\n  return (\r\n    <Nav style={{ flex: 1 }}>\r\n      <Nav.Link>Home</Nav.Link>\r\n      <LinkContainer to=\"/art/browse\">\r\n        <Nav.Link>Browse</Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/art/create\">\r\n        <Nav.Link>Create</Nav.Link>\r\n      </LinkContainer>\r\n\r\n      {isAuthenticated ? (\r\n        <>\r\n          <LinkContainer to={`/account/profile/${userId}`}>\r\n            <Nav.Link>Profile</Nav.Link>\r\n          </LinkContainer>\r\n\r\n          <LinkContainer to=\"/account/dashboard\">\r\n            <Nav.Link className=\"ml-auto\">Account</Nav.Link>\r\n          </LinkContainer>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <LinkContainer to=\"/authentication/login\">\r\n            <Nav.Link className=\"ml-auto\">Login</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/authentication/register\">\r\n            <Nav.Link>Register</Nav.Link>\r\n          </LinkContainer>\r\n        </>\r\n      )}\r\n    </Nav>\r\n  );\r\n}\r\n\r\nfunction MobileHeaderLinks() {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n\r\n  return (\r\n    <Nav className=\"ml-auto\">\r\n      <NavDropdown title=\"Menu\">\r\n        <NavDropdown.Item>Home</NavDropdown.Item>\r\n        <LinkContainer to=\"/art/browse\">\r\n          <NavDropdown.Item>Browse</NavDropdown.Item>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/art/create\">\r\n          <NavDropdown.Item>Create</NavDropdown.Item>\r\n        </LinkContainer>\r\n        <NavDropdown.Divider />\r\n        {isAuthenticated ? (\r\n          <>\r\n            <LinkContainer to={`/account/profile/${userId}`}>\r\n              <NavDropdown.Item>Profile</NavDropdown.Item>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/account/dashboard\">\r\n              <NavDropdown.Item>Account</NavDropdown.Item>\r\n            </LinkContainer>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <LinkContainer to=\"/authentication/login\">\r\n              <NavDropdown.Item>Login</NavDropdown.Item>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/authentication/register\">\r\n              <NavDropdown.Item>Register</NavDropdown.Item>\r\n            </LinkContainer>\r\n          </>\r\n        )}\r\n      </NavDropdown>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default function Header() {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <div className=\"header pbc\">\r\n      <Navbar variant=\"dark\">\r\n        <Navbar.Brand>ASCII-CRAFT</Navbar.Brand>\r\n        {width > 576 ? <NonMobileHeaderLinks /> : <MobileHeaderLinks />}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// Hook\r\nexport default function useWindowSize() {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return windowSize;\r\n}\r\n","import { selectGetAuthenticatedRequestStatus } from \"../authenticatedSlice/selectors.js\";\r\n\r\nexport default function selectLoadingRequestStatus(state) {\r\n  const getAuthenticatedRequestStatus =\r\n    selectGetAuthenticatedRequestStatus(state);\r\n\r\n  return getAuthenticatedRequestStatus;\r\n}\r\n","export default function Resource({\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleComponent: Idle,\r\n  pendingComponent: Pending,\r\n  rejectedComponent: Rejected,\r\n  fulfilledComponent: Fulfilled,\r\n}) {\r\n  return loadingRequestStatus === \"idle\" ? (\r\n    <Idle initiateLoadingRequest={initiateLoadingRequest} />\r\n  ) : loadingRequestStatus === \"pending\" ? (\r\n    <Pending />\r\n  ) : loadingRequestStatus === \"rejected\" ? (\r\n    <Rejected initiateLoadingRequest={initiateLoadingRequest} />\r\n  ) : loadingRequestStatus === \"fulfilled\" ? (\r\n    <Fulfilled />\r\n  ) : (\r\n    \"Default\"\r\n  );\r\n}\r\n","import { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function PendingCard() {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <h5>Please Wait</h5>\r\n        <hr />\r\n        We are loading some resources\r\n        <br />\r\n        <Button className=\"w-100 mt-3\" variant=\"secondary\" disabled>\r\n          Loading...\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function RejectedCard({ initiateLoadingRequest }) {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <h5>Uh Oh</h5>\r\n        <hr />\r\n        We were unable to load some resources\r\n        <br />\r\n        <Button\r\n          className=\"w-100 mt-3\"\r\n          variant=\"danger\"\r\n          onClick={initiateLoadingRequest}\r\n        >\r\n          Retry\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import Resource from \"../Resource\";\r\nimport PendingCard from \"./components/PendingCard\";\r\nimport RejectedCard from \"./components/RejectedCard\";\r\n\r\nexport default function GetRequestCard({\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  fulfilledComponent,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={PendingCard}\r\n      pendingComponent={PendingCard}\r\n      rejectedComponent={RejectedCard}\r\n      fulfilledComponent={fulfilledComponent}\r\n    />\r\n  );\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport useQuery from \"../../services/hooks/useQuery.js\";\r\n\r\nimport { selectIsAuthenticated } from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute({ children, ...rest }) {\r\n  const location = useLocation();\r\n  const query = useQuery();\r\n  query.set(\"redirect\", location.pathname);\r\n\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {isAuthenticated ? (\r\n        children\r\n      ) : (\r\n        <Redirect exact to={\"/authentication/login?\" + query.toString()} />\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","export async function getLogoutApi() {\r\n  const response = await fetch(\"/api/authentication/logout\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getEmailVerificationApi() {\r\n  const response = await fetch(\"/api/authentication/emailVerification\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getLogoutApi, getEmailVerificationApi } from \"./api.js\";\r\n\r\nimport { resetAuthentication } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const getEmailVerification = createAsyncThunk(\r\n  \"dashboard/getEmailVerification\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    const data = await getEmailVerificationApi();\r\n\r\n    if (data.success) {\r\n      dispatch(setErrors([]));\r\n      return true;\r\n    } else {\r\n      if (data.error) {\r\n        dispatch(setErrors([data.error]));\r\n      }\r\n      rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const getLogout = createAsyncThunk(\r\n  \"dashboard/getLogout\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    const data = await getLogoutApi();\r\n\r\n    if (data.success) {\r\n      dispatch(resetAuthentication());\r\n      return true;\r\n    } else {\r\n      rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  getEmailVerificationRequestStatus: \"idle\",\r\n  getLogoutRequestStatus: \"idle\",\r\n  errors: [],\r\n};\r\n\r\nconst accountDashboardSlice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getEmailVerification.pending, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getEmailVerification.rejected, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getEmailVerification.fulfilled, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"fulfilled\";\r\n      })\r\n      .addCase(getLogout.pending, (state, action) => {\r\n        state.getLogoutRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getLogout.rejected, (state, action) => {\r\n        state.getLogoutRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getLogout.fulfilled, (state, action) => {\r\n        state.getLogoutRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setErrors } = accountDashboardSlice.actions;\r\n\r\nexport default accountDashboardSlice.reducer;\r\n","export const selectDashboard = (state) => state.account.dashboard;\r\n\r\nexport const selectGetEmailVerificationRequestStatus = (state) =>\r\n  selectDashboard(state).getEmailVerificationRequestStatus;\r\n\r\nexport const selectGetLogoutRequestStatus = (state) =>\r\n  selectDashboard(state).getLogoutRequestStatus;\r\n\r\nexport const selectAlertError = (state) =>\r\n  selectDashboard(state).errors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"alert\"\r\n  )[0]?.message;\r\n","import { Button } from \"react-bootstrap\";\r\nimport Resource from \"../Resource\";\r\n\r\nfunction InitiateLoadingRequestButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  text,\r\n  variant,\r\n}) {\r\n  return (\r\n    <Button\r\n      className={className}\r\n      variant={variant}\r\n      onClick={initiateLoadingRequest}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction LoadingButton({ className }) {\r\n  return (\r\n    <Button className={className} variant=\"secondary\" disabled>\r\n      Loading...\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function RepeatedPostRequestButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleText,\r\n  idleVariant = \"success\",\r\n  hideRetry = true,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text={idleText}\r\n          variant={idleVariant}\r\n        />\r\n      )}\r\n      pendingComponent={() => <LoadingButton className={className} />}\r\n      rejectedComponent={() =>\r\n        hideRetry ? (\r\n          <InitiateLoadingRequestButton\r\n            className={className}\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            text={idleText}\r\n            variant={idleVariant}\r\n          />\r\n        ) : (\r\n          <InitiateLoadingRequestButton\r\n            className={className}\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            text=\"Retry\"\r\n            variant=\"danger\"\r\n          />\r\n        )\r\n      }\r\n      fulfilledComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text={idleText}\r\n          variant={idleVariant}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { Redirect } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Resource from \"../Resource\";\r\n\r\nfunction InitiateLoadingRequestButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  text,\r\n  variant,\r\n}) {\r\n  return (\r\n    <Button\r\n      className={className}\r\n      variant={variant}\r\n      onClick={initiateLoadingRequest}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction LoadingButton({ className }) {\r\n  return (\r\n    <Button className={className} variant=\"secondary\" disabled>\r\n      Loading...\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function PostRequestButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleText,\r\n  idleVariant = \"success\",\r\n  redirectLink,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text={idleText}\r\n          variant={idleVariant}\r\n        />\r\n      )}\r\n      pendingComponent={() => <LoadingButton className={className} />}\r\n      rejectedComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text=\"Retry\"\r\n          variant=\"danger\"\r\n        />\r\n      )}\r\n      fulfilledComponent={() => <Redirect exact to={redirectLink} />}\r\n    />\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getEmailVerification,\r\n  getLogout,\r\n  reset,\r\n} from \"./services/accountDashboardSlice\";\r\nimport {\r\n  selectGetEmailVerificationRequestStatus,\r\n  selectGetLogoutRequestStatus,\r\n  selectAlertError,\r\n} from \"./services/accountDashboardSlice/selectors.js\";\r\n\r\nimport {\r\n  selectUsername,\r\n  selectEmail,\r\n  selectRank,\r\n} from \"../../../../services/authenticatedSlice/selectors\";\r\n\r\nimport { Badge, Alert } from \"react-bootstrap\";\r\nimport RepeatedPostRequestButton from \"../../../../components/RepeatedPostRequestButton\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const email = useSelector(selectEmail);\r\n  const rank = useSelector(selectRank);\r\n  const alertError = useSelector(selectAlertError);\r\n\r\n  const initiateGetEmailVerification = () => {\r\n    dispatch(getEmailVerification());\r\n  };\r\n  const getEmailVerificationRequestStatus = useSelector(\r\n    selectGetEmailVerificationRequestStatus\r\n  );\r\n\r\n  const initiateLoadingRequest = () => dispatch(getLogout());\r\n  const loadingRequestStatus = useSelector(selectGetLogoutRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"account-dashboard d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Welcome {username}!</h2>\r\n        <hr />\r\n        {Boolean(alertError) && <Alert variant=\"danger\">{alertError}</Alert>}\r\n        <h6 className=\"d-inline\">Username: </h6> {username} <br />\r\n        <h6 className=\"d-inline\">Email: </h6>\r\n        {email}{\" \"}\r\n        {rank === \"unverified\" && <Badge variant=\"danger\">Not Verified</Badge>}\r\n        <br />\r\n        <h6 className=\"d-inline\">Rank: </h6> {rank} <br />\r\n        <div className=\"mt-2\">\r\n          {rank === \"unverified\" && (\r\n            <RepeatedPostRequestButton\r\n              className=\"mr-2\"\r\n              initiateLoadingRequest={initiateGetEmailVerification}\r\n              loadingRequestStatus={getEmailVerificationRequestStatus}\r\n              idleText=\"Send Email Verification\"\r\n            />\r\n          )}\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Logout\"\r\n            idleVariant=\"primary\"\r\n            redirectLink=\"/authentication/login\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getProfileApi(userId) {\r\n  const response = await fetch(`/api/account/profile/${userId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getProfileApi } from \"./api\";\r\n\r\nexport const getProfile = createAsyncThunk(\r\n  \"profile/getProfile\",\r\n  async (userId, { rejectWithValue }) => {\r\n    const { success, payload } = await getProfileApi(userId);\r\n\r\n    if (success) {\r\n      return payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  profileData: {},\r\n  getProfileRequestStatus: \"idle\",\r\n};\r\n\r\nconst accountProfileSlice = createSlice({\r\n  name: \"profile\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getProfile.pending, (state, action) => {\r\n        state.getProfileRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getProfile.rejected, (state, action) => {\r\n        state.getProfileRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getProfile.fulfilled, (state, action) => {\r\n        state.getProfileRequestStatus = \"fulfilled\";\r\n        state.profileData = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = accountProfileSlice.actions;\r\n\r\nexport default accountProfileSlice.reducer;\r\n","export const selectProfile = (state) => state.account.profile;\r\n\r\nexport const selectProfileData = (state) => selectProfile(state).profileData;\r\n\r\nexport const selectId = (state) => selectProfileData(state)._id;\r\n\r\nexport const selectUsername = (state) => selectProfileData(state).username;\r\n\r\nexport const selectTotalArtsCreated = (state) =>\r\n  selectProfileData(state).totalArtsCreated;\r\n\r\nexport const selectRecentSimplifiedArts = (state) =>\r\n  selectProfileData(state).recentSimplifiedArts;\r\n\r\nexport const selectRecentSimplifiedArtByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArts(state)[index];\r\n\r\nexport const selectRecentSimplifiedArtIdByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArtByIndex(index)(state)._id;\r\n\r\nexport const selectRecentSimplifiedArtTitleByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArtByIndex(index)(state).title;\r\n\r\nexport const selectRecentSimplifiedArtDescriptionByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArtByIndex(index)(state).description;\r\n\r\nexport const selectGetProfileRequestStatus = (state) =>\r\n  selectProfile(state).getProfileRequestStatus;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport useQuery from \"../../services/hooks/useQuery.js\";\r\n\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function ArtCard(props) {\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n\r\n  const { simplifiedArt } = props;\r\n  const { _id, title, description } = simplifiedArt;\r\n\r\n  return (\r\n    <Card className=\"h-100\">\r\n      <Card.Body style={{ textAlign: \"center\" }}>\r\n        <h5>{title}</h5>\r\n        <hr />\r\n        {description}\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button\r\n          className=\"w-100\"\r\n          variant=\"success\"\r\n          onClick={() => history.push(`/art/open/${_id}?${query.toString()}`)}\r\n        >\r\n          Open\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport { getProfile, reset } from \"./services/accountProfileSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectRecentSimplifiedArts,\r\n  selectTotalArtsCreated,\r\n  selectGetProfileRequestStatus,\r\n} from \"./services/accountProfileSlice/selectors.js\";\r\n\r\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport ArtCard from \"../../../../components/ArtCard\";\r\n\r\nexport default function Profile() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const { userId } = useParams();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const recentSimplifiedArts = useSelector(selectRecentSimplifiedArts);\r\n  const totalArtsCreated = useSelector(selectTotalArtsCreated);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getProfile(userId));\r\n  const loadingRequestStatus = useSelector(selectGetProfileRequestStatus);\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className=\"account-profile d-flex flex-column\" style={{ flex: 1 }}>\r\n      <GetRequestCard\r\n        initiateLoadingRequest={initiateLoadingRequest}\r\n        loadingRequestStatus={loadingRequestStatus}\r\n        fulfilledComponent={() => (\r\n          <div>\r\n            <h2 style={{ textAlign: \"center\" }}>{username}</h2>\r\n            <hr />\r\n\r\n            <h2>Creations</h2>\r\n            <Card>\r\n              <Card.Body>\r\n                <Container>\r\n                  <Row>\r\n                    {totalArtsCreated > 0 ? (\r\n                      recentSimplifiedArts.map(\r\n                        (simplifiedArt, simplifiedArtIndex) => (\r\n                          <Col key={simplifiedArtIndex} md={4}>\r\n                            <ArtCard simplifiedArt={simplifiedArt} />\r\n                          </Col>\r\n                        )\r\n                      )\r\n                    ) : (\r\n                      <Col>\r\n                        <h2\r\n                          className=\"text-muted\"\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          Uh oh... There are no arts\r\n                        </h2>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </Container>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            {totalArtsCreated > 0 &&\r\n              (totalArtsCreated <= 3 ? (\r\n                <div className=\"d-flex mt-2\">\r\n                  Total Arts: {totalArtsCreated}\r\n                </div>\r\n              ) : (\r\n                <div className=\"d-flex mt-2\">\r\n                  Total Arts: {totalArtsCreated}\r\n                  <Button\r\n                    className=\"ml-auto\"\r\n                    variant=\"success\"\r\n                    onClick={() => {\r\n                      query.set(\"userId\", userId);\r\n                      history.push(`/art/browse?${query.toString()}`);\r\n                    }}\r\n                  >\r\n                    Browse All\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Pagination } from \"react-bootstrap\";\r\n\r\nexport const getPagesToGenerate = (\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback\r\n) => {\r\n  let pagesToGenerate = [];\r\n  if (totalPages <= 5) {\r\n    for (let counter = 1; counter < totalPages + 1; counter++) {\r\n      pagesToGenerate.push(counter);\r\n    }\r\n  } else {\r\n    for (let counter = currentPage - 2; counter < currentPage + 3; counter++) {\r\n      if (counter > 0 && counter <= totalPages) {\r\n        pagesToGenerate.push(counter);\r\n      }\r\n    }\r\n  }\r\n  return pagesToGenerate;\r\n};\r\n\r\nexport const generatePages = (\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n  pagesToGenerate\r\n) => {\r\n  return pagesToGenerate.map((index) => (\r\n    <Pagination.Item\r\n      key={index}\r\n      active={index == currentPage}\r\n      onClick={() => pageChangeCallback(index)}\r\n    >\r\n      {index}\r\n    </Pagination.Item>\r\n  ));\r\n};\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction generateMinimalPages({ totalPages, currentPage, pageChangeCallback }) {\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    getPagesToGenerate(totalPages, currentPage, pageChangeCallback)\r\n  );\r\n}\r\n\r\nexport default function MinimalPagination(props) {\r\n  return <Pagination>{generateMinimalPages(props)}</Pagination>;\r\n}\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction generatePrevPagination({ currentPage, pageChangeCallback }) {\r\n  let newPageValue = currentPage - 1;\r\n  if (newPageValue <= 1) {\r\n    newPageValue = 1;\r\n  }\r\n  return <Pagination.Prev onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateCollapsedPages({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    getPagesToGenerate(totalPages, currentPage, pageChangeCallback)\r\n  );\r\n}\r\n\r\nfunction generateNextPagination(props) {\r\n  const { totalPages, currentPage, pageChangeCallback } = props;\r\n\r\n  let newPageValue = currentPage + 1;\r\n  if (newPageValue >= totalPages) {\r\n    newPageValue = totalPages;\r\n  }\r\n  return <Pagination.Next onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nexport default function CollapsedPagination(props) {\r\n  return (\r\n    <Pagination>\r\n      {generatePrevPagination(props)}\r\n      {generateCollapsedPages(props)}\r\n      {generateNextPagination(props)}\r\n    </Pagination>\r\n  );\r\n}\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction shouldGenerateLeftEllipsis(totalPages, currentPage) {\r\n  return currentPage > 3;\r\n}\r\n\r\nfunction shouldGenerateRightEllipsis(totalPages, currentPage) {\r\n  return currentPage < totalPages - 2;\r\n}\r\n\r\nfunction getLeftEllipsisPageValue(totalPages, currentPage) {\r\n  const pageValue = currentPage - 4;\r\n  if (pageValue <= 1) {\r\n    return 1;\r\n  } else {\r\n    return pageValue;\r\n  }\r\n}\r\n\r\nfunction getRightEllipsisPageValue(totalPages, currentPage) {\r\n  const pageValue = currentPage + 4;\r\n  if (pageValue >= totalPages) {\r\n    return totalPages;\r\n  } else {\r\n    return pageValue;\r\n  }\r\n}\r\n\r\nfunction generateFirstPagination({ pageChangeCallback }) {\r\n  return <Pagination.First onClick={() => pageChangeCallback(1)} />;\r\n}\r\n\r\nfunction generatePrevPagination({ currentPage, pageChangeCallback }) {\r\n  let newPageValue = currentPage - 1;\r\n  if (newPageValue <= 1) {\r\n    newPageValue = 1;\r\n  }\r\n  return <Pagination.Prev onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateLeftEllipse({ totalPages, currentPage, pageChangeCallback }) {\r\n  return (\r\n    shouldGenerateLeftEllipsis(totalPages, currentPage) && (\r\n      <Pagination.Ellipsis\r\n        onClick={() =>\r\n          pageChangeCallback(getLeftEllipsisPageValue(totalPages, currentPage))\r\n        }\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nfunction generateExpandedPages({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  let pagesToGenerate = getPagesToGenerate(totalPages, currentPage);\r\n  pagesToGenerate.shift();\r\n  pagesToGenerate.pop();\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    pagesToGenerate\r\n  );\r\n}\r\n\r\nfunction generateRightEllipse({ totalPages, currentPage, pageChangeCallback }) {\r\n  return (\r\n    shouldGenerateRightEllipsis(totalPages, currentPage) && (\r\n      <Pagination.Ellipsis\r\n        onClick={() =>\r\n          pageChangeCallback(getRightEllipsisPageValue(totalPages, currentPage))\r\n        }\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nfunction generateNextPagination({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  let newPageValue = currentPage + 1;\r\n  if (newPageValue >= totalPages) {\r\n    newPageValue = totalPages;\r\n  }\r\n  return <Pagination.Next onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateLastPagination({ totalPages, pageChangeCallback }) {\r\n  return <Pagination.Last onClick={() => pageChangeCallback(totalPages)} />;\r\n}\r\n\r\nexport default function ExpandedPagination(props) {\r\n  const { totalPages, currentPage, pageChangeCallback } = props;\r\n\r\n  return (\r\n    <Pagination>\r\n      {generateFirstPagination(props)}\r\n      {generatePrevPagination(props)}\r\n      <Pagination.Item\r\n        active={1 === currentPage}\r\n        onClick={() => pageChangeCallback(1)}\r\n      >\r\n        1\r\n      </Pagination.Item>\r\n      {generateLeftEllipse(props)}\r\n      {generateExpandedPages(props)}\r\n      {generateRightEllipse(props)}\r\n      <Pagination.Item\r\n        active={totalPages === currentPage}\r\n        onClick={() => pageChangeCallback(totalPages)}\r\n      >\r\n        {totalPages}\r\n      </Pagination.Item>\r\n      {generateNextPagination(props)}\r\n      {generateLastPagination(props)}\r\n    </Pagination>\r\n  );\r\n}\r\n","import MinimalPagination from \"./components/MinimalPagination\";\r\nimport CollapsedPagination from \"./components/CollapsedPagination\";\r\nimport ExpandedPagination from \"./components/ExpandedPagination\";\r\n\r\nexport default function Paginator({\r\n  className,\r\n  currentPage,\r\n  totalPages,\r\n  pageChangeCallback,\r\n}) {\r\n  return (\r\n    <div className={\"paginator d-flex justify-content-center \" + className}>\r\n      {totalPages <= 3 ? (\r\n        <MinimalPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      ) : totalPages <= 5 ? (\r\n        <CollapsedPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      ) : (\r\n        <ExpandedPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { getRowsFromSimplifiedArts } from \"./services/grid.js\";\r\n\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ArtCard from \"../ArtCard\";\r\n\r\nexport default function ArtBrowser({\r\n  className,\r\n  cardsPerRow,\r\n  totalRows,\r\n  simplifiedArts,\r\n}) {\r\n  const rows = getRowsFromSimplifiedArts(\r\n    cardsPerRow,\r\n    totalRows,\r\n    simplifiedArts\r\n  );\r\n\r\n  return (\r\n    <div className={\"art-browser \" + className}>\r\n      {simplifiedArts.length === 0 ? (\r\n        <h4 className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n          Uh oh... There are no arts\r\n        </h4>\r\n      ) : (\r\n        rows.map((row, rowIndex) => (\r\n          <Row key={rowIndex}>\r\n            {row.map((simplifiedArt, simplifiedArtIndex) => (\r\n              <Col\r\n                className=\"my-2\"\r\n                md={12 / cardsPerRow}\r\n                key={simplifiedArtIndex}\r\n              >\r\n                <ArtCard simplifiedArt={simplifiedArt} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export function getRowsFromSimplifiedArts(\r\n  cardsPerRow,\r\n  totalRows,\r\n  simplifiedArts\r\n) {\r\n  let rowsData = [];\r\n  for (let rowIndex = 0; rowIndex < totalRows; rowIndex++) {\r\n    rowsData[rowIndex] = [];\r\n    let rowStartingCardIndex = rowIndex * cardsPerRow;\r\n    let startingCardIndex = rowStartingCardIndex;\r\n    for (\r\n      let cardIndex = startingCardIndex;\r\n      cardIndex < startingCardIndex + cardsPerRow;\r\n      cardIndex++\r\n    ) {\r\n      let cardData = simplifiedArts[cardIndex];\r\n      if (cardData) rowsData[rowIndex].push(cardData);\r\n    }\r\n  }\r\n  return rowsData;\r\n}\r\n","export async function getArtCountApi(userId) {\r\n  const urlSearchParams = new URLSearchParams();\r\n  if (Boolean(userId)) urlSearchParams.set(\"userId\", userId);\r\n\r\n  const response = await fetch(\r\n    `/api/art/browse/artCount?${urlSearchParams.toString()}`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getSimplifiedArtsApi(pageOffset, pageSize, userId) {\r\n  const urlSearchParams = new URLSearchParams();\r\n  if (Boolean(userId)) urlSearchParams.set(\"userId\", userId);\r\n\r\n  const response = await fetch(\r\n    `/api/art/browse/simplifiedArts/${pageOffset}/${pageSize}?${urlSearchParams.toString()}`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","export const selectBrowse = (state) => state.art.browse;\r\n\r\nexport const selectArtCount = (state) => selectBrowse(state).artCount;\r\n\r\nexport const selectGetArtCountRequestStatus = (state) =>\r\n  selectBrowse(state).getArtCountRequestStatus;\r\n\r\nexport const selectSimplifiedArts = (state) =>\r\n  selectBrowse(state).simplifiedArts;\r\n\r\nexport const selectSimplifiedArtByIndex = (index) => (state) =>\r\n  selectSimplifiedArts(state)[index];\r\n\r\nexport const selectSimplifiedArtIdByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state)._id;\r\n\r\nexport const selectSimplifiedArtTitleByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state).title;\r\n\r\nexport const selectSimplifiedArtDescriptionByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state).description;\r\n\r\nexport const selectGetSimplifiedArtsRequestStatus = (state) =>\r\n  selectBrowse(state).getSimplifiedArtsRequestStatus;\r\n\r\nexport const selectLoadingRequestStatus = (state) => {\r\n  const getArtCountRequestStatus = selectGetArtCountRequestStatus(state);\r\n  const getSimplifiedArtsRequestStatus =\r\n    selectGetSimplifiedArtsRequestStatus(state);\r\n  return getArtCountRequestStatus === \"rejected\" ||\r\n    getSimplifiedArtsRequestStatus === \"rejected\"\r\n    ? \"rejected\"\r\n    : getArtCountRequestStatus === \"fulfilled\" &&\r\n      getSimplifiedArtsRequestStatus === \"fulfilled\"\r\n    ? \"fulfilled\"\r\n    : \"pending\";\r\n};\r\n\r\nexport const selectCurrentPage = (state) => selectBrowse(state).currentPage;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getArtCountApi, getSimplifiedArtsApi } from \"./api.js\";\r\nimport { selectArtCount, selectCurrentPage } from \"./selectors.js\";\r\n\r\nexport const getArtCount = createAsyncThunk(\r\n  \"browse/getArtCount\",\r\n  async (userId, { rejectWithValue }) => {\r\n    const { success, payload } = await getArtCountApi(userId);\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getSimplifiedArts = createAsyncThunk(\r\n  \"browse/getSimplifiedArts\",\r\n  async ({ pageOffset, pageSize, userId }, { rejectWithValue }) => {\r\n    const { success, payload } = await getSimplifiedArtsApi(\r\n      pageOffset,\r\n      pageSize,\r\n      userId\r\n    );\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const loadResources = createAsyncThunk(\r\n  \"browse/loadResources\",\r\n  async (\r\n    { pageOffset, pageSize, queriedPage, userId },\r\n    { getState, dispatch }\r\n  ) => {\r\n    const hasLoadedArtCount = selectArtCount(getState()) !== -1;\r\n    if (!hasLoadedArtCount) await dispatch(getArtCount(userId));\r\n\r\n    const isPageConflict = selectCurrentPage(getState()) !== queriedPage;\r\n    if (!isPageConflict)\r\n      await dispatch(getSimplifiedArts({ pageOffset, pageSize, userId }));\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  artCount: -1,\r\n  getArtCountRequestStatus: \"idle\",\r\n  simplifiedArts: [],\r\n  getSimplifiedArtsRequestStatus: \"idle\",\r\n  currentPage: 1,\r\n};\r\n\r\nconst artBrowseSlice = createSlice({\r\n  name: \"browse\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setCurrentPage: (state, action) => {\r\n      state.currentPage = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getArtCount.pending, (state, action) => {\r\n        state.getArtCountRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getArtCount.rejected, (state, action) => {\r\n        state.getArtCountRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getArtCount.fulfilled, (state, action) => {\r\n        state.getArtCountRequestStatus = \"fulfilled\";\r\n        state.artCount = action.payload;\r\n      })\r\n      .addCase(getSimplifiedArts.pending, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getSimplifiedArts.rejected, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getSimplifiedArts.fulfilled, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"fulfilled\";\r\n        state.simplifiedArts = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setCurrentPage } = artBrowseSlice.actions;\r\n\r\nexport default artBrowseSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport Paginator from \"../../../../components/Paginator\";\r\nimport ArtBrowser from \"../../../../components/ArtBrowser\";\r\n\r\nimport {\r\n  loadResources,\r\n  reset,\r\n  setCurrentPage,\r\n} from \"./services/artBrowseSlice\";\r\nimport {\r\n  selectArtCount,\r\n  selectCurrentPage,\r\n  selectSimplifiedArts,\r\n  selectLoadingRequestStatus,\r\n} from \"./services/artBrowseSlice/selectors.js\";\r\n\r\nimport getTotalPages from \"./services/getTotalPages.js\";\r\n\r\nconst cardsPerRow = 3;\r\nconst totalRows = 4;\r\n\r\nexport default function Browse() {\r\n  const dispatch = useDispatch();\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const artCount = useSelector(selectArtCount);\r\n  const currentPage = useSelector(selectCurrentPage);\r\n  const simplifiedArts = useSelector(selectSimplifiedArts);\r\n\r\n  const totalPages = getTotalPages(cardsPerRow, totalRows, artCount);\r\n\r\n  const parsedQueriedPage = parseInt(query.get(\"page\"));\r\n  const queriedPage =\r\n    isNaN(parsedQueriedPage) ||\r\n    parsedQueriedPage < 1 ||\r\n    parsedQueriedPage > totalPages\r\n      ? 1\r\n      : parsedQueriedPage;\r\n  const pageConflict = artCount === -1 ? false : queriedPage !== currentPage;\r\n\r\n  if (pageConflict) dispatch(setCurrentPage(queriedPage));\r\n\r\n  const queriedUserId = query.get(\"userId\");\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(\r\n      loadResources({\r\n        pageOffset: currentPage - 1,\r\n        pageSize: cardsPerRow * totalRows,\r\n        queriedPage,\r\n        userId: queriedUserId,\r\n      })\r\n    );\r\n\r\n  const loadingRequestStatus = useSelector(selectLoadingRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadingRequestPromise = initiateLoadingRequest();\r\n    return () => loadingRequestPromise.abort();\r\n  }, [currentPage, queriedUserId]);\r\n\r\n  return (\r\n    <div className=\"art-browse d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Art Browser</h2>\r\n        <hr />\r\n        <GetRequestCard\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          fulfilledComponent={() => (\r\n            <Container className=\"mb-2\" fluid>\r\n              <ArtBrowser\r\n                cardsPerRow={cardsPerRow}\r\n                totalRows={totalRows}\r\n                simplifiedArts={simplifiedArts}\r\n              />\r\n            </Container>\r\n          )}\r\n        />\r\n        <Paginator\r\n          className=\"mt-auto\"\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={(newPage) => {\r\n            query.set(\"page\", newPage);\r\n            history.push(location.pathname + \"?\" + query.toString());\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function getTotalPages(cardsPerRow, totalRows, artCount) {\r\n  const artsPerPage = cardsPerRow * totalRows;\r\n  return Math.ceil(artCount / artsPerPage);\r\n}\r\n","import Joi from \"joi\";\r\n\r\nexport default Joi.object({\r\n  title: Joi.string().trim().min(1).max(30).required().messages({\r\n    \"string.empty\": \"Title is required.\",\r\n    \"string.min\": \"Title must be at least 1 characters long.\",\r\n    \"string.max\": \"Title must be less than or equal to 30 characters long.\",\r\n  }),\r\n  description: Joi.string().trim().min(1).max(100).required().messages({\r\n    \"string.empty\": \"Description is required.\",\r\n    \"string.min\": \"Description must be at least 1 characters long.\",\r\n    \"string.max\":\r\n      \"Description must be less than or equal to 100 characters long.\",\r\n  }),\r\n  content: Joi.string().min(1).max(4000).required().messages({\r\n    \"string.empty\": \"Content is required.\",\r\n    \"string.min\": \"Content must be at least 1 characters long.\",\r\n    \"string.max\": \"Content must be less than or equal to 4000 characters long.\",\r\n  }),\r\n});\r\n","export async function postCreateArtApi(art) {\r\n  const response = await fetch(\"/api/art/create\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(art),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport createFormSchema from \"../createFormSchema.js\";\r\nimport { postCreateArtApi } from \"./api.js\";\r\nimport { resetAuthentication } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postCreateArt = createAsyncThunk(\r\n  \"create/postCreateArt\",\r\n  async (art, { dispatch, rejectWithValue }) => {\r\n    const validationResult = createFormSchema.validate(art, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postCreateArtApi(art);\r\n\r\n      if (data.success) {\r\n        return data.payload;\r\n      } else {\r\n        if (data.error) {\r\n          if (data.error.unauthenticated) {\r\n            dispatch(resetAuthentication());\r\n            return rejectWithValue(\"preventStateUpdates\");\r\n          }\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  art: {\r\n    title: \"\",\r\n    description: \"\",\r\n    content: \"\",\r\n  },\r\n  responseArt: null,\r\n  validationErrors: [],\r\n  postCreateArtRequestStatus: \"idle\",\r\n};\r\n\r\nexport const artCreateSlice = createSlice({\r\n  name: \"create\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    resetArt: (state, action) => {\r\n      state.art = { ...initialState.art };\r\n    },\r\n\r\n    setTitle: (state, action) => {\r\n      state.art.title = action.payload;\r\n    },\r\n\r\n    setDescription: (state, action) => {\r\n      state.art.description = action.payload;\r\n    },\r\n\r\n    setContent: (state, action) => {\r\n      state.art.content = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postCreateArt.pending, (state, action) => {\r\n        state.postCreateArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postCreateArt.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postCreateArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postCreateArt.fulfilled, (state, action) => {\r\n        state.responseArt = action.payload;\r\n        state.postCreateArtRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  resetArt,\r\n  setTitle,\r\n  setDescription,\r\n  setContent,\r\n  setValidationErrors,\r\n} = artCreateSlice.actions;\r\n\r\nexport default artCreateSlice.reducer;\r\n","export const selectCreate = (state) => state.art.create;\r\n\r\nexport const selectArt = (state) => selectCreate(state).art;\r\n\r\nexport const selectTitle = (state) => selectArt(state).title;\r\n\r\nexport const selectDescription = (state) => selectArt(state).description;\r\n\r\nexport const selectContent = (state) => selectArt(state).content;\r\n\r\nexport const selectResponseArt = (state) => selectCreate(state).responseArt;\r\n\r\nexport const selectResponseArtId = (state) => selectResponseArt(state)?._id;\r\n\r\nexport const selectPostCreateArtRequestStatus = (state) =>\r\n  selectCreate(state).postCreateArtRequestStatus;\r\n\r\nexport const selectTitleError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"title\"\r\n  )[0]?.message;\r\n\r\nexport const selectDescriptionError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"description\"\r\n  )[0]?.message;\r\n\r\nexport const selectContentError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"content\"\r\n  )[0]?.message;\r\n\r\nexport const selectAlertError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"alert\"\r\n  )[0]?.message;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nimport {\r\n  reset,\r\n  resetArt,\r\n  setTitle,\r\n  setDescription,\r\n  setContent,\r\n  postCreateArt,\r\n} from \"./services/artCreateSlice\";\r\nimport {\r\n  selectArt,\r\n  selectTitle,\r\n  selectDescription,\r\n  selectContent,\r\n  selectResponseArtId,\r\n  selectPostCreateArtRequestStatus,\r\n  selectTitleError,\r\n  selectDescriptionError,\r\n  selectContentError,\r\n  selectAlertError,\r\n} from \"./services/artCreateSlice/selectors.js\";\r\n\r\nexport default function Create() {\r\n  const dispatch = useDispatch();\r\n\r\n  const art = useSelector(selectArt);\r\n  const title = useSelector(selectTitle);\r\n  const description = useSelector(selectDescription);\r\n  const content = useSelector(selectContent);\r\n  const postCreateArtRequestStatus = useSelector(\r\n    selectPostCreateArtRequestStatus\r\n  );\r\n  const responseArtId = useSelector(selectResponseArtId);\r\n\r\n  const titleError = useSelector(selectTitleError);\r\n  const descriptionError = useSelector(selectDescriptionError);\r\n  const contentError = useSelector(selectContentError);\r\n  const alertError = useSelector(selectAlertError);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"art-create d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 className=\"mb-3\" style={{ textAlign: \"center\" }}>\r\n          Art Editor\r\n        </h2>\r\n        <hr />\r\n      </div>\r\n\r\n      {Boolean(alertError) && <Alert variant=\"danger\">{alertError}</Alert>}\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"title\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            value={title}\r\n            isInvalid={Boolean(titleError)}\r\n            onChange={(event) => dispatch(setTitle(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {titleError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            isInvalid={Boolean(descriptionError)}\r\n            onChange={(event) => dispatch(setDescription(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {descriptionError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"content\">\r\n          <Form.Label>Content</Form.Label>\r\n          <Form.Control\r\n            autoComplete=\"off\"\r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=\"Content\"\r\n            value={content}\r\n            isInvalid={Boolean(contentError)}\r\n            onChange={(event) => dispatch(setContent(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {contentError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <div className=\"my-4 d-flex\">\r\n        <Button variant=\"primary\" onClick={() => dispatch(resetArt())}>\r\n          New\r\n        </Button>\r\n\r\n        <PostRequestButton\r\n          className=\"ml-auto\"\r\n          initiateLoadingRequest={() => dispatch(postCreateArt(art))}\r\n          loadingRequestStatus={postCreateArtRequestStatus}\r\n          idleText=\"Create\"\r\n          redirectLink={`/art/open/${responseArtId}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getArtApi(artId) {\r\n  const response = await fetch(`/api/art/open/art/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getDeleteArtApi(artId) {\r\n  const response = await fetch(`/api/art/delete/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getArtApi, getDeleteArtApi } from \"./api.js\";\r\n\r\nexport const getArt = createAsyncThunk(\r\n  \"open/getArt\",\r\n  async (artId, { rejectWithValue }) => {\r\n    const { success, payload } = await getArtApi(artId);\r\n\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getDeleteArt = createAsyncThunk(\r\n  \"open/getDeleteArt\",\r\n  async (artId, { rejectWithValue }) => {\r\n    const { success, payload } = await getDeleteArtApi(artId);\r\n\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  art: {},\r\n  getArtRequestStatus: \"idle\",\r\n  getDeleteArtRequestStatus: \"idle\",\r\n};\r\n\r\nconst artOpenSlice = createSlice({\r\n  name: \"open\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getArt.pending, (state, action) => {\r\n        state.getArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getArt.rejected, (state, action) => {\r\n        state.getArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getArt.fulfilled, (state, action) => {\r\n        state.getArtRequestStatus = \"fulfilled\";\r\n        state.art = action.payload;\r\n      })\r\n      .addCase(getDeleteArt.pending, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getDeleteArt.rejected, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getDeleteArt.fulfilled, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = artOpenSlice.actions;\r\n\r\nexport default artOpenSlice.reducer;\r\n","export const selectOpen = (state) => state.art.open;\r\n\r\nexport const selectArt = (state) => selectOpen(state).art;\r\n\r\nexport const selectCreatorId = (state) => selectArt(state).creatorId;\r\n\r\nexport const selectTitle = (state) => selectArt(state).title;\r\n\r\nexport const selectDescription = (state) => selectArt(state).description;\r\n\r\nexport const selectContent = (state) => selectArt(state).content;\r\n\r\nexport const selectGetArtRequestStatus = (state) =>\r\n  selectOpen(state).getArtRequestStatus;\r\n\r\nexport const selectGetDeleteArtRequestStatus = (state) =>\r\n  selectOpen(state).getDeleteArtRequestStatus;\r\n","import GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport { getArt, getDeleteArt, reset } from \"./services/artOpenSlice\";\r\nimport {\r\n  selectCreatorId,\r\n  selectTitle,\r\n  selectDescription,\r\n  selectContent,\r\n  selectGetArtRequestStatus,\r\n  selectGetDeleteArtRequestStatus,\r\n} from \"./services/artOpenSlice/selectors.js\";\r\n\r\nimport {\r\n  selectIsAuthenticated,\r\n  selectUserId,\r\n} from \"../../../../services/authenticatedSlice/selectors.js\";\r\n\r\nexport default function Open() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n\r\n  const { artId: queriedArtId } = useParams();\r\n\r\n  const creatorId = useSelector(selectCreatorId);\r\n  const title = useSelector(selectTitle);\r\n  const description = useSelector(selectDescription);\r\n  const content = useSelector(selectContent);\r\n\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n  const isCreator = userId === creatorId;\r\n\r\n  const getArtRequestStatus = useSelector(selectGetArtRequestStatus);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getArt(queriedArtId));\r\n  const loadingRequestStatus = getArtRequestStatus;\r\n\r\n  const initiateDeleteRequest = () => dispatch(getDeleteArt(queriedArtId));\r\n  const deleteRequestStatus = useSelector(selectGetDeleteArtRequestStatus);\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"art-open d-flex flex-column\" style={{ flex: 1 }}>\r\n      <GetRequestCard\r\n        initiateLoadingRequest={initiateLoadingRequest}\r\n        loadingRequestStatus={loadingRequestStatus}\r\n        fulfilledComponent={() => (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <h2>{title}</h2>\r\n            <hr />\r\n            {description}\r\n            <Card className=\"my-2\">\r\n              <Card.Body\r\n                style={{ whiteSpace: \"pre-line\", fontFamily: \"monospace\" }}\r\n              >\r\n                {content}\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <div className=\"my-4 d-flex\">\r\n              <Button\r\n                className=\"mr-2\"\r\n                variant=\"success\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/account/profile/${creatorId}?${query.toString()}`\r\n                  )\r\n                }\r\n              >\r\n                Creator Profile\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => navigator.clipboard.writeText(content)}\r\n              >\r\n                Copy\r\n              </Button>\r\n\r\n              <div className=\"ml-auto\">\r\n                {isCreator && (\r\n                  <PostRequestButton\r\n                    className=\"mr-2\"\r\n                    idleText=\"Delete\"\r\n                    idleVariant=\"danger\"\r\n                    initiateLoadingRequest={initiateDeleteRequest}\r\n                    loadingRequestStatus={deleteRequestStatus}\r\n                    redirectLink={`/art/browse?${query.toString()}`}\r\n                  />\r\n                )}\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    history.push(`/art/browse?${query.toString()}`);\r\n                  }}\r\n                >\r\n                  Back To Browse\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export async function postLoginUserApi(userAndRecaptchaToken) {\r\n  const response = await fetch(\"/api/authentication/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userAndRecaptchaToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nexport const username = Joi.string()\r\n  .alphanum()\r\n  .trim()\r\n  .min(3)\r\n  .max(20)\r\n  .required()\r\n  .messages({\r\n    \"string.empty\": \"Username is required.\",\r\n    \"string.min\": \"Username must be at least 3 characters long.\",\r\n    \"string.max\": \"Username must be less than or equal to 20 characters long.\",\r\n  });\r\n\r\nexport const email = Joi.string()\r\n  .email({ tlds: { allow: false } })\r\n  .required()\r\n  .messages({\r\n    \"string.empty\": \"Email is required.\",\r\n    \"string.email\": \"Please enter a correct email.\",\r\n  });\r\n\r\nexport const password = Joi.string().min(10).max(100).required().messages({\r\n  \"string.empty\": \"Password is required.\",\r\n  \"string.min\": \"Password must be at least 10 characters long.\",\r\n  \"string.max\": \"Password must be less than or equal to 100 characters long.\",\r\n});\r\n\r\nexport const recaptchaToken = Joi.string().required().messages({\r\n  \"string.empty\": \"reCaptcha is required.\",\r\n});\r\n","import Joi from \"joi\";\r\n\r\nimport {\r\n  email,\r\n  password,\r\n  recaptchaToken,\r\n} from \"../../../services/validationSchemas.js\";\r\n\r\nconst userSchema = Joi.object({\r\n  email,\r\n  password,\r\n});\r\n\r\nexport default Joi.object({\r\n  user: userSchema,\r\n  recaptchaToken,\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postLoginUserApi } from \"./api.js\";\r\nimport loginFormSchema from \"../loginFormSchema.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postLoginUser = createAsyncThunk(\r\n  \"login/postLoginUser\",\r\n  async (userAndRecaptchaToken, { dispatch, rejectWithValue }) => {\r\n    const validationResult = loginFormSchema.validate(userAndRecaptchaToken, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postLoginUserApi(userAndRecaptchaToken);\r\n\r\n      if (data.success) {\r\n        await dispatch(getAuthenticated());\r\n        return data;\r\n      } else {\r\n        if (data.error.authenticated) {\r\n          await dispatch(getAuthenticated());\r\n          return rejectWithValue(\"preventStateUpdates\");\r\n        }\r\n        if (data.error) {\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  recaptchaToken: \"\",\r\n  validationErrors: [],\r\n  postLoginUserRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticationLoginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setEmail: (state, action) => {\r\n      state.email = action.payload;\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setRecaptchaToken: (state, action) => {\r\n      state.recaptchaToken = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n\r\n    setPostLoginUserRequestStatus: (state, action) => {\r\n      state.postLoginUserRequestStatus = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postLoginUser.pending, (state, action) => {\r\n        state.postLoginUserRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postLoginUser.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postLoginUserRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postLoginUser.fulfilled, (state, action) => {\r\n        state.postLoginUserRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  setValidationErrors,\r\n} = authenticationLoginSlice.actions;\r\n\r\nexport default authenticationLoginSlice.reducer;\r\n","export const selectLogin = (state) => state.authentication.login;\r\n\r\nexport const selectEmail = (state) => selectLogin(state).email;\r\n\r\nexport const selectPassword = (state) => selectLogin(state).password;\r\n\r\nexport const selectRecaptchaToken = (state) =>\r\n  selectLogin(state).recaptchaToken;\r\n\r\nexport const selectPostLoginUserRequestStatus = (state) =>\r\n  selectLogin(state).postLoginUserRequestStatus;\r\n\r\nexport const selectEmailError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) => path.length == 2 && path[0] === \"user\" && path[1] === \"email\"\r\n  )[0]?.message;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"password\"\r\n  )[0]?.message;\r\n\r\nexport const selectRecaptchaTokenError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"recaptchaToken\"\r\n  )[0]?.message;\r\n","export const SITE_KEY = \"6Lfvwf8aAAAAAGfNx8ZjRBw3wawxBMmDTkdttG6g\";\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport {\r\n  reset,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  postLoginUser,\r\n} from \"./services/authenticationLoginSlice\";\r\nimport {\r\n  selectEmail,\r\n  selectPassword,\r\n  selectRecaptchaToken,\r\n  selectPostLoginUserRequestStatus,\r\n  selectEmailError,\r\n  selectPasswordError,\r\n  selectRecaptchaTokenError,\r\n} from \"./services/authenticationLoginSlice/selectors.js\";\r\n\r\nimport { SITE_KEY } from \"../../../../services/constants.js\";\r\n\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const query = useQuery();\r\n\r\n  const redirectValue = query.get(\"redirect\");\r\n  const isRedirect = Boolean(redirectValue);\r\n  if (isRedirect) query.delete(\"redirect\");\r\n  const redirectLink = isRedirect ? `${redirectValue}?${query.toString()}` : \"\";\r\n\r\n  const email = useSelector(selectEmail);\r\n  const password = useSelector(selectPassword);\r\n  const recaptchaToken = useSelector(selectRecaptchaToken);\r\n\r\n  const emailError = useSelector(selectEmailError);\r\n  const passwordError = useSelector(selectPasswordError);\r\n  const recaptchaTokenError = useSelector(selectRecaptchaTokenError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(postLoginUser({ user: { email, password }, recaptchaToken }));\r\n  const loadingRequestStatus = useSelector(selectPostLoginUserRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-login d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Login</h2>\r\n        <hr />\r\n\r\n        <Form>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              isInvalid={Boolean(emailError)}\r\n              onChange={(event) => dispatch(setEmail(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {emailError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              isInvalid={Boolean(passwordError)}\r\n              onChange={(event) => dispatch(setPassword(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {passwordError}\r\n            </Form.Control.Feedback>\r\n            <LinkContainer to=\"/authentication/recoverpassword\">\r\n              <a className=\"text-muted text-decoration-none\">\r\n                <Form.Text>Forgot Password?</Form.Text>\r\n              </a>\r\n            </LinkContainer>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <ReCAPTCHA\r\n          sitekey={SITE_KEY}\r\n          onChange={(tokenValue) => dispatch(setRecaptchaToken(tokenValue))}\r\n        />\r\n\r\n        <div className=\"invalid-feedback\" style={{ display: \"block\" }}>\r\n          {recaptchaTokenError}\r\n        </div>\r\n\r\n        <div className=\"mt-3 d-flex\">\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Login\"\r\n            redirectLink={isRedirect ? redirectLink : \"/account/dashboard\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function postRegisterUserApi(userAndRecaptchaToken) {\r\n  const response = await fetch(\"/api/authentication/register\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userAndRecaptchaToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nimport {\r\n  username,\r\n  email,\r\n  password,\r\n  recaptchaToken,\r\n} from \"../../../services/validationSchemas.js\";\r\n\r\nconst userSchema = Joi.object({\r\n  username,\r\n  email,\r\n  password,\r\n});\r\n\r\nexport default Joi.object({\r\n  user: userSchema,\r\n  recaptchaToken,\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postRegisterUserApi } from \"./api.js\";\r\nimport registerFormSchema from \"../registerFormSchema.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postRegisterUser = createAsyncThunk(\r\n  \"register/postRegisterUser\",\r\n  async (userAndRecaptchaToken, { dispatch, rejectWithValue }) => {\r\n    const validationResult = registerFormSchema.validate(\r\n      userAndRecaptchaToken,\r\n      {\r\n        abortEarly: false,\r\n      }\r\n    );\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postRegisterUserApi(userAndRecaptchaToken);\r\n\r\n      if (data.success) {\r\n        await dispatch(getAuthenticated());\r\n        return data;\r\n      } else {\r\n        if (data.error.authenticated) {\r\n          await dispatch(getAuthenticated());\r\n          return rejectWithValue(\"preventStateUpdates\");\r\n        }\r\n        if (data.error) {\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  recaptchaToken: \"\",\r\n  postRegisterUserRequestStatus: \"idle\",\r\n  validationErrors: [],\r\n};\r\n\r\nconst authenticationRegisterSlice = createSlice({\r\n  name: \"register\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setUsername: (state, action) => {\r\n      state.username = action.payload;\r\n    },\r\n\r\n    setEmail: (state, action) => {\r\n      state.email = action.payload;\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setRecaptchaToken: (state, action) => {\r\n      state.recaptchaToken = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postRegisterUser.pending, (state, action) => {\r\n        state.postRegisterUserRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postRegisterUser.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postRegisterUserRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postRegisterUser.fulfilled, (state, action) => {\r\n        state.postRegisterUserRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  setUsername,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  setValidationErrors,\r\n} = authenticationRegisterSlice.actions;\r\n\r\nexport default authenticationRegisterSlice.reducer;\r\n","export const selectRegister = (state) => state.authentication.register;\r\n\r\nexport const selectUsername = (state) => selectRegister(state).username;\r\n\r\nexport const selectEmail = (state) => selectRegister(state).email;\r\n\r\nexport const selectPassword = (state) => selectRegister(state).password;\r\n\r\nexport const selectRecaptchaToken = (state) =>\r\n  selectRegister(state).recaptchaToken;\r\n\r\nexport const selectPostRegisterUserRequestStatus = (state) =>\r\n  selectRegister(state).postRegisterUserRequestStatus;\r\n\r\nexport const selectUsernameError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"username\"\r\n  )[0]?.message;\r\n\r\nexport const selectEmailError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) => path.length == 2 && path[0] === \"user\" && path[1] === \"email\"\r\n  )[0]?.message;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"password\"\r\n  )[0]?.message;\r\n\r\nexport const selectRecaptchaTokenError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"recaptchaToken\"\r\n  )[0]?.message;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  reset,\r\n  setUsername,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  postRegisterUser,\r\n} from \"./services/authenticationRegisterSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectEmail,\r\n  selectPassword,\r\n  selectRecaptchaToken,\r\n  selectPostRegisterUserRequestStatus,\r\n  selectUsernameError,\r\n  selectEmailError,\r\n  selectPasswordError,\r\n  selectRecaptchaTokenError,\r\n} from \"./services/authenticationRegisterSlice/selectors.js\";\r\n\r\nimport { SITE_KEY } from \"../../../../services/constants.js\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function Register() {\r\n  const dispatch = useDispatch();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const email = useSelector(selectEmail);\r\n  const password = useSelector(selectPassword);\r\n  const recaptchaToken = useSelector(selectRecaptchaToken);\r\n\r\n  const usernameError = useSelector(selectUsernameError);\r\n  const emailError = useSelector(selectEmailError);\r\n  const passwordError = useSelector(selectPasswordError);\r\n  const recaptchaTokenError = useSelector(selectRecaptchaTokenError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(\r\n      postRegisterUser({ user: { username, email, password }, recaptchaToken })\r\n    );\r\n  const loadingRequestStatus = useSelector(selectPostRegisterUserRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-register d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Register</h2>\r\n        <hr />\r\n\r\n        <Form>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={username}\r\n              isInvalid={Boolean(usernameError)}\r\n              onChange={(event) => dispatch(setUsername(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {usernameError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              isInvalid={Boolean(emailError)}\r\n              onChange={(event) => dispatch(setEmail(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {emailError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              isInvalid={Boolean(passwordError)}\r\n              onChange={(event) => dispatch(setPassword(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {passwordError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <ReCAPTCHA\r\n          sitekey={SITE_KEY}\r\n          onChange={(tokenValue) => dispatch(setRecaptchaToken(tokenValue))}\r\n        />\r\n\r\n        <div className=\"invalid-feedback\" style={{ display: \"block\" }}>\r\n          {recaptchaTokenError}\r\n        </div>\r\n\r\n        <div className=\"mt-3 d-flex\">\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Register\"\r\n            redirectLink=\"/authentication/login\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getEmailVerificationApi(token) {\r\n  const response = await fetch(\r\n    `/api/authentication/emailverification/${token}`\r\n  );\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getEmailVerificationApi } from \"./api.js\";\r\n\r\nexport const getEmailVerification = createAsyncThunk(\r\n  \"authenticationEmailVerification/getEmailVerification\",\r\n  async (token, { dispatch, rejectWithValue }) => {\r\n    const data = await getEmailVerificationApi(token);\r\n\r\n    if (data.success) {\r\n      return true;\r\n    } else {\r\n      if (data.error) {\r\n        dispatch(setErrors([data.error]));\r\n      }\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  getEmailVerificationRequestStatus: \"idle\",\r\n  errors: [],\r\n};\r\n\r\nconst authenticationEmailVerificationSlice = createSlice({\r\n  name: \"emailVerification\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getEmailVerification.pending, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getEmailVerification.rejected, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getEmailVerification.fulfilled, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setErrors } =\r\n  authenticationEmailVerificationSlice.actions;\r\n\r\nexport default authenticationEmailVerificationSlice.reducer;\r\n","export const selectEmailVerification = (state) =>\r\n  state.authentication.emailVerification;\r\n\r\nexport const selectGetEmailVerificationRequestStatus = (state) =>\r\n  selectEmailVerification(state).getEmailVerificationRequestStatus;\r\n\r\nexport const selectAlertError = (state) =>\r\n  selectEmailVerification(state).errors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"alert\"\r\n  )[0]?.message;\r\n","import { useParams, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  reset,\r\n  getEmailVerification,\r\n} from \"./services/authenticationEmailVerificationSlice\";\r\nimport {\r\n  selectGetEmailVerificationRequestStatus,\r\n  selectAlertError,\r\n} from \"./services/authenticationEmailVerificationSlice/selectors.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../services/authenticatedSlice\";\r\nimport { selectIsAuthenticated } from \"../../../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport { Button, Alert } from \"react-bootstrap\";\r\n\r\nexport default function EmailVerification() {\r\n  const dispatch = useDispatch();\r\n  const { token } = useParams();\r\n  const history = useHistory();\r\n\r\n  const alertError = useSelector(selectAlertError);\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getEmailVerification(token));\r\n  const loadingRequestStatus = useSelector(\r\n    selectGetEmailVerificationRequestStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-emailVerification d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Email Verification</h2>\r\n        <hr />\r\n        {Boolean(alertError) && <Alert variant=\"danger\">{alertError}</Alert>}\r\n\r\n        {!Boolean(alertError) && (\r\n          <GetRequestCard\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            fulfilledComponent={() => (\r\n              <Alert variant=\"success\">\r\n                Your email has been successfully verified and your rank has been\r\n                updated!\r\n              </Alert>\r\n            )}\r\n          />\r\n        )}\r\n\r\n        {isAuthenticated ? (\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(getAuthenticated());\r\n              history.push(\"/account/dashboard\");\r\n            }}\r\n            className=\"mt-2\"\r\n            variant=\"success\"\r\n          >\r\n            Dashboard\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              history.push(\"/authentication/login\");\r\n            }}\r\n            className=\"mt-2\"\r\n            variant=\"success\"\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function postRecoverPasswordApi(recoverPasswordEmail) {\r\n  const response = await fetch(\"/api/authentication/recoverpassword\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(recoverPasswordEmail),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nimport { email } from \"../../../services/validationSchemas.js\";\r\n\r\nexport default Joi.object({\r\n  email,\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postRecoverPasswordApi } from \"./api.js\";\r\nimport recoverPasswordFormSchema from \"../recoverPasswordFormSchema.js\";\r\n\r\nexport const postRecoverPassword = createAsyncThunk(\r\n  \"recoverPassword/postRecoverPassword\",\r\n  async (recoverPasswordEmail, { dispatch, rejectWithValue }) => {\r\n    const validationResult = recoverPasswordFormSchema.validate(\r\n      recoverPasswordEmail,\r\n      {\r\n        abortEarly: false,\r\n      }\r\n    );\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      const data = await postRecoverPasswordApi(recoverPasswordEmail);\r\n\r\n      if (data.success) {\r\n        dispatch(setValidationErrors([]));\r\n        return data;\r\n      } else {\r\n        if (data.error) {\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  validationErrors: [],\r\n  postRecoverPasswordRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticationRecoverPasswordSlice = createSlice({\r\n  name: \"recoverPassword\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setEmail: (state, action) => {\r\n      state.email = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postRecoverPassword.pending, (state, action) => {\r\n        state.postRecoverPasswordRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postRecoverPassword.rejected, (state, action) => {\r\n        state.postRecoverPasswordRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postRecoverPassword.fulfilled, (state, action) => {\r\n        state.postRecoverPasswordRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setEmail, setValidationErrors } =\r\n  authenticationRecoverPasswordSlice.actions;\r\n\r\nexport default authenticationRecoverPasswordSlice.reducer;\r\n","export const selectRecoverPassword = (state) =>\r\n  state.authentication.recoverPassword;\r\n\r\nexport const selectEmail = (state) => selectRecoverPassword(state).email;\r\n\r\nexport const selectPostRecoverPasswordRequestStatus = (state) =>\r\n  selectRecoverPassword(state).postRecoverPasswordRequestStatus;\r\n\r\nexport const selectEmailError = (state) =>\r\n  selectRecoverPassword(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"email\"\r\n  )[0]?.message;\r\n\r\nexport const selectAlertError = (state) =>\r\n  selectRecoverPassword(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"alert\"\r\n  )[0]?.message;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  postRecoverPassword,\r\n  reset,\r\n  setEmail,\r\n} from \"./services/authenticationRecoverPasswordSlice\";\r\nimport {\r\n  selectEmail,\r\n  selectEmailError,\r\n  selectAlertError,\r\n  selectPostRecoverPasswordRequestStatus,\r\n} from \"./services/authenticationRecoverPasswordSlice/selectors.js\";\r\n\r\nimport { Form, Alert } from \"react-bootstrap\";\r\nimport RepeatedPostRequestButton from \"../../../../components/RepeatedPostRequestButton\";\r\n\r\nexport default function RecoverPassword() {\r\n  const dispatch = useDispatch();\r\n\r\n  const email = useSelector(selectEmail);\r\n\r\n  const emailError = useSelector(selectEmailError);\r\n  const alertError = useSelector(selectAlertError);\r\n\r\n  const initiateLoadingRequest = () => dispatch(postRecoverPassword({ email }));\r\n  const loadingRequestStatus = useSelector(\r\n    selectPostRecoverPasswordRequestStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-recoverpassword d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Recover Password</h2>\r\n        <hr />\r\n        {Boolean(alertError) && <Alert variant=\"danger\">{alertError}</Alert>}\r\n      </div>\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            value={email}\r\n            isInvalid={Boolean(emailError)}\r\n            onChange={(event) => dispatch(setEmail(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {emailError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <div>\r\n        <RepeatedPostRequestButton\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          idleText=\"Send Recovery Email\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function postNewPasswordApi(newPasswordAndToken) {\r\n  const response = await fetch(\"/api/authentication/newpassword\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(newPasswordAndToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nimport { password } from \"../../../services/validationSchemas.js\";\r\n\r\nexport default Joi.object({\r\n  _id: Joi.string().required(),\r\n  token: Joi.string().guid().required(),\r\n  password,\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postNewPasswordApi } from \"./api.js\";\r\nimport newPasswordFormSchema from \"../newPasswordFormSchema.js\";\r\n\r\nexport const postNewPassword = createAsyncThunk(\r\n  \"newPassword/postNewPassword\",\r\n  async (newPasswordAndToken, { dispatch, rejectWithValue }) => {\r\n    const validationResult = newPasswordFormSchema.validate(\r\n      newPasswordAndToken,\r\n      {\r\n        abortEarly: false,\r\n      }\r\n    );\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postNewPasswordApi(newPasswordAndToken);\r\n\r\n      if (data.success) {\r\n        return data;\r\n      } else {\r\n        if (data.error) {\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  password: \"\",\r\n  postNewPasswordRequestStatus: \"idle\",\r\n  validationErrors: [],\r\n};\r\n\r\nconst authenticationNewPasswordSlice = createSlice({\r\n  name: \"newPassword\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postNewPassword.pending, (state, action) => {\r\n        state.postNewPasswordRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postNewPassword.rejected, (state, action) => {\r\n        state.postNewPasswordRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postNewPassword.fulfilled, (state, action) => {\r\n        state.postNewPasswordRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setPassword, setValidationErrors } =\r\n  authenticationNewPasswordSlice.actions;\r\n\r\nexport default authenticationNewPasswordSlice.reducer;\r\n","export const selectNewPassword = (state) => state.authentication.newPassword;\r\n\r\nexport const selectPassword = (state) => selectNewPassword(state).password;\r\n\r\nexport const selectPostNewPasswordRequestStatus = (state) =>\r\n  selectNewPassword(state).postNewPasswordRequestStatus;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectNewPassword(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"password\"\r\n  )[0]?.message;\r\n\r\nexport const selectAlertError = (state) =>\r\n  selectNewPassword(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"alert\"\r\n  )[0]?.message;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  reset,\r\n  setPassword,\r\n  postNewPassword,\r\n} from \"./services/authenticationNewPasswordSlice\";\r\nimport {\r\n  selectPassword,\r\n  selectPostNewPasswordRequestStatus,\r\n  selectPasswordError,\r\n  selectAlertError,\r\n} from \"./services/authenticationNewPasswordSlice/selectors.js\";\r\n\r\nimport { Alert, Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nexport default function NewPassword() {\r\n  const dispatch = useDispatch();\r\n  const { _id, token } = useParams();\r\n\r\n  const password = useSelector(selectPassword);\r\n\r\n  const passwordError = useSelector(selectPasswordError);\r\n  const alertError = useSelector(selectAlertError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(postNewPassword({ _id, token, password }));\r\n  const loadingRequestStatus = useSelector(selectPostNewPasswordRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-newpassword d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>New Password</h2>\r\n        <hr />\r\n        {Boolean(alertError) && <Alert variant=\"danger\">{alertError}</Alert>}\r\n      </div>\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            value={password}\r\n            isInvalid={Boolean(passwordError)}\r\n            onChange={(event) => dispatch(setPassword(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {passwordError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <div>\r\n        <PostRequestButton\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          idleText=\"Set Password\"\r\n          redirectLink=\"/authentication/login\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectIsAuthenticated } from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Login from \"./scenes/Login\";\r\nimport Register from \"./scenes/Register\";\r\nimport EmailVerification from \"./scenes/EmailVerification\";\r\nimport RecoverPassword from \"./scenes/RecoverPassword\";\r\nimport NewPassword from \"./scenes/NewPassword\";\r\n\r\nexport default function Authentication() {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  return [\r\n    <Route exact path=\"/authentication/login\" key=\"/authentication/login\">\r\n      {isAuthenticated ? <Redirect exact to=\"/account/dashboard\" /> : <Login />}\r\n    </Route>,\r\n    <Route exact path=\"/authentication/register\" key=\"/authentication/register\">\r\n      {isAuthenticated ? (\r\n        <Redirect exact to=\"/account/dashboard\" />\r\n      ) : (\r\n        <Register />\r\n      )}\r\n    </Route>,\r\n    <Route\r\n      exact\r\n      path=\"/authentication/emailverification/:token\"\r\n      key=\"/authentication/emailverification/:token\"\r\n    >\r\n      <EmailVerification />\r\n    </Route>,\r\n    <Route\r\n      exact\r\n      path=\"/authentication/recoverpassword\"\r\n      key=\"/authentication/recoverpassword\"\r\n    >\r\n      <RecoverPassword />\r\n    </Route>,\r\n    <Route\r\n      exact\r\n      path=\"/authentication/newpassword/:_id/:token\"\r\n      key=\"/authentication/newpassword/:_id/:token\"\r\n    >\r\n      <NewPassword />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport getInitiateLoadingRequest from \"../../services/loader/getInitiateLoadingRequest.js\";\r\nimport selectLoadingRequestStatus from \"../../services/loader/selectLoadingRequestStatus.js\";\r\n\r\nimport { Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../GetRequestCard\";\r\n\r\nimport Account from \"../../areas/Account\";\r\nimport Art from \"../../areas/Art\";\r\nimport Authentication from \"../../areas/Authentication\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n\r\n  const initiateLoadingRequest = getInitiateLoadingRequest(dispatch);\r\n  const loadingRequestStatus = useSelector(selectLoadingRequestStatus);\r\n\r\n  return (\r\n    <div className=\"main d-flex flex-column\" style={{ flex: 1 }}>\r\n      <Container className=\"my-3 d-flex flex-column\" style={{ flex: 1 }}>\r\n        <GetRequestCard\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          fulfilledComponent={() => (\r\n            <Switch>\r\n              {Account()}\r\n              {Art()}\r\n              {Authentication()}\r\n            </Switch>\r\n          )}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\n\r\nimport Dashboard from \"./scenes/Dashboard\";\r\nimport Profile from \"./scenes/Profile\";\r\n\r\nexport default function Account() {\r\n  return [\r\n    <ProtectedRoute exact path=\"/account/dashboard\" key=\"/account/dashboard\">\r\n      <Dashboard />\r\n    </ProtectedRoute>,\r\n    <Route exact path=\"/account/profile/:userId\" key=\"/account/profile\">\r\n      <Profile />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\n\r\nimport Browse from \"./scenes/Browse\";\r\nimport Create from \"./scenes/Create\";\r\nimport Open from \"./scenes/Open\";\r\n\r\nexport default function Art() {\r\n  return [\r\n    <Route exact path=\"/art/browse\" key=\"/art/browse\">\r\n      <Browse />\r\n    </Route>,\r\n    <ProtectedRoute exact path=\"/art/create\" key=\"/art/create\">\r\n      <Create />\r\n    </ProtectedRoute>,\r\n    <Route exact path=\"/art/open/:artId\" key=\"/art/open\">\r\n      <Open />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer pbc p-3\">\r\n      <Container fluid>\r\n        {/* Columns have extra divs to hold link items so that the link items don't span the entire width of the column. */}\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col md>\r\n            <h5>ASCII-CRAFT</h5>\r\n            <div className=\"d-flex flex-column\">\r\n              <div>\r\n                <a className=\"px-2\" href=\"#\">\r\n                  Contact us\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <a href=\"#\">Privacy Policy</a>\r\n              </div>\r\n              <div>\r\n                <a href=\"#\">Terms of Service</a>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md>\r\n            <h5>HELP</h5>\r\n            <div className=\"d-flex flex-column\">\r\n              <div>\r\n                <a href=\"#\">FAQ</a>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <hr />\r\n\r\n        <small>\r\n          Please respect ASCII artists and do not remove their signature while\r\n          sharing their art.\r\n        </small>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport getInitiateLoadingRequest from \"./services/loader/getInitiateLoadingRequest.js\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport \"./style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const initiateLoadingRequest = getInitiateLoadingRequest(dispatch);\r\n\r\n  useEffect(() => initiateLoadingRequest());\r\n\r\n  return (\r\n    <div className=\"app d-flex flex-column\" style={{ minHeight: \"100vh\" }}>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport createReducer from \"../scenes/Create/services/artCreateSlice\";\r\nimport browseReducer from \"../scenes/Browse/services/artBrowseSlice\";\r\nimport openReducer from \"../scenes/Open/services/artOpenSlice\";\r\n\r\nconst artReducer = combineReducers({\r\n  create: createReducer,\r\n  browse: browseReducer,\r\n  open: openReducer,\r\n});\r\n\r\nexport default artReducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport registerReducer from \"../scenes/Register/services/authenticationRegisterSlice\";\r\nimport loginReducer from \"../scenes/Login/services/authenticationLoginSlice\";\r\nimport emailVerificationReducer from \"../scenes/EmailVerification/services/authenticationEmailVerificationSlice\";\r\nimport recoverPasswordReducer from \"../scenes/RecoverPassword/services/authenticationRecoverPasswordSlice\";\r\nimport newPasswordReducer from \"../scenes/NewPassword/services/authenticationNewPasswordSlice\";\r\n\r\nconst authenticationReducer = combineReducers({\r\n  register: registerReducer,\r\n  login: loginReducer,\r\n  emailVerification: emailVerificationReducer,\r\n  recoverPassword: recoverPasswordReducer,\r\n  newPassword: newPasswordReducer,\r\n});\r\n\r\nexport default authenticationReducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport dashboardReducer from \"../scenes/Dashboard/services/accountDashboardSlice\";\r\nimport profileReducer from \"../scenes/Profile/services/accountProfileSlice\";\r\n\r\nconst accountReducer = combineReducers({\r\n  dashboard: dashboardReducer,\r\n  profile: profileReducer,\r\n});\r\n\r\nexport default accountReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport artReducer from \"../../areas/Art/services/artReducer.js\";\r\nimport authenticationReducer from \"../../areas/Authentication/services/authenticationReducer.js\";\r\nimport accountReducer from \"../../areas/Account/services/accountReducer.js\";\r\n\r\nimport authenticatedSlice from \"../authenticatedSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    art: artReducer,\r\n    authentication: authenticationReducer,\r\n    account: accountReducer,\r\n\r\n    authenticated: authenticatedSlice,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./services/redux/store.js\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}