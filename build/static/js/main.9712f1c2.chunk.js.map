{"version":3,"sources":["services/authenticatedSlice/selectors.js","components/Header/index.js","services/hooks/useWindowSize.js","services/loaderSlice/selectors.js","services/authenticatedSlice/api.js","services/authenticatedSlice/index.js","services/loaderSlice/index.js","components/Resource/index.js","components/GetRequestCard/components/PendingCard/index.js","components/GetRequestCard/components/RejectedCard/index.js","components/GetRequestCard/index.js","services/hooks/useQuery.js","components/ProtectedRoute/index.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/api.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/index.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/selectors.js","areas/Account/scenes/Dashboard/components/EmailVerificationButton/index.js","components/PostRequestButton/components/PostButton/index.js","components/PostRequestButton/components/LoadingButton/index.js","components/PostRequestButton/components/RetryButton/index.js","components/PostRequestButton/index.js","areas/Account/scenes/Dashboard/index.js","areas/Account/scenes/Profile/services/accountProfileSlice/api.js","areas/Account/scenes/Profile/services/accountProfileSlice/index.js","areas/Account/scenes/Profile/services/accountProfileSlice/selectors.js","components/ArtCard/index.js","areas/Account/scenes/Profile/index.js","components/Paginator/components/pages.js","components/Paginator/components/MinimalPagination/index.js","components/Paginator/components/CollapsedPagination/index.js","components/Paginator/components/ExpandedPagination/index.js","components/Paginator/index.js","components/ArtBrowser/index.js","components/ArtBrowser/services/grid.js","areas/Art/scenes/Browse/services/artBrowseSlice/api.js","areas/Art/scenes/Browse/services/artBrowseSlice/selectors.js","areas/Art/scenes/Browse/services/artBrowseSlice/index.js","areas/Art/scenes/Browse/index.js","areas/Art/scenes/Browse/services/getTotalPages.js","areas/Art/scenes/Create/services/artSchema.js","areas/Art/scenes/Create/services/artCreateSlice/api.js","areas/Art/scenes/Create/services/artCreateSlice/index.js","areas/Art/scenes/Create/services/artCreateSlice/selectors.js","areas/Art/scenes/Create/index.js","areas/Art/scenes/Open/services/artOpenSlice/api.js","areas/Art/scenes/Open/services/artOpenSlice/index.js","areas/Art/scenes/Open/services/artOpenSlice/selectors.js","areas/Art/scenes/Open/index.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/api.js","areas/Authentication/scenes/Login/services/loginFormSchema.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/index.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/selectors.js","services/constants.js","areas/Authentication/scenes/Login/index.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/api.js","areas/Authentication/scenes/Register/services/registerFormSchema.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/index.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/selectors.js","areas/Authentication/scenes/Register/index.js","areas/Authentication/scenes/EmailVerification/services/authenticationEmailVerificationSlice/api.js","areas/Authentication/scenes/EmailVerification/services/authenticationEmailVerificationSlice/index.js","areas/Authentication/scenes/EmailVerification/services/authenticationEmailVerificationSlice/selectors.js","areas/Authentication/scenes/EmailVerification/index.js","areas/Authentication/index.js","components/Main/index.js","areas/Account/index.js","areas/Art/index.js","components/Footer/index.js","App.js","areas/Art/services/artReducer.js","areas/Authentication/services/authenticationReducer.js","areas/Account/services/accountReducer.js","services/redux/store.js","index.js"],"names":["selectAuthenticated","state","authenticated","selectIsAuthenticated","isAuthenticated","selectUser","user","selectUserId","_id","selectUsername","username","selectEmail","email","selectRank","rank","NonMobileHeaderLinks","useSelector","userId","Nav","style","flex","Link","to","className","MobileHeaderLinks","NavDropdown","title","Item","Divider","Header","width","useState","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","Navbar","variant","Brand","selectLoader","loader","selectLoadResourcesRequestStatus","loadResourcesRequestStatus","getAuthenticatedApi","a","fetch","response","json","data","getAuthenticated","createAsyncThunk","_","rejectWithValue","success","payload","authenticatedSlice","createSlice","name","initialState","getAuthenticatedRequestStatus","reducers","resetAuthentication","action","extraReducers","builder","addCase","pending","rejected","fulfilled","actions","loadResources","getState","dispatch","hasLoaded","Promise","all","some","element","Boolean","error","loaderSlice","setHasLoaded","Resource","initiateLoadingRequest","loadingRequestStatus","Idle","idleComponent","Pending","pendingComponent","Rejected","rejectedComponent","Fulfilled","fulfilledComponent","PendingCard","Card","Body","Button","disabled","RejectedCard","onClick","GetRequestCard","useQuery","URLSearchParams","useLocation","search","ProtectedRoute","children","rest","location","query","set","pathname","exact","toString","getLogoutApi","getEmailVerificationApi","getEmailVerification","resetErrors","setErrors","getLogout","getEmailVerificationRequestStatus","getLogoutRequestStatus","errors","accountDashboardSlice","reset","selectDashboard","account","dashboard","selectGetEmailVerificationRequestStatus","selectGetLogoutRequestStatus","selectAlertError","filter","path","length","message","InitiateLoadingRequestButton","EmailVerificationButton","PostButton","text","LoadingButton","RetryButton","PostRequestButton","idleText","idleVariant","redirectLink","Dashboard","useDispatch","alertError","textAlign","Alert","Badge","getProfileApi","getProfile","profileData","getProfileRequestStatus","accountProfileSlice","selectProfile","profile","selectProfileData","selectTotalArtsCreated","totalArtsCreated","selectRecentSimplifiedArts","recentSimplifiedArts","selectGetProfileRequestStatus","ArtCard","props","history","useHistory","simplifiedArt","description","Footer","push","Profile","useParams","Container","Row","map","simplifiedArtIndex","Col","md","getPagesToGenerate","totalPages","currentPage","pageChangeCallback","pagesToGenerate","counter","generatePages","index","Pagination","active","generateMinimalPages","MinimalPagination","generatePrevPagination","newPageValue","Prev","generateCollapsedPages","generateNextPagination","Next","CollapsedPagination","generateFirstPagination","First","generateLeftEllipse","shouldGenerateLeftEllipsis","Ellipsis","pageValue","getLeftEllipsisPageValue","generateExpandedPages","shift","pop","generateRightEllipse","shouldGenerateRightEllipsis","getRightEllipsisPageValue","generateLastPagination","Last","ExpandedPagination","Paginator","ArtBrowser","cardsPerRow","totalRows","simplifiedArts","rows","rowsData","rowIndex","startingCardIndex","cardIndex","cardData","getRowsFromSimplifiedArts","row","getArtCountApi","urlSearchParams","getSimplifiedArtsApi","pageOffset","pageSize","selectBrowse","art","browse","selectArtCount","artCount","selectSimplifiedArts","selectLoadingRequestStatus","getArtCountRequestStatus","selectGetArtCountRequestStatus","getSimplifiedArtsRequestStatus","selectGetSimplifiedArtsRequestStatus","selectCurrentPage","getArtCount","getSimplifiedArts","queriedPage","artBrowseSlice","setCurrentPage","Browse","artsPerPage","Math","ceil","getTotalPages","parsedQueriedPage","parseInt","get","isNaN","queriedUserId","loadingRequestPromise","abort","fluid","newPage","Joi","object","string","trim","min","max","required","messages","content","postCreateArtApi","method","headers","body","JSON","stringify","postCreateArt","validationResult","artSchema","validate","abortEarly","validationErrors","details","setValidationErrors","unauthenticated","responseArt","postCreateArtRequestStatus","artCreateSlice","resetArt","setTitle","setDescription","setContent","selectCreate","create","selectArt","selectTitle","selectDescription","selectContent","selectResponseArtId","selectResponseArt","selectPostCreateArtRequestStatus","selectTitleError","selectDescriptionError","selectContentError","Create","responseArtId","titleError","descriptionError","contentError","Form","Group","controlId","Label","Control","type","placeholder","value","isInvalid","onChange","event","target","Feedback","autoComplete","as","getArtApi","artId","getDeleteArtApi","getArt","getDeleteArt","getArtRequestStatus","getDeleteArtRequestStatus","artOpenSlice","selectOpen","open","selectCreatorId","creatorId","selectGetArtRequestStatus","selectGetDeleteArtRequestStatus","Open","queriedArtId","isCreator","initiateDeleteRequest","deleteRequestStatus","whiteSpace","fontFamily","navigator","clipboard","writeText","postLoginUserApi","userAndRecaptchaToken","userSchema","alphanum","password","recaptchaToken","postLoginUser","loginFormSchema","postLoginUserRequestStatus","authenticationLoginSlice","setUsername","setPassword","setRecaptchaToken","setPostLoginUserRequestStatus","selectLogin","authentication","login","selectPassword","selectRecaptchaToken","selectPostLoginUserRequestStatus","selectUsernameError","selectPasswordError","selectRecaptchaTokenError","SITE_KEY","Login","redirectValue","isRedirect","delete","usernameError","passwordError","recaptchaTokenError","Text","sitekey","tokenValue","display","postRegisterUserApi","tlds","allow","postRegisterUser","registerFormSchema","postRegisterUserRequestStatus","authenticationRegisterSlice","setEmail","selectRegister","register","selectPostRegisterUserRequestStatus","selectEmailError","Register","emailError","token","authenticationEmailVerificationSlice","selectEmailVerification","emailVerification","EmailVerification","Authentication","Main","href","App","minHeight","artReducer","combineReducers","createReducer","browseReducer","openReducer","authenticationReducer","registerReducer","loginReducer","emailVerificationReducer","accountReducer","dashboardReducer","profileReducer","configureStore","reducer","loaderReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9712f1c2.chunk.js","sourcesContent":["export const selectAuthenticated = (state) => state.authenticated;\r\n\r\nexport const selectIsAuthenticated = (state) =>\r\n  selectAuthenticated(state).isAuthenticated;\r\n\r\nexport const selectUser = (state) => selectAuthenticated(state).user;\r\n\r\nexport const selectUserId = (state) => selectUser(state)?._id;\r\n\r\nexport const selectUsername = (state) => selectUser(state)?.username;\r\n\r\nexport const selectEmail = (state) => selectUser(state)?.email;\r\n\r\nexport const selectRank = (state) => selectUser(state)?.rank;\r\n\r\nexport const selectGetAuthenticatedRequestStatus = (state) =>\r\n  selectAuthenticated(state).getAuthenticatedRequestStatus;\r\n","import useWindowSize from \"../../services/hooks/useWindowSize.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectIsAuthenticated,\r\n  selectUserId,\r\n} from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction NonMobileHeaderLinks() {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n\r\n  return (\r\n    <Nav style={{ flex: 1 }}>\r\n      <Nav.Link>Home</Nav.Link>\r\n      <LinkContainer to=\"/art/browse\">\r\n        <Nav.Link>Browse</Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/art/create\">\r\n        <Nav.Link>Create</Nav.Link>\r\n      </LinkContainer>\r\n\r\n      {isAuthenticated ? (\r\n        <>\r\n          <LinkContainer to={`/account/profile/${userId}`}>\r\n            <Nav.Link>Profile</Nav.Link>\r\n          </LinkContainer>\r\n\r\n          <LinkContainer to=\"/account/dashboard\">\r\n            <Nav.Link className=\"ml-auto\">Account</Nav.Link>\r\n          </LinkContainer>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <LinkContainer to=\"/authentication/login\">\r\n            <Nav.Link className=\"ml-auto\">Login</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/authentication/register\">\r\n            <Nav.Link>Register</Nav.Link>\r\n          </LinkContainer>\r\n        </>\r\n      )}\r\n    </Nav>\r\n  );\r\n}\r\n\r\nfunction MobileHeaderLinks() {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n\r\n  return (\r\n    <Nav className=\"ml-auto\">\r\n      <NavDropdown title=\"Menu\">\r\n        <NavDropdown.Item>Home</NavDropdown.Item>\r\n        <LinkContainer to=\"/art/browse\">\r\n          <NavDropdown.Item>Browse</NavDropdown.Item>\r\n        </LinkContainer>\r\n        <LinkContainer to=\"/art/create\">\r\n          <NavDropdown.Item>Create</NavDropdown.Item>\r\n        </LinkContainer>\r\n        <NavDropdown.Divider />\r\n        {isAuthenticated ? (\r\n          <>\r\n            <LinkContainer to={`/account/profile/${userId}`}>\r\n              <NavDropdown.Item>Profile</NavDropdown.Item>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/account/dashboard\">\r\n              <NavDropdown.Item>Account</NavDropdown.Item>\r\n            </LinkContainer>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <LinkContainer to=\"/authentication/login\">\r\n              <NavDropdown.Item>Login</NavDropdown.Item>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/authentication/register\">\r\n              <NavDropdown.Item>Register</NavDropdown.Item>\r\n            </LinkContainer>\r\n          </>\r\n        )}\r\n      </NavDropdown>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default function Header() {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <div className=\"header pbc\">\r\n      <Navbar variant=\"dark\">\r\n        <Navbar.Brand>ASCII-CRAFT</Navbar.Brand>\r\n        {width > 576 ? <NonMobileHeaderLinks /> : <MobileHeaderLinks />}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\n// Hook\r\nexport default function useWindowSize() {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n  return windowSize;\r\n}\r\n","export const selectLoader = (state) => state.loader;\r\n\r\nexport const selectHasLoaded = (state) => selectLoader(state).hasLoaded;\r\n\r\nexport const selectLoadResourcesRequestStatus = (state) =>\r\n  selectLoader(state).loadResourcesRequestStatus;\r\n","export async function getAuthenticatedApi() {\r\n  const response = await fetch(\"/api/authentication/authenticated\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getAuthenticatedApi } from \"./api.js\";\r\n\r\nexport const getAuthenticated = createAsyncThunk(\r\n  \"authenticated/getAuthenticated\",\r\n  async (_, { rejectWithValue }) => {\r\n    const data = await getAuthenticatedApi();\r\n\r\n    if (data.success) {\r\n      return data.payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  getAuthenticatedRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticatedSlice = createSlice({\r\n  name: \"authenticated\",\r\n  initialState,\r\n  reducers: {\r\n    resetAuthentication: (state, action) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAuthenticated.pending, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getAuthenticated.rejected, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getAuthenticated.fulfilled, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"fulfilled\";\r\n\r\n        const { authenticated, user } = action.payload;\r\n        state.isAuthenticated = authenticated;\r\n        state.user = user;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetAuthentication } = authenticatedSlice.actions;\r\n\r\nexport default authenticatedSlice.reducer;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { selectHasLoaded } from \"./selectors.js\";\r\n\r\nimport { getAuthenticated } from \"../authenticatedSlice\";\r\n\r\nexport const loadResources = createAsyncThunk(\r\n  \"loader/loadResources\",\r\n  async (_, { getState, dispatch, rejectWithValue }) => {\r\n    if (!selectHasLoaded(getState())) {\r\n      const result = await Promise.all([dispatch(getAuthenticated())]);\r\n      if (result.some((element) => Boolean(element.error)))\r\n        return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  hasLoaded: false,\r\n  loadResourcesRequestStatus: \"idle\",\r\n};\r\n\r\nconst loaderSlice = createSlice({\r\n  name: \"loader\",\r\n  initialState,\r\n  reducers: {\r\n    setHasLoaded: (state, action) => {\r\n      state.hasLoaded = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadResources.pending, (state, action) => {\r\n        state.loadResourcesRequestStatus = \"pending\";\r\n      })\r\n      .addCase(loadResources.rejected, (state, action) => {\r\n        state.loadResourcesRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(loadResources.fulfilled, (state, action) => {\r\n        state.loadResourcesRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport default loaderSlice.reducer;\r\n","export default function Resource({\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleComponent: Idle,\r\n  pendingComponent: Pending,\r\n  rejectedComponent: Rejected,\r\n  fulfilledComponent: Fulfilled,\r\n}) {\r\n  return loadingRequestStatus === \"idle\" ? (\r\n    <Idle initiateLoadingRequest={initiateLoadingRequest} />\r\n  ) : loadingRequestStatus === \"pending\" ? (\r\n    <Pending />\r\n  ) : loadingRequestStatus === \"rejected\" ? (\r\n    <Rejected initiateLoadingRequest={initiateLoadingRequest} />\r\n  ) : loadingRequestStatus === \"fulfilled\" ? (\r\n    <Fulfilled />\r\n  ) : (\r\n    \"Default\"\r\n  );\r\n}\r\n","import { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function PendingCard() {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <h5>Please Wait</h5>\r\n        <hr />\r\n        We are loading some resources\r\n        <br />\r\n        <Button className=\"w-100 mt-3\" variant=\"secondary\" disabled>\r\n          Loading...\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function RejectedCard({ initiateLoadingRequest }) {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <h5>Uh Oh</h5>\r\n        <hr />\r\n        We were unable to load some resources\r\n        <br />\r\n        <Button\r\n          className=\"w-100 mt-3\"\r\n          variant=\"danger\"\r\n          onClick={initiateLoadingRequest}\r\n        >\r\n          Retry\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import Resource from \"../Resource\";\r\nimport PendingCard from \"./components/PendingCard\";\r\nimport RejectedCard from \"./components/RejectedCard\";\r\n\r\nexport default function GetRequestCard({\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  fulfilledComponent,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={PendingCard}\r\n      pendingComponent={PendingCard}\r\n      rejectedComponent={RejectedCard}\r\n      fulfilledComponent={fulfilledComponent}\r\n    />\r\n  );\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport useQuery from \"../../services/hooks/useQuery.js\";\r\n\r\nimport { selectIsAuthenticated } from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute({ children, ...rest }) {\r\n  const location = useLocation();\r\n  const query = useQuery();\r\n  query.set(\"redirect\", location.pathname);\r\n\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {isAuthenticated ? (\r\n        children\r\n      ) : (\r\n        <Redirect exact to={\"/authentication/login?\" + query.toString()} />\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","export async function getLogoutApi() {\r\n  const response = await fetch(\"/api/authentication/logout\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getEmailVerificationApi() {\r\n  const response = await fetch(\"/api/authentication/emailVerification\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getLogoutApi, getEmailVerificationApi } from \"./api.js\";\r\n\r\nimport { resetAuthentication } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const getEmailVerification = createAsyncThunk(\r\n  \"dashboard/getEmailVerification\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    const data = await getEmailVerificationApi();\r\n\r\n    if (data.success) {\r\n      dispatch(resetErrors());\r\n      return true;\r\n    } else {\r\n      if (data.error) {\r\n        dispatch(setErrors([data.error]));\r\n      }\r\n      rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nexport const getLogout = createAsyncThunk(\r\n  \"dashboard/getLogout\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    const data = await getLogoutApi();\r\n\r\n    if (data.success) {\r\n      dispatch(resetAuthentication());\r\n      return true;\r\n    } else {\r\n      rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  getEmailVerificationRequestStatus: \"idle\",\r\n  getLogoutRequestStatus: \"idle\",\r\n  errors: [],\r\n};\r\n\r\nconst accountDashboardSlice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n\r\n    resetErrors: (state, action) => {\r\n      state.errors = [];\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getEmailVerification.pending, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getEmailVerification.rejected, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getEmailVerification.fulfilled, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"fulfilled\";\r\n      })\r\n      .addCase(getLogout.pending, (state, action) => {\r\n        state.getLogoutRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getLogout.rejected, (state, action) => {\r\n        state.getLogoutRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getLogout.fulfilled, (state, action) => {\r\n        state.getLogoutRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setErrors, resetErrors } = accountDashboardSlice.actions;\r\n\r\nexport default accountDashboardSlice.reducer;\r\n","export const selectDashboard = (state) => state.account.dashboard;\r\n\r\nexport const selectGetEmailVerificationRequestStatus = (state) =>\r\n  selectDashboard(state).getEmailVerificationRequestStatus;\r\n\r\nexport const selectGetLogoutRequestStatus = (state) =>\r\n  selectDashboard(state).getLogoutRequestStatus;\r\n\r\nexport const selectAlertError = (state) =>\r\n  selectDashboard(state).errors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"alert\"\r\n  )[0]?.message;\r\n","import Resource from \"../../../../../../components/Resource\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction InitiateLoadingRequestButton({ className, initiateLoadingRequest }) {\r\n  return (\r\n    <Button\r\n      className={className}\r\n      onClick={initiateLoadingRequest}\r\n      variant=\"success\"\r\n    >\r\n      Send Email Verification\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default function EmailVerificationButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n        />\r\n      )}\r\n      pendingComponent={() => (\r\n        <Button className={className} variant=\"secondary\">\r\n          Loading...\r\n        </Button>\r\n      )}\r\n      rejectedComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n        />\r\n      )}\r\n      fulfilledComponent={() => (\r\n        <InitiateLoadingRequestButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nexport default function PostButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  text,\r\n  variant,\r\n}) {\r\n  return (\r\n    <Button\r\n      className={className}\r\n      variant={variant}\r\n      onClick={initiateLoadingRequest}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nexport default function LoadingButton({ className }) {\r\n  return (\r\n    <Button className={className} variant=\"secondary\" disabled>\r\n      Loading...\r\n    </Button>\r\n  );\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nexport default function RetryButton({ className, initiateLoadingRequest }) {\r\n  return (\r\n    <Button\r\n      className={className}\r\n      variant=\"danger\"\r\n      onClick={initiateLoadingRequest}\r\n    >\r\n      Retry\r\n    </Button>\r\n  );\r\n}\r\n","import { Redirect } from \"react-router-dom\";\r\nimport Resource from \"../Resource\";\r\n\r\nimport PostButton from \"./components/PostButton\";\r\nimport LoadingButton from \"./components/LoadingButton\";\r\nimport RetryButton from \"./components/RetryButton\";\r\n\r\nexport default function PostRequestButton({\r\n  className,\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleText,\r\n  idleVariant = \"success\",\r\n  redirectLink,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={() => (\r\n        <PostButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text={idleText}\r\n          variant={idleVariant}\r\n        />\r\n      )}\r\n      pendingComponent={() => <LoadingButton className={className} />}\r\n      rejectedComponent={() => (\r\n        <RetryButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n        />\r\n      )}\r\n      fulfilledComponent={() => <Redirect exact to={redirectLink} />}\r\n    />\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getEmailVerification,\r\n  getLogout,\r\n  reset,\r\n} from \"./services/accountDashboardSlice\";\r\nimport {\r\n  selectGetEmailVerificationRequestStatus,\r\n  selectGetLogoutRequestStatus,\r\n  selectAlertError,\r\n} from \"./services/accountDashboardSlice/selectors.js\";\r\n\r\nimport {\r\n  selectUsername,\r\n  selectEmail,\r\n  selectRank,\r\n} from \"../../../../services/authenticatedSlice/selectors\";\r\n\r\nimport { Badge, Alert } from \"react-bootstrap\";\r\nimport EmailVerificationButton from \"./components/EmailVerificationButton\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nexport default function Dashboard() {\r\n  const dispatch = useDispatch();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const email = useSelector(selectEmail);\r\n  const rank = useSelector(selectRank);\r\n  const alertError = useSelector(selectAlertError);\r\n\r\n  const initiateGetEmailVerification = () => {\r\n    dispatch(getEmailVerification());\r\n  };\r\n  const getEmailVerificationRequestStatus = useSelector(\r\n    selectGetEmailVerificationRequestStatus\r\n  );\r\n\r\n  const initiateLoadingRequest = () => dispatch(getLogout());\r\n  const loadingRequestStatus = useSelector(selectGetLogoutRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"account-dashboard d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Welcome {username}!</h2>\r\n        <hr />\r\n        {Boolean(alertError) && <Alert variant=\"danger\">{alertError}</Alert>}\r\n        <h6 className=\"d-inline\">Username: </h6> {username} <br />\r\n        <h6 className=\"d-inline\">Email: </h6>\r\n        {email}{\" \"}\r\n        {rank === \"unverified\" && <Badge variant=\"danger\">Not Verified</Badge>}\r\n        <br />\r\n        <h6 className=\"d-inline\">Rank: </h6> {rank} <br />\r\n        <div className=\"mt-2\">\r\n          {rank === \"unverified\" && (\r\n            <EmailVerificationButton\r\n              className=\"mr-2\"\r\n              initiateLoadingRequest={initiateGetEmailVerification}\r\n              loadingRequestStatus={getEmailVerificationRequestStatus}\r\n            />\r\n          )}\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Logout\"\r\n            idleVariant=\"primary\"\r\n            redirectLink=\"/authentication/login\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getProfileApi(userId) {\r\n  const response = await fetch(`/api/account/profile/${userId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getProfileApi } from \"./api\";\r\n\r\nexport const getProfile = createAsyncThunk(\r\n  \"profile/getProfile\",\r\n  async (userId, { rejectWithValue }) => {\r\n    const { success, payload } = await getProfileApi(userId);\r\n\r\n    if (success) {\r\n      return payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  profileData: {},\r\n  getProfileRequestStatus: \"idle\",\r\n};\r\n\r\nconst accountProfileSlice = createSlice({\r\n  name: \"profile\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getProfile.pending, (state, action) => {\r\n        state.getProfileRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getProfile.rejected, (state, action) => {\r\n        state.getProfileRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getProfile.fulfilled, (state, action) => {\r\n        state.getProfileRequestStatus = \"fulfilled\";\r\n        state.profileData = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = accountProfileSlice.actions;\r\n\r\nexport default accountProfileSlice.reducer;\r\n","export const selectProfile = (state) => state.account.profile;\r\n\r\nexport const selectProfileData = (state) => selectProfile(state).profileData;\r\n\r\nexport const selectId = (state) => selectProfileData(state)._id;\r\n\r\nexport const selectUsername = (state) => selectProfileData(state).username;\r\n\r\nexport const selectTotalArtsCreated = (state) =>\r\n  selectProfileData(state).totalArtsCreated;\r\n\r\nexport const selectRecentSimplifiedArts = (state) =>\r\n  selectProfileData(state).recentSimplifiedArts;\r\n\r\nexport const selectRecentSimplifiedArtByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArts(state)[index];\r\n\r\nexport const selectRecentSimplifiedArtIdByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArtByIndex(index)(state)._id;\r\n\r\nexport const selectRecentSimplifiedArtTitleByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArtByIndex(index)(state).title;\r\n\r\nexport const selectRecentSimplifiedArtDescriptionByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArtByIndex(index)(state).description;\r\n\r\nexport const selectGetProfileRequestStatus = (state) =>\r\n  selectProfile(state).getProfileRequestStatus;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport useQuery from \"../../services/hooks/useQuery.js\";\r\n\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function ArtCard(props) {\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n\r\n  const { simplifiedArt } = props;\r\n  const { _id, title, description } = simplifiedArt;\r\n\r\n  return (\r\n    <Card className=\"h-100\">\r\n      <Card.Body style={{ textAlign: \"center\" }}>\r\n        <h5>{title}</h5>\r\n        <hr />\r\n        {description}\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button\r\n          className=\"w-100\"\r\n          variant=\"success\"\r\n          onClick={() => history.push(`/art/open/${_id}?${query.toString()}`)}\r\n        >\r\n          Open\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport { getProfile, reset } from \"./services/accountProfileSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectRecentSimplifiedArts,\r\n  selectTotalArtsCreated,\r\n  selectGetProfileRequestStatus,\r\n} from \"./services/accountProfileSlice/selectors.js\";\r\n\r\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport ArtCard from \"../../../../components/ArtCard\";\r\n\r\nexport default function Profile() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const { userId } = useParams();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const recentSimplifiedArts = useSelector(selectRecentSimplifiedArts);\r\n  const totalArtsCreated = useSelector(selectTotalArtsCreated);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getProfile(userId));\r\n  const loadingRequestStatus = useSelector(selectGetProfileRequestStatus);\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className=\"account-profile d-flex flex-column\" style={{ flex: 1 }}>\r\n      <GetRequestCard\r\n        initiateLoadingRequest={initiateLoadingRequest}\r\n        loadingRequestStatus={loadingRequestStatus}\r\n        fulfilledComponent={() => (\r\n          <div>\r\n            <h2 style={{ textAlign: \"center\" }}>{username}</h2>\r\n            <hr />\r\n\r\n            <h2>Creations</h2>\r\n            <Card>\r\n              <Card.Body>\r\n                <Container>\r\n                  <Row>\r\n                    {totalArtsCreated > 0 ? (\r\n                      recentSimplifiedArts.map(\r\n                        (simplifiedArt, simplifiedArtIndex) => (\r\n                          <Col key={simplifiedArtIndex} md={4}>\r\n                            <ArtCard simplifiedArt={simplifiedArt} />\r\n                          </Col>\r\n                        )\r\n                      )\r\n                    ) : (\r\n                      <Col>\r\n                        <h2\r\n                          className=\"text-muted\"\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          Uh oh... There are no arts\r\n                        </h2>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </Container>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            {totalArtsCreated > 0 &&\r\n              (totalArtsCreated <= 3 ? (\r\n                <div className=\"d-flex mt-2\">\r\n                  Total Arts: {totalArtsCreated}\r\n                </div>\r\n              ) : (\r\n                <div className=\"d-flex mt-2\">\r\n                  Total Arts: {totalArtsCreated}\r\n                  <Button\r\n                    className=\"ml-auto\"\r\n                    variant=\"success\"\r\n                    onClick={() => {\r\n                      query.set(\"userId\", userId);\r\n                      history.push(`/art/browse?${query.toString()}`);\r\n                    }}\r\n                  >\r\n                    Browse All\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Pagination } from \"react-bootstrap\";\r\n\r\nexport const getPagesToGenerate = (\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback\r\n) => {\r\n  let pagesToGenerate = [];\r\n  if (totalPages <= 5) {\r\n    for (let counter = 1; counter < totalPages + 1; counter++) {\r\n      pagesToGenerate.push(counter);\r\n    }\r\n  } else {\r\n    for (let counter = currentPage - 2; counter < currentPage + 3; counter++) {\r\n      if (counter > 0 && counter <= totalPages) {\r\n        pagesToGenerate.push(counter);\r\n      }\r\n    }\r\n  }\r\n  return pagesToGenerate;\r\n};\r\n\r\nexport const generatePages = (\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n  pagesToGenerate\r\n) => {\r\n  return pagesToGenerate.map((index) => (\r\n    <Pagination.Item\r\n      key={index}\r\n      active={index == currentPage}\r\n      onClick={() => pageChangeCallback(index)}\r\n    >\r\n      {index}\r\n    </Pagination.Item>\r\n  ));\r\n};\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction generateMinimalPages({ totalPages, currentPage, pageChangeCallback }) {\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    getPagesToGenerate(totalPages, currentPage, pageChangeCallback)\r\n  );\r\n}\r\n\r\nexport default function MinimalPagination(props) {\r\n  return <Pagination>{generateMinimalPages(props)}</Pagination>;\r\n}\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction generatePrevPagination({ currentPage, pageChangeCallback }) {\r\n  let newPageValue = currentPage - 1;\r\n  if (newPageValue <= 1) {\r\n    newPageValue = 1;\r\n  }\r\n  return <Pagination.Prev onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateCollapsedPages({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    getPagesToGenerate(totalPages, currentPage, pageChangeCallback)\r\n  );\r\n}\r\n\r\nfunction generateNextPagination(props) {\r\n  const { totalPages, currentPage, pageChangeCallback } = props;\r\n\r\n  let newPageValue = currentPage + 1;\r\n  if (newPageValue >= totalPages) {\r\n    newPageValue = totalPages;\r\n  }\r\n  return <Pagination.Next onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nexport default function CollapsedPagination(props) {\r\n  return (\r\n    <Pagination>\r\n      {generatePrevPagination(props)}\r\n      {generateCollapsedPages(props)}\r\n      {generateNextPagination(props)}\r\n    </Pagination>\r\n  );\r\n}\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction shouldGenerateLeftEllipsis(totalPages, currentPage) {\r\n  return currentPage > 3;\r\n}\r\n\r\nfunction shouldGenerateRightEllipsis(totalPages, currentPage) {\r\n  return currentPage < totalPages - 2;\r\n}\r\n\r\nfunction getLeftEllipsisPageValue(totalPages, currentPage) {\r\n  const pageValue = currentPage - 4;\r\n  if (pageValue <= 1) {\r\n    return 1;\r\n  } else {\r\n    return pageValue;\r\n  }\r\n}\r\n\r\nfunction getRightEllipsisPageValue(totalPages, currentPage) {\r\n  const pageValue = currentPage + 4;\r\n  if (pageValue >= totalPages) {\r\n    return totalPages;\r\n  } else {\r\n    return pageValue;\r\n  }\r\n}\r\n\r\nfunction generateFirstPagination({ pageChangeCallback }) {\r\n  return <Pagination.First onClick={() => pageChangeCallback(1)} />;\r\n}\r\n\r\nfunction generatePrevPagination({ currentPage, pageChangeCallback }) {\r\n  let newPageValue = currentPage - 1;\r\n  if (newPageValue <= 1) {\r\n    newPageValue = 1;\r\n  }\r\n  return <Pagination.Prev onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateLeftEllipse({ totalPages, currentPage, pageChangeCallback }) {\r\n  return (\r\n    shouldGenerateLeftEllipsis(totalPages, currentPage) && (\r\n      <Pagination.Ellipsis\r\n        onClick={() =>\r\n          pageChangeCallback(getLeftEllipsisPageValue(totalPages, currentPage))\r\n        }\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nfunction generateExpandedPages({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  let pagesToGenerate = getPagesToGenerate(totalPages, currentPage);\r\n  pagesToGenerate.shift();\r\n  pagesToGenerate.pop();\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    pagesToGenerate\r\n  );\r\n}\r\n\r\nfunction generateRightEllipse({ totalPages, currentPage, pageChangeCallback }) {\r\n  return (\r\n    shouldGenerateRightEllipsis(totalPages, currentPage) && (\r\n      <Pagination.Ellipsis\r\n        onClick={() =>\r\n          pageChangeCallback(getRightEllipsisPageValue(totalPages, currentPage))\r\n        }\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nfunction generateNextPagination({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  let newPageValue = currentPage + 1;\r\n  if (newPageValue >= totalPages) {\r\n    newPageValue = totalPages;\r\n  }\r\n  return <Pagination.Next onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateLastPagination({ totalPages, pageChangeCallback }) {\r\n  return <Pagination.Last onClick={() => pageChangeCallback(totalPages)} />;\r\n}\r\n\r\nexport default function ExpandedPagination(props) {\r\n  const { totalPages, currentPage, pageChangeCallback } = props;\r\n\r\n  return (\r\n    <Pagination>\r\n      {generateFirstPagination(props)}\r\n      {generatePrevPagination(props)}\r\n      <Pagination.Item\r\n        active={1 === currentPage}\r\n        onClick={() => pageChangeCallback(1)}\r\n      >\r\n        1\r\n      </Pagination.Item>\r\n      {generateLeftEllipse(props)}\r\n      {generateExpandedPages(props)}\r\n      {generateRightEllipse(props)}\r\n      <Pagination.Item\r\n        active={totalPages === currentPage}\r\n        onClick={() => pageChangeCallback(totalPages)}\r\n      >\r\n        {totalPages}\r\n      </Pagination.Item>\r\n      {generateNextPagination(props)}\r\n      {generateLastPagination(props)}\r\n    </Pagination>\r\n  );\r\n}\r\n","import MinimalPagination from \"./components/MinimalPagination\";\r\nimport CollapsedPagination from \"./components/CollapsedPagination\";\r\nimport ExpandedPagination from \"./components/ExpandedPagination\";\r\n\r\nexport default function Paginator({\r\n  className,\r\n  currentPage,\r\n  totalPages,\r\n  pageChangeCallback,\r\n}) {\r\n  return (\r\n    <div className={\"paginator d-flex justify-content-center \" + className}>\r\n      {totalPages <= 3 ? (\r\n        <MinimalPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      ) : totalPages <= 5 ? (\r\n        <CollapsedPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      ) : (\r\n        <ExpandedPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { getRowsFromSimplifiedArts } from \"./services/grid.js\";\r\n\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ArtCard from \"../ArtCard\";\r\n\r\nexport default function ArtBrowser({\r\n  className,\r\n  cardsPerRow,\r\n  totalRows,\r\n  simplifiedArts,\r\n}) {\r\n  const rows = getRowsFromSimplifiedArts(\r\n    cardsPerRow,\r\n    totalRows,\r\n    simplifiedArts\r\n  );\r\n\r\n  return (\r\n    <div className={\"art-browser \" + className}>\r\n      {simplifiedArts.length === 0 ? (\r\n        <h4 className=\"text-muted\" style={{ textAlign: \"center\" }}>\r\n          Uh oh... There are no arts\r\n        </h4>\r\n      ) : (\r\n        rows.map((row, rowIndex) => (\r\n          <Row key={rowIndex}>\r\n            {row.map((simplifiedArt, simplifiedArtIndex) => (\r\n              <Col\r\n                className=\"my-2\"\r\n                md={12 / cardsPerRow}\r\n                key={simplifiedArtIndex}\r\n              >\r\n                <ArtCard simplifiedArt={simplifiedArt} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export function getRowsFromSimplifiedArts(\r\n  cardsPerRow,\r\n  totalRows,\r\n  simplifiedArts\r\n) {\r\n  let rowsData = [];\r\n  for (let rowIndex = 0; rowIndex < totalRows; rowIndex++) {\r\n    rowsData[rowIndex] = [];\r\n    let rowStartingCardIndex = rowIndex * cardsPerRow;\r\n    let startingCardIndex = rowStartingCardIndex;\r\n    for (\r\n      let cardIndex = startingCardIndex;\r\n      cardIndex < startingCardIndex + cardsPerRow;\r\n      cardIndex++\r\n    ) {\r\n      let cardData = simplifiedArts[cardIndex];\r\n      if (cardData) rowsData[rowIndex].push(cardData);\r\n    }\r\n  }\r\n  return rowsData;\r\n}\r\n","export async function getArtCountApi(userId) {\r\n  const urlSearchParams = new URLSearchParams();\r\n  if (Boolean(userId)) urlSearchParams.set(\"userId\", userId);\r\n\r\n  const response = await fetch(\r\n    `/api/art/browse/artCount?${urlSearchParams.toString()}`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getSimplifiedArtsApi(pageOffset, pageSize, userId) {\r\n  const urlSearchParams = new URLSearchParams();\r\n  if (Boolean(userId)) urlSearchParams.set(\"userId\", userId);\r\n\r\n  const response = await fetch(\r\n    `/api/art/browse/simplifiedArts/${pageOffset}/${pageSize}?${urlSearchParams.toString()}`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","export const selectBrowse = (state) => state.art.browse;\r\n\r\nexport const selectArtCount = (state) => selectBrowse(state).artCount;\r\n\r\nexport const selectGetArtCountRequestStatus = (state) =>\r\n  selectBrowse(state).getArtCountRequestStatus;\r\n\r\nexport const selectSimplifiedArts = (state) =>\r\n  selectBrowse(state).simplifiedArts;\r\n\r\nexport const selectSimplifiedArtByIndex = (index) => (state) =>\r\n  selectSimplifiedArts(state)[index];\r\n\r\nexport const selectSimplifiedArtIdByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state)._id;\r\n\r\nexport const selectSimplifiedArtTitleByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state).title;\r\n\r\nexport const selectSimplifiedArtDescriptionByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state).description;\r\n\r\nexport const selectGetSimplifiedArtsRequestStatus = (state) =>\r\n  selectBrowse(state).getSimplifiedArtsRequestStatus;\r\n\r\nexport const selectLoadingRequestStatus = (state) => {\r\n  const getArtCountRequestStatus = selectGetArtCountRequestStatus(state);\r\n  const getSimplifiedArtsRequestStatus =\r\n    selectGetSimplifiedArtsRequestStatus(state);\r\n  return getArtCountRequestStatus === \"rejected\" ||\r\n    getSimplifiedArtsRequestStatus === \"rejected\"\r\n    ? \"rejected\"\r\n    : getArtCountRequestStatus === \"fulfilled\" &&\r\n      getSimplifiedArtsRequestStatus === \"fulfilled\"\r\n    ? \"fulfilled\"\r\n    : \"pending\";\r\n};\r\n\r\nexport const selectCurrentPage = (state) => selectBrowse(state).currentPage;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getArtCountApi, getSimplifiedArtsApi } from \"./api.js\";\r\nimport { selectArtCount, selectCurrentPage } from \"./selectors.js\";\r\n\r\nexport const getArtCount = createAsyncThunk(\r\n  \"browse/getArtCount\",\r\n  async (userId, { rejectWithValue }) => {\r\n    const { success, payload } = await getArtCountApi(userId);\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getSimplifiedArts = createAsyncThunk(\r\n  \"browse/getSimplifiedArts\",\r\n  async ({ pageOffset, pageSize, userId }, { rejectWithValue }) => {\r\n    const { success, payload } = await getSimplifiedArtsApi(\r\n      pageOffset,\r\n      pageSize,\r\n      userId\r\n    );\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const loadResources = createAsyncThunk(\r\n  \"browse/loadResources\",\r\n  async (\r\n    { pageOffset, pageSize, queriedPage, userId },\r\n    { getState, dispatch }\r\n  ) => {\r\n    const hasLoadedArtCount = selectArtCount(getState()) !== -1;\r\n    if (!hasLoadedArtCount) await dispatch(getArtCount(userId));\r\n\r\n    const isPageConflict = selectCurrentPage(getState()) !== queriedPage;\r\n    if (!isPageConflict)\r\n      await dispatch(getSimplifiedArts({ pageOffset, pageSize, userId }));\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  artCount: -1,\r\n  getArtCountRequestStatus: \"idle\",\r\n  simplifiedArts: [],\r\n  getSimplifiedArtsRequestStatus: \"idle\",\r\n  currentPage: 1,\r\n};\r\n\r\nconst artBrowseSlice = createSlice({\r\n  name: \"browse\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setCurrentPage: (state, action) => {\r\n      state.currentPage = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getArtCount.pending, (state, action) => {\r\n        state.getArtCountRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getArtCount.rejected, (state, action) => {\r\n        state.getArtCountRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getArtCount.fulfilled, (state, action) => {\r\n        state.getArtCountRequestStatus = \"fulfilled\";\r\n        state.artCount = action.payload;\r\n      })\r\n      .addCase(getSimplifiedArts.pending, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getSimplifiedArts.rejected, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getSimplifiedArts.fulfilled, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"fulfilled\";\r\n        state.simplifiedArts = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setCurrentPage } = artBrowseSlice.actions;\r\n\r\nexport default artBrowseSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport Paginator from \"../../../../components/Paginator\";\r\nimport ArtBrowser from \"../../../../components/ArtBrowser\";\r\n\r\nimport {\r\n  loadResources,\r\n  reset,\r\n  setCurrentPage,\r\n} from \"./services/artBrowseSlice\";\r\nimport {\r\n  selectArtCount,\r\n  selectCurrentPage,\r\n  selectSimplifiedArts,\r\n  selectLoadingRequestStatus,\r\n} from \"./services/artBrowseSlice/selectors.js\";\r\n\r\nimport getTotalPages from \"./services/getTotalPages.js\";\r\n\r\nconst cardsPerRow = 3;\r\nconst totalRows = 4;\r\n\r\nexport default function Browse() {\r\n  const dispatch = useDispatch();\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const artCount = useSelector(selectArtCount);\r\n  const currentPage = useSelector(selectCurrentPage);\r\n  const simplifiedArts = useSelector(selectSimplifiedArts);\r\n\r\n  const totalPages = getTotalPages(cardsPerRow, totalRows, artCount);\r\n\r\n  const parsedQueriedPage = parseInt(query.get(\"page\"));\r\n  const queriedPage =\r\n    isNaN(parsedQueriedPage) ||\r\n    parsedQueriedPage < 1 ||\r\n    parsedQueriedPage > totalPages\r\n      ? 1\r\n      : parsedQueriedPage;\r\n  const pageConflict = artCount === -1 ? false : queriedPage !== currentPage;\r\n\r\n  if (pageConflict) dispatch(setCurrentPage(queriedPage));\r\n\r\n  const queriedUserId = query.get(\"userId\");\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(\r\n      loadResources({\r\n        pageOffset: currentPage - 1,\r\n        pageSize: cardsPerRow * totalRows,\r\n        queriedPage,\r\n        userId: queriedUserId,\r\n      })\r\n    );\r\n\r\n  const loadingRequestStatus = useSelector(selectLoadingRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadingRequestPromise = initiateLoadingRequest();\r\n    return () => loadingRequestPromise.abort();\r\n  }, [currentPage, queriedUserId]);\r\n\r\n  return (\r\n    <div className=\"art-browse d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Art Browser</h2>\r\n        <hr />\r\n        <GetRequestCard\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          fulfilledComponent={() => (\r\n            <Container className=\"mb-2\" fluid>\r\n              <ArtBrowser\r\n                cardsPerRow={cardsPerRow}\r\n                totalRows={totalRows}\r\n                simplifiedArts={simplifiedArts}\r\n              />\r\n            </Container>\r\n          )}\r\n        />\r\n        <Paginator\r\n          className=\"mt-auto\"\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={(newPage) => {\r\n            query.set(\"page\", newPage);\r\n            history.push(location.pathname + \"?\" + query.toString());\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function getTotalPages(cardsPerRow, totalRows, artCount) {\r\n  const artsPerPage = cardsPerRow * totalRows;\r\n  return Math.ceil(artCount / artsPerPage);\r\n}\r\n","import Joi from \"joi\";\r\n\r\nexport default Joi.object({\r\n  title: Joi.string().trim().min(1).max(30).required().messages({\r\n    \"string.empty\": \"Title is required.\",\r\n    \"string.min\": \"Title must be at least 1 characters long.\",\r\n    \"string.max\": \"Title must be less than or equal to 30 characters long.\",\r\n  }),\r\n  description: Joi.string().trim().min(1).max(100).required().messages({\r\n    \"string.empty\": \"Description is required.\",\r\n    \"string.min\": \"Description must be at least 1 characters long.\",\r\n    \"string.max\":\r\n      \"Description must be less than or equal to 100 characters long.\",\r\n  }),\r\n  content: Joi.string().min(1).max(4000).required().messages({\r\n    \"string.empty\": \"Content is required.\",\r\n    \"string.min\": \"Content must be at least 1 characters long.\",\r\n    \"string.max\": \"Content must be less than or equal to 4000 characters long.\",\r\n  }),\r\n});\r\n","export async function postCreateArtApi(art) {\r\n  const response = await fetch(\"/api/art/create\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(art),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport artSchema from \"../artSchema.js\";\r\nimport { postCreateArtApi } from \"./api.js\";\r\nimport { resetAuthentication } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postCreateArt = createAsyncThunk(\r\n  \"create/postCreateArt\",\r\n  async (art, { dispatch, rejectWithValue }) => {\r\n    const validationResult = artSchema.validate(art, { abortEarly: false });\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postCreateArtApi(art);\r\n\r\n      if (data.success) {\r\n        return data.payload;\r\n      } else {\r\n        if (data.error) {\r\n          if (data.error.unauthenticated) {\r\n            dispatch(resetAuthentication());\r\n            return rejectWithValue(\"preventStateUpdates\");\r\n          }\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  art: {\r\n    title: \"\",\r\n    description: \"\",\r\n    content: \"\",\r\n  },\r\n  responseArt: null,\r\n  validationErrors: [],\r\n  postCreateArtRequestStatus: \"idle\",\r\n};\r\n\r\nexport const artCreateSlice = createSlice({\r\n  name: \"create\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    resetArt: (state, action) => {\r\n      state.art = { ...initialState.art };\r\n    },\r\n\r\n    setTitle: (state, action) => {\r\n      state.art.title = action.payload;\r\n    },\r\n\r\n    setDescription: (state, action) => {\r\n      state.art.description = action.payload;\r\n    },\r\n\r\n    setContent: (state, action) => {\r\n      state.art.content = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postCreateArt.pending, (state, action) => {\r\n        state.postCreateArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postCreateArt.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postCreateArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postCreateArt.fulfilled, (state, action) => {\r\n        state.responseArt = action.payload;\r\n        state.postCreateArtRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  resetArt,\r\n  setTitle,\r\n  setDescription,\r\n  setContent,\r\n  setValidationErrors,\r\n} = artCreateSlice.actions;\r\n\r\nexport default artCreateSlice.reducer;\r\n","export const selectCreate = (state) => state.art.create;\r\n\r\nexport const selectArt = (state) => selectCreate(state).art;\r\n\r\nexport const selectTitle = (state) => selectArt(state).title;\r\n\r\nexport const selectDescription = (state) => selectArt(state).description;\r\n\r\nexport const selectContent = (state) => selectArt(state).content;\r\n\r\nexport const selectResponseArt = (state) => selectCreate(state).responseArt;\r\n\r\nexport const selectResponseArtId = (state) => selectResponseArt(state)?._id;\r\n\r\nexport const selectPostCreateArtRequestStatus = (state) =>\r\n  selectCreate(state).postCreateArtRequestStatus;\r\n\r\nexport const selectTitleError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"title\"\r\n  )[0]?.message;\r\n\r\nexport const selectDescriptionError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"description\"\r\n  )[0]?.message;\r\n\r\nexport const selectContentError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"content\"\r\n  )[0]?.message;\r\n\r\nexport const selectAlertError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"alert\"\r\n  )[0]?.message;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { Alert, Form, Button } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nimport {\r\n  reset,\r\n  resetArt,\r\n  setTitle,\r\n  setDescription,\r\n  setContent,\r\n  postCreateArt,\r\n} from \"./services/artCreateSlice\";\r\nimport {\r\n  selectArt,\r\n  selectTitle,\r\n  selectDescription,\r\n  selectContent,\r\n  selectResponseArtId,\r\n  selectPostCreateArtRequestStatus,\r\n  selectTitleError,\r\n  selectDescriptionError,\r\n  selectContentError,\r\n  selectAlertError,\r\n} from \"./services/artCreateSlice/selectors.js\";\r\n\r\nexport default function Create() {\r\n  const dispatch = useDispatch();\r\n\r\n  const art = useSelector(selectArt);\r\n  const title = useSelector(selectTitle);\r\n  const description = useSelector(selectDescription);\r\n  const content = useSelector(selectContent);\r\n  const postCreateArtRequestStatus = useSelector(\r\n    selectPostCreateArtRequestStatus\r\n  );\r\n  const responseArtId = useSelector(selectResponseArtId);\r\n\r\n  const titleError = useSelector(selectTitleError);\r\n  const descriptionError = useSelector(selectDescriptionError);\r\n  const contentError = useSelector(selectContentError);\r\n  const alertError = useSelector(selectAlertError);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"art-create d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 className=\"mb-3\" style={{ textAlign: \"center\" }}>\r\n          Art Editor\r\n        </h2>\r\n        <hr />\r\n      </div>\r\n\r\n      {Boolean(alertError) && <Alert variant=\"danger\">{alertError}</Alert>}\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"title\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            value={title}\r\n            isInvalid={Boolean(titleError)}\r\n            onChange={(event) => dispatch(setTitle(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {titleError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            isInvalid={Boolean(descriptionError)}\r\n            onChange={(event) => dispatch(setDescription(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {descriptionError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"content\">\r\n          <Form.Label>Content</Form.Label>\r\n          <Form.Control\r\n            autoComplete=\"off\"\r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=\"Content\"\r\n            value={content}\r\n            isInvalid={Boolean(contentError)}\r\n            onChange={(event) => dispatch(setContent(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {contentError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <div className=\"my-4 d-flex\">\r\n        <Button variant=\"primary\" onClick={() => dispatch(resetArt())}>\r\n          New\r\n        </Button>\r\n\r\n        <PostRequestButton\r\n          className=\"ml-auto\"\r\n          initiateLoadingRequest={() => dispatch(postCreateArt(art))}\r\n          loadingRequestStatus={postCreateArtRequestStatus}\r\n          idleText=\"Create\"\r\n          redirectLink={`/art/open/${responseArtId}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getArtApi(artId) {\r\n  const response = await fetch(`/api/art/open/art/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getDeleteArtApi(artId) {\r\n  const response = await fetch(`/api/art/delete/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getArtApi, getDeleteArtApi } from \"./api.js\";\r\n\r\nexport const getArt = createAsyncThunk(\r\n  \"open/getArt\",\r\n  async (artId, { rejectWithValue }) => {\r\n    const { success, payload } = await getArtApi(artId);\r\n\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getDeleteArt = createAsyncThunk(\r\n  \"open/getDeleteArt\",\r\n  async (artId, { rejectWithValue }) => {\r\n    const { success, payload } = await getDeleteArtApi(artId);\r\n\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  art: {},\r\n  getArtRequestStatus: \"idle\",\r\n  getDeleteArtRequestStatus: \"idle\",\r\n};\r\n\r\nconst artOpenSlice = createSlice({\r\n  name: \"open\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getArt.pending, (state, action) => {\r\n        state.getArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getArt.rejected, (state, action) => {\r\n        state.getArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getArt.fulfilled, (state, action) => {\r\n        state.getArtRequestStatus = \"fulfilled\";\r\n        state.art = action.payload;\r\n      })\r\n      .addCase(getDeleteArt.pending, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getDeleteArt.rejected, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getDeleteArt.fulfilled, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = artOpenSlice.actions;\r\n\r\nexport default artOpenSlice.reducer;\r\n","export const selectOpen = (state) => state.art.open;\r\n\r\nexport const selectArt = (state) => selectOpen(state).art;\r\n\r\nexport const selectCreatorId = (state) => selectArt(state).creatorId;\r\n\r\nexport const selectTitle = (state) => selectArt(state).title;\r\n\r\nexport const selectDescription = (state) => selectArt(state).description;\r\n\r\nexport const selectContent = (state) => selectArt(state).content;\r\n\r\nexport const selectGetArtRequestStatus = (state) =>\r\n  selectOpen(state).getArtRequestStatus;\r\n\r\nexport const selectGetDeleteArtRequestStatus = (state) =>\r\n  selectOpen(state).getDeleteArtRequestStatus;\r\n","import GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport { getArt, getDeleteArt, reset } from \"./services/artOpenSlice\";\r\nimport {\r\n  selectCreatorId,\r\n  selectTitle,\r\n  selectDescription,\r\n  selectContent,\r\n  selectGetArtRequestStatus,\r\n  selectGetDeleteArtRequestStatus,\r\n} from \"./services/artOpenSlice/selectors.js\";\r\n\r\nimport {\r\n  selectIsAuthenticated,\r\n  selectUserId,\r\n} from \"../../../../services/authenticatedSlice/selectors.js\";\r\n\r\nexport default function Open() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n\r\n  const { artId: queriedArtId } = useParams();\r\n\r\n  const creatorId = useSelector(selectCreatorId);\r\n  const title = useSelector(selectTitle);\r\n  const description = useSelector(selectDescription);\r\n  const content = useSelector(selectContent);\r\n\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n  const isCreator = userId === creatorId;\r\n\r\n  const getArtRequestStatus = useSelector(selectGetArtRequestStatus);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getArt(queriedArtId));\r\n  const loadingRequestStatus = getArtRequestStatus;\r\n\r\n  const initiateDeleteRequest = () => dispatch(getDeleteArt(queriedArtId));\r\n  const deleteRequestStatus = useSelector(selectGetDeleteArtRequestStatus);\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"art-open d-flex flex-column\" style={{ flex: 1 }}>\r\n      <GetRequestCard\r\n        initiateLoadingRequest={initiateLoadingRequest}\r\n        loadingRequestStatus={loadingRequestStatus}\r\n        fulfilledComponent={() => (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <h2>{title}</h2>\r\n            <hr />\r\n            {description}\r\n            <Card className=\"my-2\">\r\n              <Card.Body\r\n                style={{ whiteSpace: \"pre-line\", fontFamily: \"monospace\" }}\r\n              >\r\n                {content}\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <div className=\"my-4 d-flex\">\r\n              <Button\r\n                className=\"mr-2\"\r\n                variant=\"success\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/account/profile/${creatorId}?${query.toString()}`\r\n                  )\r\n                }\r\n              >\r\n                Creator Profile\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => navigator.clipboard.writeText(content)}\r\n              >\r\n                Copy\r\n              </Button>\r\n\r\n              <div className=\"ml-auto\">\r\n                {isCreator && (\r\n                  <PostRequestButton\r\n                    className=\"mr-2\"\r\n                    idleText=\"Delete\"\r\n                    idleVariant=\"danger\"\r\n                    initiateLoadingRequest={initiateDeleteRequest}\r\n                    loadingRequestStatus={deleteRequestStatus}\r\n                    redirectLink={`/art/browse?${query.toString()}`}\r\n                  />\r\n                )}\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    history.push(`/art/browse?${query.toString()}`);\r\n                  }}\r\n                >\r\n                  Back To Browse\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export async function postLoginUserApi(userAndRecaptchaToken) {\r\n  const response = await fetch(\"/api/authentication/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userAndRecaptchaToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nconst userSchema = Joi.object({\r\n  username: Joi.string().alphanum().trim().min(3).max(20).required().messages({\r\n    \"string.empty\": \"Username is required.\",\r\n    \"string.min\": \"Username must be at least 3 characters long.\",\r\n    \"string.max\": \"Username must be less than or equal to 20 characters long.\",\r\n  }),\r\n  password: Joi.string().min(10).max(100).required().messages({\r\n    \"string.empty\": \"Password is required.\",\r\n    \"string.min\": \"Password must be at least 10 characters long.\",\r\n    \"string.max\": \"Password must be less than or equal to 100 characters long.\",\r\n  }),\r\n});\r\n\r\nexport default Joi.object({\r\n  user: userSchema,\r\n  recaptchaToken: Joi.string().required().messages({\r\n    \"string.empty\": \"reCaptcha is required.\",\r\n  }),\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postLoginUserApi } from \"./api.js\";\r\nimport loginFormSchema from \"../loginFormSchema.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postLoginUser = createAsyncThunk(\r\n  \"login/postLoginUser\",\r\n  async (userAndRecaptchaToken, { dispatch, rejectWithValue }) => {\r\n    const validationResult = loginFormSchema.validate(userAndRecaptchaToken, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postLoginUserApi(userAndRecaptchaToken);\r\n\r\n      if (data.success) {\r\n        await dispatch(getAuthenticated());\r\n        return data;\r\n      } else {\r\n        if (data.error.authenticated) {\r\n          await dispatch(getAuthenticated());\r\n          return rejectWithValue(\"preventStateUpdates\");\r\n        }\r\n        if (data.error) {\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  password: \"\",\r\n  recaptchaToken: \"\",\r\n  validationErrors: [],\r\n  postLoginUserRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticationLoginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setUsername: (state, action) => {\r\n      state.username = action.payload;\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setRecaptchaToken: (state, action) => {\r\n      state.recaptchaToken = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n\r\n    setPostLoginUserRequestStatus: (state, action) => {\r\n      state.postLoginUserRequestStatus = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postLoginUser.pending, (state, action) => {\r\n        state.postLoginUserRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postLoginUser.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postLoginUserRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postLoginUser.fulfilled, (state, action) => {\r\n        state.postLoginUserRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  setUsername,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  setValidationErrors,\r\n} = authenticationLoginSlice.actions;\r\n\r\nexport default authenticationLoginSlice.reducer;\r\n","export const selectLogin = (state) => state.authentication.login;\r\n\r\nexport const selectUsername = (state) => selectLogin(state).username;\r\n\r\nexport const selectPassword = (state) => selectLogin(state).password;\r\n\r\nexport const selectRecaptchaToken = (state) =>\r\n  selectLogin(state).recaptchaToken;\r\n\r\nexport const selectPostLoginUserRequestStatus = (state) =>\r\n  selectLogin(state).postLoginUserRequestStatus;\r\n\r\nexport const selectUsernameError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"username\"\r\n  )[0]?.message;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"password\"\r\n  )[0]?.message;\r\n\r\nexport const selectRecaptchaTokenError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"recaptchaToken\"\r\n  )[0]?.message;\r\n","export const SITE_KEY = \"6Lfvwf8aAAAAAGfNx8ZjRBw3wawxBMmDTkdttG6g\";\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport {\r\n  reset,\r\n  setUsername,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  postLoginUser,\r\n} from \"./services/authenticationLoginSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectPassword,\r\n  selectRecaptchaToken,\r\n  selectPostLoginUserRequestStatus,\r\n  selectUsernameError,\r\n  selectPasswordError,\r\n  selectRecaptchaTokenError,\r\n} from \"./services/authenticationLoginSlice/selectors.js\";\r\n\r\nimport { SITE_KEY } from \"../../../../services/constants.js\";\r\n\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const query = useQuery();\r\n\r\n  const redirectValue = query.get(\"redirect\");\r\n  const isRedirect = Boolean(redirectValue);\r\n  if (isRedirect) query.delete(\"redirect\");\r\n  const redirectLink = isRedirect ? `${redirectValue}?${query.toString()}` : \"\";\r\n\r\n  const username = useSelector(selectUsername);\r\n  const password = useSelector(selectPassword);\r\n  const recaptchaToken = useSelector(selectRecaptchaToken);\r\n\r\n  const usernameError = useSelector(selectUsernameError);\r\n  const passwordError = useSelector(selectPasswordError);\r\n  const recaptchaTokenError = useSelector(selectRecaptchaTokenError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(postLoginUser({ user: { username, password }, recaptchaToken }));\r\n  const loadingRequestStatus = useSelector(selectPostLoginUserRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-login d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Login</h2>\r\n        <hr />\r\n\r\n        <Form>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={username}\r\n              isInvalid={Boolean(usernameError)}\r\n              onChange={(event) => dispatch(setUsername(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {usernameError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              isInvalid={Boolean(passwordError)}\r\n              onChange={(event) => dispatch(setPassword(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {passwordError}\r\n            </Form.Control.Feedback>\r\n            <LinkContainer to=\"/\">\r\n              <a className=\"text-muted text-decoration-none\">\r\n                <Form.Text>Forgot Password?</Form.Text>\r\n              </a>\r\n            </LinkContainer>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <ReCAPTCHA\r\n          sitekey={SITE_KEY}\r\n          onChange={(tokenValue) => dispatch(setRecaptchaToken(tokenValue))}\r\n        />\r\n\r\n        <div className=\"invalid-feedback\" style={{ display: \"block\" }}>\r\n          {recaptchaTokenError}\r\n        </div>\r\n\r\n        <div className=\"mt-3 d-flex\">\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Login\"\r\n            redirectLink={isRedirect ? redirectLink : \"/account/dashboard\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function postRegisterUserApi(userAndRecaptchaToken) {\r\n  const response = await fetch(\"/api/authentication/register\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userAndRecaptchaToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nconst userSchema = Joi.object({\r\n  username: Joi.string().alphanum().trim().min(3).max(20).required().messages({\r\n    \"string.empty\": \"Username is required.\",\r\n    \"string.min\": \"Username must be at least 3 characters long.\",\r\n    \"string.max\": \"Username must be less than or equal to 20 characters long.\",\r\n  }),\r\n  email: Joi.string()\r\n    .email({ tlds: { allow: false } })\r\n    .required()\r\n    .messages({\r\n      \"string.empty\": \"Email is required.\",\r\n      \"string.email\": \"Please enter a correct email.\",\r\n    }),\r\n  password: Joi.string().min(10).max(100).required().messages({\r\n    \"string.empty\": \"Password is required.\",\r\n    \"string.min\": \"Password must be at least 10 characters long.\",\r\n    \"string.max\": \"Password must be less than or equal to 100 characters long.\",\r\n  }),\r\n});\r\n\r\nexport default Joi.object({\r\n  user: userSchema,\r\n  recaptchaToken: Joi.string().required().messages({\r\n    \"string.empty\": \"reCaptcha is required.\",\r\n  }),\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postRegisterUserApi } from \"./api.js\";\r\nimport registerFormSchema from \"../registerFormSchema.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postRegisterUser = createAsyncThunk(\r\n  \"register/postRegisterUser\",\r\n  async (userAndRecaptchaToken, { dispatch, rejectWithValue }) => {\r\n    const validationResult = registerFormSchema.validate(\r\n      userAndRecaptchaToken,\r\n      {\r\n        abortEarly: false,\r\n      }\r\n    );\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postRegisterUserApi(userAndRecaptchaToken);\r\n\r\n      if (data.success) {\r\n        await dispatch(getAuthenticated());\r\n        return data;\r\n      } else {\r\n        if (data.error.authenticated) {\r\n          await dispatch(getAuthenticated());\r\n          return rejectWithValue(\"preventStateUpdates\");\r\n        }\r\n        if (data.error) {\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  recaptchaToken: \"\",\r\n  postRegisterUserRequestStatus: \"idle\",\r\n  validationErrors: [],\r\n};\r\n\r\nconst authenticationRegisterSlice = createSlice({\r\n  name: \"register\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setUsername: (state, action) => {\r\n      state.username = action.payload;\r\n    },\r\n\r\n    setEmail: (state, action) => {\r\n      state.email = action.payload;\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setRecaptchaToken: (state, action) => {\r\n      state.recaptchaToken = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postRegisterUser.pending, (state, action) => {\r\n        state.postRegisterUserRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postRegisterUser.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postRegisterUserRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postRegisterUser.fulfilled, (state, action) => {\r\n        state.postRegisterUserRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  setUsername,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  setValidationErrors,\r\n} = authenticationRegisterSlice.actions;\r\n\r\nexport default authenticationRegisterSlice.reducer;\r\n","export const selectRegister = (state) => state.authentication.register;\r\n\r\nexport const selectUsername = (state) => selectRegister(state).username;\r\n\r\nexport const selectEmail = (state) => selectRegister(state).email;\r\n\r\nexport const selectPassword = (state) => selectRegister(state).password;\r\n\r\nexport const selectRecaptchaToken = (state) =>\r\n  selectRegister(state).recaptchaToken;\r\n\r\nexport const selectPostRegisterUserRequestStatus = (state) =>\r\n  selectRegister(state).postRegisterUserRequestStatus;\r\n\r\nexport const selectUsernameError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"username\"\r\n  )[0]?.message;\r\n\r\nexport const selectEmailError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) => path.length == 2 && path[0] === \"user\" && path[1] === \"email\"\r\n  )[0]?.message;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"password\"\r\n  )[0]?.message;\r\n\r\nexport const selectRecaptchaTokenError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"recaptchaToken\"\r\n  )[0]?.message;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  reset,\r\n  setUsername,\r\n  setEmail,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  postRegisterUser,\r\n} from \"./services/authenticationRegisterSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectEmail,\r\n  selectPassword,\r\n  selectRecaptchaToken,\r\n  selectPostRegisterUserRequestStatus,\r\n  selectUsernameError,\r\n  selectEmailError,\r\n  selectPasswordError,\r\n  selectRecaptchaTokenError,\r\n} from \"./services/authenticationRegisterSlice/selectors.js\";\r\n\r\nimport { SITE_KEY } from \"../../../../services/constants.js\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function Register() {\r\n  const dispatch = useDispatch();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const email = useSelector(selectEmail);\r\n  const password = useSelector(selectPassword);\r\n  const recaptchaToken = useSelector(selectRecaptchaToken);\r\n\r\n  const usernameError = useSelector(selectUsernameError);\r\n  const emailError = useSelector(selectEmailError);\r\n  const passwordError = useSelector(selectPasswordError);\r\n  const recaptchaTokenError = useSelector(selectRecaptchaTokenError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(\r\n      postRegisterUser({ user: { username, email, password }, recaptchaToken })\r\n    );\r\n  const loadingRequestStatus = useSelector(selectPostRegisterUserRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-register d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Register</h2>\r\n        <hr />\r\n\r\n        <Form>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={username}\r\n              isInvalid={Boolean(usernameError)}\r\n              onChange={(event) => dispatch(setUsername(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {usernameError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              isInvalid={Boolean(emailError)}\r\n              onChange={(event) => dispatch(setEmail(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {emailError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              isInvalid={Boolean(passwordError)}\r\n              onChange={(event) => dispatch(setPassword(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {passwordError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <ReCAPTCHA\r\n          sitekey={SITE_KEY}\r\n          onChange={(tokenValue) => dispatch(setRecaptchaToken(tokenValue))}\r\n        />\r\n\r\n        <div className=\"invalid-feedback\" style={{ display: \"block\" }}>\r\n          {recaptchaTokenError}\r\n        </div>\r\n\r\n        <div className=\"mt-3 d-flex\">\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Register\"\r\n            redirectLink=\"/authentication/login\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getEmailVerificationApi(token) {\r\n  const response = await fetch(\r\n    `/api/authentication/emailverification/${token}`\r\n  );\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getEmailVerificationApi } from \"./api.js\";\r\n\r\nexport const getEmailVerification = createAsyncThunk(\r\n  \"authenticationEmailVerification/getEmailVerification\",\r\n  async (token, { dispatch, rejectWithValue }) => {\r\n    const data = await getEmailVerificationApi(token);\r\n\r\n    if (data.success) {\r\n      return true;\r\n    } else {\r\n      if (data.error) {\r\n        dispatch(setErrors([data.error]));\r\n      }\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  getEmailVerificationRequestStatus: \"idle\",\r\n  errors: [],\r\n};\r\n\r\nconst authenticationEmailVerificationSlice = createSlice({\r\n  name: \"emailVerification\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setErrors: (state, action) => {\r\n      state.errors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getEmailVerification.pending, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getEmailVerification.rejected, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getEmailVerification.fulfilled, (state, action) => {\r\n        state.getEmailVerificationRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setErrors } =\r\n  authenticationEmailVerificationSlice.actions;\r\n\r\nexport default authenticationEmailVerificationSlice.reducer;\r\n","export const selectEmailVerification = (state) =>\r\n  state.authentication.emailVerification;\r\n\r\nexport const selectGetEmailVerificationRequestStatus = (state) =>\r\n  selectEmailVerification(state).getEmailVerificationRequestStatus;\r\n\r\nexport const selectAlertError = (state) =>\r\n  selectEmailVerification(state).errors.filter(\r\n    ({ path }) => path.length === 1 && path[0] === \"alert\"\r\n  )[0]?.message;\r\n","import { useParams, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  reset,\r\n  getEmailVerification,\r\n} from \"./services/authenticationEmailVerificationSlice\";\r\nimport {\r\n  selectGetEmailVerificationRequestStatus,\r\n  selectAlertError,\r\n} from \"./services/authenticationEmailVerificationSlice/selectors.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../services/authenticatedSlice\";\r\nimport { selectIsAuthenticated } from \"../../../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport { Button, Alert } from \"react-bootstrap\";\r\n\r\nexport default function EmailVerification() {\r\n  const dispatch = useDispatch();\r\n  const { token } = useParams();\r\n  const history = useHistory();\r\n\r\n  const alertError = useSelector(selectAlertError);\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getEmailVerification(token));\r\n  const loadingRequestStatus = useSelector(\r\n    selectGetEmailVerificationRequestStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-emailVerification d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Email Verification</h2>\r\n        <hr />\r\n        {Boolean(alertError) && <Alert variant=\"danger\">{alertError}</Alert>}\r\n\r\n        {!Boolean(alertError) && (\r\n          <GetRequestCard\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            fulfilledComponent={() => (\r\n              <Alert variant=\"success\">\r\n                Your email has been successfully verified and your rank has been\r\n                updated!\r\n              </Alert>\r\n            )}\r\n          />\r\n        )}\r\n\r\n        {isAuthenticated ? (\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(getAuthenticated());\r\n              history.push(\"/account/dashboard\");\r\n            }}\r\n            className=\"mt-2\"\r\n            variant=\"success\"\r\n          >\r\n            Dashboard\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              history.push(\"/authentication/login\");\r\n            }}\r\n            className=\"mt-2\"\r\n            variant=\"success\"\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectIsAuthenticated } from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Login from \"./scenes/Login\";\r\nimport Register from \"./scenes/Register\";\r\nimport EmailVerification from \"./scenes/EmailVerification\";\r\n\r\nexport default function Authentication() {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  return [\r\n    <Route exact path=\"/authentication/login\" key=\"/authentication/login\">\r\n      {isAuthenticated ? <Redirect exact to=\"/account/dashboard\" /> : <Login />}\r\n    </Route>,\r\n    <Route exact path=\"/authentication/register\" key=\"/authentication/register\">\r\n      {isAuthenticated ? (\r\n        <Redirect exact to=\"/account/dashboard\" />\r\n      ) : (\r\n        <Register />\r\n      )}\r\n    </Route>,\r\n    <Route\r\n      exact\r\n      path=\"/authentication/emailverification/:token\"\r\n      key=\"/authentication/emailverification/:token\"\r\n    >\r\n      <EmailVerification />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { loadResources } from \"../../services/loaderSlice\";\r\nimport { selectLoadResourcesRequestStatus } from \"../../services/loaderSlice/selectors.js\";\r\n\r\nimport { Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../GetRequestCard\";\r\n\r\nimport Account from \"../../areas/Account\";\r\nimport Art from \"../../areas/Art\";\r\nimport Authentication from \"../../areas/Authentication\";\r\n\r\nexport default function Main() {\r\n  const dispatch = useDispatch();\r\n\r\n  const initiateLoadingRequest = () => dispatch(loadResources());\r\n  const loadingRequestStatus = useSelector(selectLoadResourcesRequestStatus);\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main d-flex flex-column\" style={{ flex: 1 }}>\r\n      <Container className=\"my-3 d-flex flex-column\" style={{ flex: 1 }}>\r\n        <GetRequestCard\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          fulfilledComponent={() => (\r\n            <Switch>\r\n              {Account()}\r\n              {Art()}\r\n              {Authentication()}\r\n            </Switch>\r\n          )}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\n\r\nimport Dashboard from \"./scenes/Dashboard\";\r\nimport Profile from \"./scenes/Profile\";\r\n\r\nexport default function Account() {\r\n  return [\r\n    <ProtectedRoute exact path=\"/account/dashboard\" key=\"/account/dashboard\">\r\n      <Dashboard />\r\n    </ProtectedRoute>,\r\n    <Route exact path=\"/account/profile/:userId\" key=\"/account/profile\">\r\n      <Profile />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\n\r\nimport Browse from \"./scenes/Browse\";\r\nimport Create from \"./scenes/Create\";\r\nimport Open from \"./scenes/Open\";\r\n\r\nexport default function Art() {\r\n  return [\r\n    <Route exact path=\"/art/browse\" key=\"/art/browse\">\r\n      <Browse />\r\n    </Route>,\r\n    <ProtectedRoute exact path=\"/art/create\" key=\"/art/create\">\r\n      <Create />\r\n    </ProtectedRoute>,\r\n    <Route exact path=\"/art/open/:artId\" key=\"/art/open\">\r\n      <Open />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer pbc p-3\">\r\n      <Container fluid>\r\n        {/* Columns have extra divs to hold link items so that the link items don't span the entire width of the column. */}\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col md>\r\n            <h5>ASCII-CRAFT</h5>\r\n            <div className=\"d-flex flex-column\">\r\n              <div>\r\n                <a className=\"px-2\" href=\"#\">\r\n                  Contact us\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <a href=\"#\">Privacy Policy</a>\r\n              </div>\r\n              <div>\r\n                <a href=\"#\">Terms of Service</a>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md>\r\n            <h5>HELP</h5>\r\n            <div className=\"d-flex flex-column\">\r\n              <div>\r\n                <a href=\"#\">FAQ</a>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <hr />\r\n\r\n        <small>\r\n          Please respect ASCII artists and do not remove their signature while\r\n          sharing their art.\r\n        </small>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport \"./style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"app d-flex flex-column\" style={{ minHeight: \"100vh\" }}>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport createReducer from \"../scenes/Create/services/artCreateSlice\";\r\nimport browseReducer from \"../scenes/Browse/services/artBrowseSlice\";\r\nimport openReducer from \"../scenes/Open/services/artOpenSlice\";\r\n\r\nconst artReducer = combineReducers({\r\n  create: createReducer,\r\n  browse: browseReducer,\r\n  open: openReducer,\r\n});\r\n\r\nexport default artReducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport registerReducer from \"../scenes/Register/services/authenticationRegisterSlice\";\r\nimport loginReducer from \"../scenes/Login/services/authenticationLoginSlice\";\r\nimport emailVerificationReducer from \"../scenes/EmailVerification/services/authenticationEmailVerificationSlice\";\r\n\r\nconst authenticationReducer = combineReducers({\r\n  register: registerReducer,\r\n  login: loginReducer,\r\n  emailVerification: emailVerificationReducer,\r\n});\r\n\r\nexport default authenticationReducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport dashboardReducer from \"../scenes/Dashboard/services/accountDashboardSlice\";\r\nimport profileReducer from \"../scenes/Profile/services/accountProfileSlice\";\r\n\r\nconst accountReducer = combineReducers({\r\n  dashboard: dashboardReducer,\r\n  profile: profileReducer,\r\n});\r\n\r\nexport default accountReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport artReducer from \"../../areas/Art/services/artReducer.js\";\r\nimport authenticationReducer from \"../../areas/Authentication/services/authenticationReducer.js\";\r\nimport accountReducer from \"../../areas/Account/services/accountReducer.js\";\r\n\r\nimport loaderReducer from \"../loaderSlice\";\r\nimport authenticatedSlice from \"../authenticatedSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    art: artReducer,\r\n    authentication: authenticationReducer,\r\n    account: accountReducer,\r\n\r\n    loader: loaderReducer,\r\n    authenticated: authenticatedSlice,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./services/redux/store.js\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}