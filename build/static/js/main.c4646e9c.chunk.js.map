{"version":3,"sources":["services/authenticatedSlice/selectors.js","components/Header/index.js","services/loaderSlice/selectors.js","services/authenticatedSlice/api.js","services/authenticatedSlice/index.js","services/loaderSlice/index.js","components/Resource/index.js","components/GetRequestCard/components/PendingCard/index.js","components/GetRequestCard/components/RejectedCard/index.js","components/GetRequestCard/index.js","services/hooks/useQuery.js","components/ProtectedRoute/index.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/api.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/index.js","areas/Account/scenes/Dashboard/services/accountDashboardSlice/selectors.js","components/PostRequestButton/components/PostButton/index.js","components/PostRequestButton/components/LoadingButton/index.js","components/PostRequestButton/components/RetryButton/index.js","components/PostRequestButton/index.js","areas/Account/scenes/Dashboard/index.js","areas/Account/scenes/Profile/services/accountProfileSlice/api.js","areas/Account/scenes/Profile/services/accountProfileSlice/index.js","areas/Account/scenes/Profile/services/accountProfileSlice/selectors.js","components/ArtCard/index.js","areas/Account/scenes/Profile/index.js","components/Paginator/components/pages.js","components/Paginator/components/MinimalPagination/index.js","components/Paginator/components/CollapsedPagination/index.js","components/Paginator/components/ExpandedPagination/index.js","components/Paginator/index.js","components/ArtBrowser/index.js","components/ArtBrowser/services/grid.js","areas/Art/scenes/Browse/services/artBrowseSlice/api.js","areas/Art/scenes/Browse/services/artBrowseSlice/selectors.js","areas/Art/scenes/Browse/services/artBrowseSlice/index.js","areas/Art/scenes/Browse/index.js","areas/Art/scenes/Browse/services/getTotalPages.js","areas/Art/scenes/Create/services/artSchema.js","areas/Art/scenes/Create/services/artCreateSlice/api.js","areas/Art/scenes/Create/services/artCreateSlice/index.js","areas/Art/scenes/Create/services/artCreateSlice/selectors.js","areas/Art/scenes/Create/index.js","areas/Art/scenes/Open/services/artOpenSlice/api.js","areas/Art/scenes/Open/services/artOpenSlice/index.js","areas/Art/scenes/Open/services/artOpenSlice/selectors.js","areas/Art/scenes/Open/index.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/api.js","areas/Authentication/services/userSchema.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/index.js","areas/Authentication/scenes/Login/services/authenticationLoginSlice/selectors.js","services/constants.js","areas/Authentication/scenes/Login/index.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/api.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/index.js","areas/Authentication/scenes/Register/services/authenticationRegisterSlice/selectors.js","areas/Authentication/scenes/Register/index.js","components/Main/index.js","areas/Account/index.js","areas/Art/index.js","areas/Authentication/index.js","components/Footer/index.js","App.js","areas/Art/services/artReducer.js","areas/Authentication/services/authenticationReducer.js","areas/Account/services/accountReducer.js","services/redux/store.js","index.js"],"names":["selectAuthenticated","state","authenticated","selectIsAuthenticated","isAuthenticated","selectUser","user","selectUserId","_id","selectUsername","username","useSelector","userId","className","Navbar","variant","Brand","Nav","style","flex","Link","to","selectLoader","loader","selectLoadResourcesRequestStatus","loadResourcesRequestStatus","getAuthenticatedApi","a","fetch","response","json","data","getAuthenticated","createAsyncThunk","_","rejectWithValue","success","payload","authenticatedSlice","createSlice","name","initialState","getAuthenticatedRequestStatus","reducers","resetAuthentication","action","extraReducers","builder","addCase","pending","rejected","fulfilled","actions","loadResources","getState","dispatch","hasLoaded","Promise","all","some","element","Boolean","error","loaderSlice","setHasLoaded","initiateLoadingRequest","loadingRequestStatus","Idle","idleComponent","Pending","pendingComponent","Rejected","rejectedComponent","Fulfilled","fulfilledComponent","Card","Body","Button","disabled","onClick","Resource","PendingCard","RejectedCard","URLSearchParams","useLocation","search","children","rest","location","query","useQuery","set","pathname","exact","toString","getLogoutApi","getLogout","getLogoutRequestStatus","accountDashboardSlice","reset","selectGetLogoutRequestStatus","account","dashboard","selectDashboard","text","buttonVariant","idleText","idleButtonVariant","redirectLink","PostButton","LoadingButton","RetryButton","useDispatch","useEffect","textAlign","PostRequestButton","getProfileApi","getProfile","profileData","getProfileRequestStatus","accountProfileSlice","selectProfile","profile","selectProfileData","selectTotalArtsCreated","totalArtsCreated","selectRecentSimplifiedArts","recentSimplifiedArts","selectGetProfileRequestStatus","props","history","useHistory","simplifiedArt","title","description","Footer","push","useParams","GetRequestCard","Container","Row","map","simplifiedArtIndex","Col","md","ArtCard","getPagesToGenerate","totalPages","currentPage","pageChangeCallback","pagesToGenerate","counter","generatePages","index","Pagination","Item","active","generateMinimalPages","MinimalPagination","generatePrevPagination","newPageValue","Prev","generateCollapsedPages","generateNextPagination","Next","CollapsedPagination","generateFirstPagination","First","generateLeftEllipse","shouldGenerateLeftEllipsis","Ellipsis","pageValue","getLeftEllipsisPageValue","generateExpandedPages","shift","pop","generateRightEllipse","shouldGenerateRightEllipsis","getRightEllipsisPageValue","generateLastPagination","Last","ExpandedPagination","cardsPerRow","totalRows","simplifiedArts","rows","rowsData","rowIndex","startingCardIndex","cardIndex","cardData","getRowsFromSimplifiedArts","row","getArtCountApi","urlSearchParams","getSimplifiedArtsApi","pageOffset","pageSize","selectBrowse","art","browse","selectArtCount","artCount","selectSimplifiedArts","selectLoadingRequestStatus","getArtCountRequestStatus","selectGetArtCountRequestStatus","getSimplifiedArtsRequestStatus","selectGetSimplifiedArtsRequestStatus","selectCurrentPage","getArtCount","getSimplifiedArts","queriedPage","artBrowseSlice","setCurrentPage","artsPerPage","Math","ceil","getTotalPages","parsedQueriedPage","parseInt","get","isNaN","queriedUserId","loadingRequestPromise","abort","fluid","ArtBrowser","Paginator","newPage","Joi","object","string","trim","min","max","required","content","postCreateArtApi","method","headers","body","JSON","stringify","postCreateArt","validationResult","artSchema","validate","abortEarly","validationErrors","details","message","path","setValidationErrors","unauthenticated","responseArt","postCreateArtRequestStatus","artCreateSlice","resetArt","setTitle","setDescription","setContent","selectCreate","create","selectArt","selectTitle","selectDescription","selectContent","selectResponseArtId","selectResponseArt","selectPostCreateArtRequestStatus","selectTitleError","filter","length","selectDescriptionError","selectContentError","responseArtId","titleError","descriptionError","contentError","Form","Group","controlId","Label","Control","type","placeholder","value","isInvalid","onChange","event","target","Feedback","autoComplete","as","getArtApi","artId","getDeleteArtApi","getArt","getDeleteArt","getArtRequestStatus","getDeleteArtRequestStatus","artOpenSlice","selectOpen","open","selectCreatorId","creatorId","selectGetArtRequestStatus","selectGetDeleteArtRequestStatus","queriedArtId","isCreator","initiateDeleteRequest","deleteRequestStatus","whiteSpace","fontFamily","navigator","clipboard","writeText","postLoginUserApi","userAndRecaptchaToken","userSchema","alphanum","password","recaptchaToken","postLoginUser","postLoginUserRequestStatus","authenticationLoginSlice","setUsername","setPassword","setRecaptchaToken","setPostLoginUserRequestStatus","selectLogin","authentication","login","selectPassword","selectRecaptchaToken","selectPostLoginUserRequestStatus","selectUsernameError","selectPasswordError","SITE_KEY","redirectValue","isRedirect","delete","usernameError","passwordError","sitekey","tokenValue","postRegisterUserApi","postRegisterUser","postRegisterUserRequestStatus","authenticationRegisterSlice","selectRegister","register","selectPostRegisterUserRequestStatus","ProtectedRoute","Dashboard","Profile","Browse","Create","Open","Login","Register","href","minHeight","Header","Main","artReducer","combineReducers","createReducer","browseReducer","openReducer","authenticationReducer","registerReducer","loginReducer","accountReducer","dashboardReducer","profileReducer","configureStore","reducer","loaderReducer","ReactDOM","render","StrictMode","store","App","document","getElementById"],"mappings":"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","file":"static/js/main.c4646e9c.chunk.js","sourcesContent":["export const selectAuthenticated = (state) => state.authenticated;\r\n\r\nexport const selectIsAuthenticated = (state) =>\r\n  selectAuthenticated(state).isAuthenticated;\r\n\r\nexport const selectUser = (state) => selectAuthenticated(state).user;\r\n\r\nexport const selectUserId = (state) => selectUser(state)?._id;\r\n\r\nexport const selectUsername = (state) => selectUser(state)?.username;\r\n\r\nexport const selectUserPermission = (state) => selectUser(state)?.permission;\r\n\r\nexport const selectGetAuthenticatedRequestStatus = (state) =>\r\n  selectAuthenticated(state).getAuthenticatedRequestStatus;\r\n","import { useSelector } from \"react-redux\";\r\nimport {\r\n  selectIsAuthenticated,\r\n  selectUserId,\r\n} from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nexport default function () {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n\r\n  return (\r\n    <div className=\"header pbc\">\r\n      <Navbar variant=\"dark\">\r\n        <Navbar.Brand>ASCII-CRAFT</Navbar.Brand>\r\n        <Nav style={{ flex: 1 }}>\r\n          <Nav.Link>Home</Nav.Link>\r\n          <LinkContainer to=\"/art/browse\">\r\n            <Nav.Link>Browse</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/art/create\">\r\n            <Nav.Link>Create</Nav.Link>\r\n          </LinkContainer>\r\n\r\n          {isAuthenticated ? (\r\n            <>\r\n              <LinkContainer to={`/account/profile/${userId}`}>\r\n                <Nav.Link>Profile</Nav.Link>\r\n              </LinkContainer>\r\n\r\n              <LinkContainer to=\"/account/dashboard\">\r\n                <Nav.Link className=\"ml-auto\">Account</Nav.Link>\r\n              </LinkContainer>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <LinkContainer to=\"/authentication/login\">\r\n                <Nav.Link className=\"ml-auto\">Login</Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to=\"/authentication/register\">\r\n                <Nav.Link>Register</Nav.Link>\r\n              </LinkContainer>\r\n            </>\r\n          )}\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","export const selectLoader = (state) => state.loader;\r\n\r\nexport const selectHasLoaded = (state) => selectLoader(state).hasLoaded;\r\n\r\nexport const selectLoadResourcesRequestStatus = (state) =>\r\n  selectLoader(state).loadResourcesRequestStatus;\r\n","export async function getAuthenticatedApi() {\r\n  const response = await fetch(\"/api/authentication/authenticated\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getAuthenticatedApi } from \"./api.js\";\r\n\r\nexport const getAuthenticated = createAsyncThunk(\r\n  \"authenticated/getAuthenticated\",\r\n  async (_, { rejectWithValue }) => {\r\n    const data = await getAuthenticatedApi();\r\n\r\n    if (data.success) {\r\n      return data.payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  getAuthenticatedRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticatedSlice = createSlice({\r\n  name: \"authenticated\",\r\n  initialState,\r\n  reducers: {\r\n    resetAuthentication: (state, action) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getAuthenticated.pending, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getAuthenticated.rejected, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getAuthenticated.fulfilled, (state, action) => {\r\n        state.getAuthenticatedRequestStatus = \"fulfilled\";\r\n\r\n        const { authenticated, user } = action.payload;\r\n        state.isAuthenticated = authenticated;\r\n        state.user = user;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetAuthentication } = authenticatedSlice.actions;\r\n\r\nexport default authenticatedSlice.reducer;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { selectHasLoaded } from \"./selectors.js\";\r\n\r\nimport { getAuthenticated } from \"../authenticatedSlice\";\r\n\r\nexport const loadResources = createAsyncThunk(\r\n  \"loader/loadResources\",\r\n  async (_, { getState, dispatch, rejectWithValue }) => {\r\n    if (!selectHasLoaded(getState())) {\r\n      const result = await Promise.all([dispatch(getAuthenticated())]);\r\n      if (result.some((element) => Boolean(element.error)))\r\n        return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  hasLoaded: false,\r\n  loadResourcesRequestStatus: \"idle\",\r\n};\r\n\r\nconst loaderSlice = createSlice({\r\n  name: \"loader\",\r\n  initialState,\r\n  reducers: {\r\n    setHasLoaded: (state, action) => {\r\n      state.hasLoaded = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loadResources.pending, (state, action) => {\r\n        state.loadResourcesRequestStatus = \"pending\";\r\n      })\r\n      .addCase(loadResources.rejected, (state, action) => {\r\n        state.loadResourcesRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(loadResources.fulfilled, (state, action) => {\r\n        state.loadResourcesRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport default loaderSlice.reducer;\r\n","export default function ({\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleComponent: Idle,\r\n  pendingComponent: Pending,\r\n  rejectedComponent: Rejected,\r\n  fulfilledComponent: Fulfilled,\r\n}) {\r\n  return loadingRequestStatus === \"idle\" ? (\r\n    <Idle initiateLoadingRequest={initiateLoadingRequest} />\r\n  ) : loadingRequestStatus === \"pending\" ? (\r\n    <Pending />\r\n  ) : loadingRequestStatus === \"rejected\" ? (\r\n    <Rejected initiateLoadingRequest={initiateLoadingRequest} />\r\n  ) : loadingRequestStatus === \"fulfilled\" ? (\r\n    <Fulfilled />\r\n  ) : (\r\n    \"Default\"\r\n  );\r\n}\r\n","import { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function () {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <h5>Please Wait</h5>\r\n        <hr />\r\n        We are loading some resources\r\n        <br />\r\n        <Button className=\"w-100 mt-3\" variant=\"secondary\" disabled>\r\n          Loading...\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function ({ initiateLoadingRequest }) {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <h5>Uh Oh</h5>\r\n        <hr />\r\n        We were unable to load some resources\r\n        <br />\r\n        <Button\r\n          className=\"w-100 mt-3\"\r\n          variant=\"danger\"\r\n          onClick={initiateLoadingRequest}\r\n        >\r\n          Retry\r\n        </Button>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import Resource from \"../Resource\";\r\nimport PendingCard from \"./components/PendingCard\";\r\nimport RejectedCard from \"./components/RejectedCard\";\r\n\r\nexport default function ({\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  fulfilledComponent,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={PendingCard}\r\n      pendingComponent={PendingCard}\r\n      rejectedComponent={RejectedCard}\r\n      fulfilledComponent={fulfilledComponent}\r\n    />\r\n  );\r\n}\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport default function () {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport useQuery from \"../../services/hooks/useQuery.js\";\r\n\r\nimport { selectIsAuthenticated } from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\n\r\nexport default function ({ children, ...rest }) {\r\n  const location = useLocation();\r\n  const query = useQuery();\r\n  query.set(\"redirect\", location.pathname);\r\n\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  return (\r\n    <Route {...rest}>\r\n      {isAuthenticated ? (\r\n        children\r\n      ) : (\r\n        <Redirect exact to={\"/authentication/login?\" + query.toString()} />\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","export async function getLogoutApi() {\r\n  const response = await fetch(\"/api/authentication/logout\");\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getLogoutApi } from \"./api.js\";\r\n\r\nimport { resetAuthentication } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const getLogout = createAsyncThunk(\r\n  \"dashboard/getLogout\",\r\n  async (_, { dispatch, rejectWithValue }) => {\r\n    const data = await getLogoutApi();\r\n\r\n    if (data.success) {\r\n      dispatch(resetAuthentication());\r\n      return true;\r\n    } else {\r\n      rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  getLogoutRequestStatus: \"idle\",\r\n};\r\n\r\nconst accountDashboardSlice = createSlice({\r\n  name: \"dashboard\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getLogout.pending, (state, action) => {\r\n        state.getLogoutRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getLogout.rejected, (state, action) => {\r\n        state.getLogoutRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getLogout.fulfilled, (state, action) => {\r\n        state.getLogoutRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = accountDashboardSlice.actions;\r\n\r\nexport default accountDashboardSlice.reducer;\r\n","export const selectDashboard = (state) => state.account.dashboard;\r\n\r\nexport const selectGetLogoutRequestStatus = (state) =>\r\n  selectDashboard(state).getLogoutRequestStatus;\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nexport default function ({\r\n  className,\r\n  initiateLoadingRequest,\r\n  text,\r\n  buttonVariant,\r\n}) {\r\n  return (\r\n    <Button\r\n      className={className}\r\n      variant={buttonVariant}\r\n      onClick={initiateLoadingRequest}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nexport default function ({ className }) {\r\n  return (\r\n    <Button className={className} variant=\"secondary\" disabled>\r\n      Loading...\r\n    </Button>\r\n  );\r\n}\r\n","import { Button } from \"react-bootstrap\";\r\n\r\nexport default function ({ className, initiateLoadingRequest }) {\r\n  return (\r\n    <Button\r\n      className={className}\r\n      variant=\"danger\"\r\n      onClick={initiateLoadingRequest}\r\n    >\r\n      Retry\r\n    </Button>\r\n  );\r\n}\r\n","import { Redirect } from \"react-router-dom\";\r\nimport Resource from \"../Resource\";\r\n\r\nimport PostButton from \"./components/PostButton\";\r\nimport LoadingButton from \"./components/LoadingButton\";\r\nimport RetryButton from \"./components/RetryButton\";\r\n\r\nexport default function ({\r\n  className,\r\n  initiateLoadingRequest,\r\n  loadingRequestStatus,\r\n  idleText,\r\n  idleButtonVariant = \"success\",\r\n  redirectLink,\r\n}) {\r\n  return (\r\n    <Resource\r\n      initiateLoadingRequest={initiateLoadingRequest}\r\n      loadingRequestStatus={loadingRequestStatus}\r\n      idleComponent={() => (\r\n        <PostButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          text={idleText}\r\n          buttonVariant={idleButtonVariant}\r\n        />\r\n      )}\r\n      pendingComponent={() => <LoadingButton className={className} />}\r\n      rejectedComponent={() => (\r\n        <RetryButton\r\n          className={className}\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n        />\r\n      )}\r\n      fulfilledComponent={() => <Redirect exact to={redirectLink} />}\r\n    />\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getLogout, reset } from \"./services/accountDashboardSlice\";\r\nimport { selectGetLogoutRequestStatus } from \"./services/accountDashboardSlice/selectors.js\";\r\n\r\nimport { selectUsername } from \"../../../../services/authenticatedSlice/selectors\";\r\n\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n\r\n  const username = useSelector(selectUsername);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getLogout());\r\n  const loadingRequestStatus = useSelector(selectGetLogoutRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"account-dashboard d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Welcome {username}!</h2>\r\n        <hr />\r\n\r\n        <PostRequestButton\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          idleText=\"Logout\"\r\n          redirectLink=\"/authentication/login\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getProfileApi(userId) {\r\n  const response = await fetch(`/api/account/profile/${userId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getProfileApi } from \"./api\";\r\n\r\nexport const getProfile = createAsyncThunk(\r\n  \"profile/getProfile\",\r\n  async (userId, { rejectWithValue }) => {\r\n    const { success, payload } = await getProfileApi(userId);\r\n\r\n    if (success) {\r\n      return payload;\r\n    } else {\r\n      return rejectWithValue();\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  profileData: {},\r\n  getProfileRequestStatus: \"idle\",\r\n};\r\n\r\nconst accountProfileSlice = createSlice({\r\n  name: \"profile\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getProfile.pending, (state, action) => {\r\n        state.getProfileRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getProfile.rejected, (state, action) => {\r\n        state.getProfileRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getProfile.fulfilled, (state, action) => {\r\n        state.getProfileRequestStatus = \"fulfilled\";\r\n        state.profileData = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = accountProfileSlice.actions;\r\n\r\nexport default accountProfileSlice.reducer;\r\n","export const selectProfile = (state) => state.account.profile;\r\n\r\nexport const selectProfileData = (state) => selectProfile(state).profileData;\r\n\r\nexport const selectId = (state) => selectProfileData(state)._id;\r\n\r\nexport const selectUsername = (state) => selectProfileData(state).username;\r\n\r\nexport const selectTotalArtsCreated = (state) =>\r\n  selectProfileData(state).totalArtsCreated;\r\n\r\nexport const selectRecentSimplifiedArts = (state) =>\r\n  selectProfileData(state).recentSimplifiedArts;\r\n\r\nexport const selectRecentSimplifiedArtByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArts(state)[index];\r\n\r\nexport const selectRecentSimplifiedArtIdByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArtByIndex(index)(state)._id;\r\n\r\nexport const selectRecentSimplifiedArtTitleByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArtByIndex(index)(state).title;\r\n\r\nexport const selectRecentSimplifiedArtDescriptionByIndex = (index) => (state) =>\r\n  selectRecentSimplifiedArtByIndex(index)(state).description;\r\n\r\nexport const selectGetProfileRequestStatus = (state) =>\r\n  selectProfile(state).getProfileRequestStatus;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport useQuery from \"../../services/hooks/useQuery.js\";\r\n\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nexport default function (props) {\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n\r\n  const { simplifiedArt } = props;\r\n  const { _id, title, description } = simplifiedArt;\r\n\r\n  return (\r\n    <Card className=\"h-100\">\r\n      <Card.Body style={{ textAlign: \"center\" }}>\r\n        <h5>{title}</h5>\r\n        <hr />\r\n        {description}\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <Button\r\n          className=\"w-100\"\r\n          variant=\"success\"\r\n          onClick={() => history.push(`/art/open/${_id}?${query.toString()}`)}\r\n        >\r\n          Open\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport { getProfile, reset } from \"./services/accountProfileSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectRecentSimplifiedArts,\r\n  selectTotalArtsCreated,\r\n  selectGetProfileRequestStatus,\r\n} from \"./services/accountProfileSlice/selectors.js\";\r\n\r\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport ArtCard from \"../../../../components/ArtCard\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n  const { userId } = useParams();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const recentSimplifiedArts = useSelector(selectRecentSimplifiedArts);\r\n  const totalArtsCreated = useSelector(selectTotalArtsCreated);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getProfile(userId));\r\n  const loadingRequestStatus = useSelector(selectGetProfileRequestStatus);\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div className=\"account-profile d-flex flex-column\" style={{ flex: 1 }}>\r\n      <GetRequestCard\r\n        initiateLoadingRequest={initiateLoadingRequest}\r\n        loadingRequestStatus={loadingRequestStatus}\r\n        fulfilledComponent={() => (\r\n          <div>\r\n            <h2 style={{ textAlign: \"center\" }}>{username}</h2>\r\n            <hr />\r\n\r\n            <h2>Creations</h2>\r\n            <Card>\r\n              <Card.Body>\r\n                <Container>\r\n                  <Row>\r\n                    {totalArtsCreated > 0 ? (\r\n                      recentSimplifiedArts.map(\r\n                        (simplifiedArt, simplifiedArtIndex) => (\r\n                          <Col key={simplifiedArtIndex} md={4}>\r\n                            <ArtCard simplifiedArt={simplifiedArt} />\r\n                          </Col>\r\n                        )\r\n                      )\r\n                    ) : (\r\n                      <Col>\r\n                        <h2\r\n                          className=\"text-muted\"\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          Uh oh... There are no arts\r\n                        </h2>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </Container>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            {totalArtsCreated > 0 &&\r\n              (totalArtsCreated <= 3 ? (\r\n                <div className=\"d-flex mt-2\">\r\n                  Total Arts: {totalArtsCreated}\r\n                </div>\r\n              ) : (\r\n                <div className=\"d-flex mt-2\">\r\n                  Total Arts: {totalArtsCreated}\r\n                  <Button\r\n                    className=\"ml-auto\"\r\n                    variant=\"success\"\r\n                    onClick={() => {\r\n                      query.set(\"userId\", userId);\r\n                      history.push(`/art/browse?${query.toString()}`);\r\n                    }}\r\n                  >\r\n                    Browse All\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { Pagination } from \"react-bootstrap\";\r\n\r\nexport const getPagesToGenerate = (\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback\r\n) => {\r\n  let pagesToGenerate = [];\r\n  if (totalPages <= 5) {\r\n    for (let counter = 1; counter < totalPages + 1; counter++) {\r\n      pagesToGenerate.push(counter);\r\n    }\r\n  } else {\r\n    for (let counter = currentPage - 2; counter < currentPage + 3; counter++) {\r\n      if (counter > 0 && counter <= totalPages) {\r\n        pagesToGenerate.push(counter);\r\n      }\r\n    }\r\n  }\r\n  return pagesToGenerate;\r\n};\r\n\r\nexport const generatePages = (\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n  pagesToGenerate\r\n) => {\r\n  return pagesToGenerate.map((index) => (\r\n    <Pagination.Item\r\n      key={index}\r\n      active={index == currentPage}\r\n      onClick={() => pageChangeCallback(index)}\r\n    >\r\n      {index}\r\n    </Pagination.Item>\r\n  ));\r\n};\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction generateMinimalPages({ totalPages, currentPage, pageChangeCallback }) {\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    getPagesToGenerate(totalPages, currentPage, pageChangeCallback)\r\n  );\r\n}\r\n\r\nexport default function MinimalPagination(props) {\r\n  return <Pagination>{generateMinimalPages(props)}</Pagination>;\r\n}\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction generatePrevPagination({ currentPage, pageChangeCallback }) {\r\n  let newPageValue = currentPage - 1;\r\n  if (newPageValue <= 1) {\r\n    newPageValue = 1;\r\n  }\r\n  return <Pagination.Prev onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateCollapsedPages({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    getPagesToGenerate(totalPages, currentPage, pageChangeCallback)\r\n  );\r\n}\r\n\r\nfunction generateNextPagination(props) {\r\n  const { totalPages, currentPage, pageChangeCallback } = props;\r\n\r\n  let newPageValue = currentPage + 1;\r\n  if (newPageValue >= totalPages) {\r\n    newPageValue = totalPages;\r\n  }\r\n  return <Pagination.Next onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nexport default function CollapsedPagination(props) {\r\n  return (\r\n    <Pagination>\r\n      {generatePrevPagination(props)}\r\n      {generateCollapsedPages(props)}\r\n      {generateNextPagination(props)}\r\n    </Pagination>\r\n  );\r\n}\r\n","import { getPagesToGenerate, generatePages } from \"../pages.js\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nfunction shouldGenerateLeftEllipsis(totalPages, currentPage) {\r\n  return currentPage > 3;\r\n}\r\n\r\nfunction shouldGenerateRightEllipsis(totalPages, currentPage) {\r\n  return currentPage < totalPages - 2;\r\n}\r\n\r\nfunction getLeftEllipsisPageValue(totalPages, currentPage) {\r\n  const pageValue = currentPage - 4;\r\n  if (pageValue <= 1) {\r\n    return 1;\r\n  } else {\r\n    return pageValue;\r\n  }\r\n}\r\n\r\nfunction getRightEllipsisPageValue(totalPages, currentPage) {\r\n  const pageValue = currentPage + 4;\r\n  if (pageValue >= totalPages) {\r\n    return totalPages;\r\n  } else {\r\n    return pageValue;\r\n  }\r\n}\r\n\r\nfunction generateFirstPagination({ pageChangeCallback }) {\r\n  return <Pagination.First onClick={() => pageChangeCallback(1)} />;\r\n}\r\n\r\nfunction generatePrevPagination({ currentPage, pageChangeCallback }) {\r\n  let newPageValue = currentPage - 1;\r\n  if (newPageValue <= 1) {\r\n    newPageValue = 1;\r\n  }\r\n  return <Pagination.Prev onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateLeftEllipse({ totalPages, currentPage, pageChangeCallback }) {\r\n  return (\r\n    shouldGenerateLeftEllipsis(totalPages, currentPage) && (\r\n      <Pagination.Ellipsis\r\n        onClick={() =>\r\n          pageChangeCallback(getLeftEllipsisPageValue(totalPages, currentPage))\r\n        }\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nfunction generateExpandedPages({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  let pagesToGenerate = getPagesToGenerate(totalPages, currentPage);\r\n  pagesToGenerate.shift();\r\n  pagesToGenerate.pop();\r\n  return generatePages(\r\n    totalPages,\r\n    currentPage,\r\n    pageChangeCallback,\r\n    pagesToGenerate\r\n  );\r\n}\r\n\r\nfunction generateRightEllipse({ totalPages, currentPage, pageChangeCallback }) {\r\n  return (\r\n    shouldGenerateRightEllipsis(totalPages, currentPage) && (\r\n      <Pagination.Ellipsis\r\n        onClick={() =>\r\n          pageChangeCallback(getRightEllipsisPageValue(totalPages, currentPage))\r\n        }\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nfunction generateNextPagination({\r\n  totalPages,\r\n  currentPage,\r\n  pageChangeCallback,\r\n}) {\r\n  let newPageValue = currentPage + 1;\r\n  if (newPageValue >= totalPages) {\r\n    newPageValue = totalPages;\r\n  }\r\n  return <Pagination.Next onClick={() => pageChangeCallback(newPageValue)} />;\r\n}\r\n\r\nfunction generateLastPagination({ totalPages, pageChangeCallback }) {\r\n  return <Pagination.Last onClick={() => pageChangeCallback(totalPages)} />;\r\n}\r\n\r\nexport default function ExpandedPagination(props) {\r\n  const { totalPages, currentPage, pageChangeCallback } = props;\r\n\r\n  return (\r\n    <Pagination>\r\n      {generateFirstPagination(props)}\r\n      {generatePrevPagination(props)}\r\n      <Pagination.Item\r\n        active={1 === currentPage}\r\n        onClick={() => pageChangeCallback(1)}\r\n      >\r\n        1\r\n      </Pagination.Item>\r\n      {generateLeftEllipse(props)}\r\n      {generateExpandedPages(props)}\r\n      {generateRightEllipse(props)}\r\n      <Pagination.Item\r\n        active={totalPages === currentPage}\r\n        onClick={() => pageChangeCallback(totalPages)}\r\n      >\r\n        {totalPages}\r\n      </Pagination.Item>\r\n      {generateNextPagination(props)}\r\n      {generateLastPagination(props)}\r\n    </Pagination>\r\n  );\r\n}\r\n","import MinimalPagination from \"./components/MinimalPagination\";\r\nimport CollapsedPagination from \"./components/CollapsedPagination\";\r\nimport ExpandedPagination from \"./components/ExpandedPagination\";\r\n\r\nexport default function ({\r\n  className,\r\n  currentPage,\r\n  totalPages,\r\n  pageChangeCallback,\r\n}) {\r\n  return (\r\n    <div className={\"paginator d-flex justify-content-center \" + className}>\r\n      {totalPages <= 3 ? (\r\n        <MinimalPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      ) : totalPages <= 5 ? (\r\n        <CollapsedPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      ) : (\r\n        <ExpandedPagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={pageChangeCallback}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { getRowsFromSimplifiedArts } from \"./services/grid.js\";\r\n\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport ArtCard from \"../ArtCard\";\r\n\r\nexport default function ({\r\n  className,\r\n  cardsPerRow,\r\n  totalRows,\r\n  simplifiedArts,\r\n}) {\r\n  const rows = getRowsFromSimplifiedArts(\r\n    cardsPerRow,\r\n    totalRows,\r\n    simplifiedArts\r\n  );\r\n\r\n  return (\r\n    <div className={\"art-browser \" + className}>\r\n      {rows.map((row, rowIndex) => (\r\n        <Row key={rowIndex}>\r\n          {row.map((simplifiedArt, simplifiedArtIndex) => (\r\n            <Col\r\n              className=\"my-2\"\r\n              md={12 / cardsPerRow}\r\n              key={simplifiedArtIndex}\r\n            >\r\n              <ArtCard simplifiedArt={simplifiedArt} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","export function getRowsFromSimplifiedArts(\r\n  cardsPerRow,\r\n  totalRows,\r\n  simplifiedArts\r\n) {\r\n  let rowsData = [];\r\n  for (let rowIndex = 0; rowIndex < totalRows; rowIndex++) {\r\n    rowsData[rowIndex] = [];\r\n    let rowStartingCardIndex = rowIndex * cardsPerRow;\r\n    let startingCardIndex = rowStartingCardIndex;\r\n    for (\r\n      let cardIndex = startingCardIndex;\r\n      cardIndex < startingCardIndex + cardsPerRow;\r\n      cardIndex++\r\n    ) {\r\n      let cardData = simplifiedArts[cardIndex];\r\n      if (cardData) rowsData[rowIndex].push(cardData);\r\n    }\r\n  }\r\n  return rowsData;\r\n}\r\n","export async function getArtCountApi(userId) {\r\n  const urlSearchParams = new URLSearchParams();\r\n  if (Boolean(userId)) urlSearchParams.set(\"userId\", userId);\r\n\r\n  const response = await fetch(\r\n    `/api/art/browse/artCount?${urlSearchParams.toString()}`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getSimplifiedArtsApi(pageOffset, pageSize, userId) {\r\n  const urlSearchParams = new URLSearchParams();\r\n  if (Boolean(userId)) urlSearchParams.set(\"userId\", userId);\r\n\r\n  const response = await fetch(\r\n    `/api/art/browse/simplifiedArts/${pageOffset}/${pageSize}?${urlSearchParams.toString()}`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","export const selectBrowse = (state) => state.art.browse;\r\n\r\nexport const selectArtCount = (state) => selectBrowse(state).artCount;\r\n\r\nexport const selectGetArtCountRequestStatus = (state) =>\r\n  selectBrowse(state).getArtCountRequestStatus;\r\n\r\nexport const selectSimplifiedArts = (state) =>\r\n  selectBrowse(state).simplifiedArts;\r\n\r\nexport const selectSimplifiedArtByIndex = (index) => (state) =>\r\n  selectSimplifiedArts(state)[index];\r\n\r\nexport const selectSimplifiedArtIdByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state)._id;\r\n\r\nexport const selectSimplifiedArtTitleByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state).title;\r\n\r\nexport const selectSimplifiedArtDescriptionByIndex = (index) => (state) =>\r\n  selectSimplifiedArtByIndex(index)(state).description;\r\n\r\nexport const selectGetSimplifiedArtsRequestStatus = (state) =>\r\n  selectBrowse(state).getSimplifiedArtsRequestStatus;\r\n\r\nexport const selectLoadingRequestStatus = (state) => {\r\n  const getArtCountRequestStatus = selectGetArtCountRequestStatus(state);\r\n  const getSimplifiedArtsRequestStatus =\r\n    selectGetSimplifiedArtsRequestStatus(state);\r\n  return getArtCountRequestStatus === \"rejected\" ||\r\n    getSimplifiedArtsRequestStatus === \"rejected\"\r\n    ? \"rejected\"\r\n    : getArtCountRequestStatus === \"fulfilled\" &&\r\n      getSimplifiedArtsRequestStatus === \"fulfilled\"\r\n    ? \"fulfilled\"\r\n    : \"pending\";\r\n};\r\n\r\nexport const selectCurrentPage = (state) => selectBrowse(state).currentPage;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getArtCountApi, getSimplifiedArtsApi } from \"./api.js\";\r\nimport { selectArtCount, selectCurrentPage } from \"./selectors.js\";\r\n\r\nexport const getArtCount = createAsyncThunk(\r\n  \"browse/getArtCount\",\r\n  async (userId, { rejectWithValue }) => {\r\n    const { success, payload } = await getArtCountApi(userId);\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getSimplifiedArts = createAsyncThunk(\r\n  \"browse/getSimplifiedArts\",\r\n  async ({ pageOffset, pageSize, userId }, { rejectWithValue }) => {\r\n    const { success, payload } = await getSimplifiedArtsApi(\r\n      pageOffset,\r\n      pageSize,\r\n      userId\r\n    );\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const loadResources = createAsyncThunk(\r\n  \"browse/loadResources\",\r\n  async (\r\n    { pageOffset, pageSize, queriedPage, userId },\r\n    { getState, dispatch }\r\n  ) => {\r\n    const hasLoadedArtCount = selectArtCount(getState()) !== -1;\r\n    if (!hasLoadedArtCount) await dispatch(getArtCount(userId));\r\n\r\n    const isPageConflict = selectCurrentPage(getState()) !== queriedPage;\r\n    if (!isPageConflict)\r\n      await dispatch(getSimplifiedArts({ pageOffset, pageSize, userId }));\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  artCount: -1,\r\n  getArtCountRequestStatus: \"idle\",\r\n  simplifiedArts: [],\r\n  getSimplifiedArtsRequestStatus: \"idle\",\r\n  currentPage: 1,\r\n};\r\n\r\nconst artBrowseSlice = createSlice({\r\n  name: \"browse\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setCurrentPage: (state, action) => {\r\n      state.currentPage = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getArtCount.pending, (state, action) => {\r\n        state.getArtCountRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getArtCount.rejected, (state, action) => {\r\n        state.getArtCountRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getArtCount.fulfilled, (state, action) => {\r\n        state.getArtCountRequestStatus = \"fulfilled\";\r\n        state.artCount = action.payload;\r\n      })\r\n      .addCase(getSimplifiedArts.pending, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getSimplifiedArts.rejected, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getSimplifiedArts.fulfilled, (state, action) => {\r\n        state.getSimplifiedArtsRequestStatus = \"fulfilled\";\r\n        state.simplifiedArts = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset, setCurrentPage } = artBrowseSlice.actions;\r\n\r\nexport default artBrowseSlice.reducer;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport Paginator from \"../../../../components/Paginator\";\r\nimport ArtBrowser from \"../../../../components/ArtBrowser\";\r\n\r\nimport {\r\n  loadResources,\r\n  reset,\r\n  setCurrentPage,\r\n} from \"./services/artBrowseSlice\";\r\nimport {\r\n  selectArtCount,\r\n  selectCurrentPage,\r\n  selectSimplifiedArts,\r\n  selectLoadingRequestStatus,\r\n} from \"./services/artBrowseSlice/selectors.js\";\r\n\r\nimport getTotalPages from \"./services/getTotalPages.js\";\r\n\r\nconst cardsPerRow = 3;\r\nconst totalRows = 4;\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const artCount = useSelector(selectArtCount);\r\n  const currentPage = useSelector(selectCurrentPage);\r\n  const simplifiedArts = useSelector(selectSimplifiedArts);\r\n\r\n  const totalPages = getTotalPages(cardsPerRow, totalRows, artCount);\r\n\r\n  const parsedQueriedPage = parseInt(query.get(\"page\"));\r\n  const queriedPage =\r\n    isNaN(parsedQueriedPage) ||\r\n    parsedQueriedPage < 1 ||\r\n    parsedQueriedPage > totalPages\r\n      ? 1\r\n      : parsedQueriedPage;\r\n  const pageConflict = artCount === -1 ? false : queriedPage !== currentPage;\r\n\r\n  if (pageConflict) dispatch(setCurrentPage(queriedPage));\r\n\r\n  const queriedUserId = query.get(\"userId\");\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(\r\n      loadResources({\r\n        pageOffset: currentPage - 1,\r\n        pageSize: cardsPerRow * totalRows,\r\n        queriedPage,\r\n        userId: queriedUserId,\r\n      })\r\n    );\r\n\r\n  const loadingRequestStatus = useSelector(selectLoadingRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadingRequestPromise = initiateLoadingRequest();\r\n    return () => loadingRequestPromise.abort();\r\n  }, [currentPage, queriedUserId]);\r\n\r\n  return (\r\n    <div className=\"art-browse d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Art Browser</h2>\r\n        <hr />\r\n        <GetRequestCard\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          fulfilledComponent={() => (\r\n            <Container className=\"mb-2\" fluid>\r\n              <ArtBrowser\r\n                cardsPerRow={cardsPerRow}\r\n                totalRows={totalRows}\r\n                simplifiedArts={simplifiedArts}\r\n              />\r\n            </Container>\r\n          )}\r\n        />\r\n        <Paginator\r\n          className=\"mt-auto\"\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          pageChangeCallback={(newPage) => {\r\n            query.set(\"page\", newPage);\r\n            history.push(location.pathname + \"?\" + query.toString());\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function (cardsPerRow, totalRows, artCount) {\r\n  const artsPerPage = cardsPerRow * totalRows;\r\n  return Math.ceil(artCount / artsPerPage);\r\n}\r\n","import Joi from \"joi\";\r\n\r\nexport default Joi.object({\r\n  title: Joi.string().trim().min(1).max(30).required(),\r\n  description: Joi.string().trim().min(1).max(100).required(),\r\n  content: Joi.string().min(1).max(4000).required(),\r\n});\r\n","export async function postCreateArtApi(art) {\r\n  const response = await fetch(\"/api/art/create\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(art),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport artSchema from \"../artSchema.js\";\r\nimport { postCreateArtApi } from \"./api.js\";\r\nimport { resetAuthentication } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postCreateArt = createAsyncThunk(\r\n  \"create/postCreateArt\",\r\n  async (art, { dispatch, rejectWithValue }) => {\r\n    const validationResult = artSchema.validate(art, { abortEarly: false });\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postCreateArtApi(art);\r\n\r\n      if (data.success) {\r\n        return data.payload;\r\n      } else {\r\n        if (data.error.unauthenticated) {\r\n          dispatch(resetAuthentication());\r\n          return rejectWithValue(\"preventStateUpdates\");\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  art: {\r\n    title: \"\",\r\n    description: \"\",\r\n    content: \"\",\r\n  },\r\n  responseArt: null,\r\n  validationErrors: [],\r\n  postCreateArtRequestStatus: \"idle\",\r\n};\r\n\r\nexport const artCreateSlice = createSlice({\r\n  name: \"create\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    resetArt: (state, action) => {\r\n      state.art = { ...initialState.art };\r\n    },\r\n\r\n    setTitle: (state, action) => {\r\n      state.art.title = action.payload;\r\n    },\r\n\r\n    setDescription: (state, action) => {\r\n      state.art.description = action.payload;\r\n    },\r\n\r\n    setContent: (state, action) => {\r\n      state.art.content = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postCreateArt.pending, (state, action) => {\r\n        state.postCreateArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postCreateArt.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postCreateArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postCreateArt.fulfilled, (state, action) => {\r\n        state.responseArt = action.payload;\r\n        state.postCreateArtRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  resetArt,\r\n  setTitle,\r\n  setDescription,\r\n  setContent,\r\n  setValidationErrors,\r\n} = artCreateSlice.actions;\r\n\r\nexport default artCreateSlice.reducer;\r\n","export const selectCreate = (state) => state.art.create;\r\n\r\nexport const selectArt = (state) => selectCreate(state).art;\r\n\r\nexport const selectTitle = (state) => selectArt(state).title;\r\n\r\nexport const selectDescription = (state) => selectArt(state).description;\r\n\r\nexport const selectContent = (state) => selectArt(state).content;\r\n\r\nexport const selectResponseArt = (state) => selectCreate(state).responseArt;\r\n\r\nexport const selectResponseArtId = (state) => selectResponseArt(state)?._id;\r\n\r\nexport const selectPostCreateArtRequestStatus = (state) =>\r\n  selectCreate(state).postCreateArtRequestStatus;\r\n\r\nexport const selectTitleError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"title\"\r\n  )[0]?.message;\r\n\r\nexport const selectDescriptionError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"description\"\r\n  )[0]?.message;\r\n\r\nexport const selectContentError = (state) =>\r\n  selectCreate(state).validationErrors.filter(\r\n    ({ path }) => path.length == 1 && path[0] === \"content\"\r\n  )[0]?.message;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nimport {\r\n  reset,\r\n  resetArt,\r\n  setTitle,\r\n  setDescription,\r\n  setContent,\r\n  postCreateArt,\r\n} from \"./services/artCreateSlice\";\r\nimport {\r\n  selectArt,\r\n  selectTitle,\r\n  selectDescription,\r\n  selectContent,\r\n  selectResponseArtId,\r\n  selectPostCreateArtRequestStatus,\r\n  selectTitleError,\r\n  selectDescriptionError,\r\n  selectContentError,\r\n} from \"./services/artCreateSlice/selectors.js\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n\r\n  const art = useSelector(selectArt);\r\n  const title = useSelector(selectTitle);\r\n  const description = useSelector(selectDescription);\r\n  const content = useSelector(selectContent);\r\n  const postCreateArtRequestStatus = useSelector(\r\n    selectPostCreateArtRequestStatus\r\n  );\r\n  const responseArtId = useSelector(selectResponseArtId);\r\n\r\n  const titleError = useSelector(selectTitleError);\r\n  const descriptionError = useSelector(selectDescriptionError);\r\n  const contentError = useSelector(selectContentError);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"art-create d-flex flex-column\" style={{ flex: 1 }}>\r\n      <div>\r\n        <h2 className=\"mb-3\" style={{ textAlign: \"center\" }}>\r\n          Art Editor\r\n        </h2>\r\n        <hr />\r\n      </div>\r\n\r\n      <Form>\r\n        <Form.Group controlId=\"title\">\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            value={title}\r\n            isInvalid={Boolean(titleError)}\r\n            onChange={(event) => dispatch(setTitle(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {titleError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            value={description}\r\n            isInvalid={Boolean(descriptionError)}\r\n            onChange={(event) => dispatch(setDescription(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {descriptionError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"content\">\r\n          <Form.Label>Content</Form.Label>\r\n          <Form.Control\r\n            autoComplete=\"off\"\r\n            as=\"textarea\"\r\n            rows={3}\r\n            placeholder=\"Content\"\r\n            value={content}\r\n            isInvalid={Boolean(contentError)}\r\n            onChange={(event) => dispatch(setContent(event.target.value))}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {contentError}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n\r\n      <div className=\"my-4 d-flex\">\r\n        <Button variant=\"primary\" onClick={() => dispatch(resetArt())}>\r\n          New\r\n        </Button>\r\n\r\n        <PostRequestButton\r\n          className=\"ml-auto\"\r\n          initiateLoadingRequest={() => dispatch(postCreateArt(art))}\r\n          loadingRequestStatus={postCreateArtRequestStatus}\r\n          idleText=\"Create\"\r\n          redirectLink={`/art/open/${responseArtId}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function getArtApi(artId) {\r\n  const response = await fetch(`/api/art/open/art/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function getDeleteArtApi(artId) {\r\n  const response = await fetch(`/api/art/delete/${artId}`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getArtApi, getDeleteArtApi } from \"./api.js\";\r\n\r\nexport const getArt = createAsyncThunk(\r\n  \"open/getArt\",\r\n  async (artId, { rejectWithValue }) => {\r\n    const { success, payload } = await getArtApi(artId);\r\n\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nexport const getDeleteArt = createAsyncThunk(\r\n  \"open/getDeleteArt\",\r\n  async (artId, { rejectWithValue }) => {\r\n    const { success, payload } = await getDeleteArtApi(artId);\r\n\r\n    if (!success) {\r\n      return rejectWithValue();\r\n    } else {\r\n      return payload;\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  art: {},\r\n  getArtRequestStatus: \"idle\",\r\n  getDeleteArtRequestStatus: \"idle\",\r\n};\r\n\r\nconst artOpenSlice = createSlice({\r\n  name: \"open\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getArt.pending, (state, action) => {\r\n        state.getArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getArt.rejected, (state, action) => {\r\n        state.getArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getArt.fulfilled, (state, action) => {\r\n        state.getArtRequestStatus = \"fulfilled\";\r\n        state.art = action.payload;\r\n      })\r\n      .addCase(getDeleteArt.pending, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"pending\";\r\n      })\r\n      .addCase(getDeleteArt.rejected, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(getDeleteArt.fulfilled, (state, action) => {\r\n        state.getDeleteArtRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const { reset } = artOpenSlice.actions;\r\n\r\nexport default artOpenSlice.reducer;\r\n","export const selectOpen = (state) => state.art.open;\r\n\r\nexport const selectArt = (state) => selectOpen(state).art;\r\n\r\nexport const selectCreatorId = (state) => selectArt(state).creatorId;\r\n\r\nexport const selectTitle = (state) => selectArt(state).title;\r\n\r\nexport const selectDescription = (state) => selectArt(state).description;\r\n\r\nexport const selectContent = (state) => selectArt(state).content;\r\n\r\nexport const selectGetArtRequestStatus = (state) =>\r\n  selectOpen(state).getArtRequestStatus;\r\n\r\nexport const selectGetDeleteArtRequestStatus = (state) =>\r\n  selectOpen(state).getDeleteArtRequestStatus;\r\n","import GetRequestCard from \"../../../../components/GetRequestCard\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport { getArt, getDeleteArt, reset } from \"./services/artOpenSlice\";\r\nimport {\r\n  selectCreatorId,\r\n  selectTitle,\r\n  selectDescription,\r\n  selectContent,\r\n  selectGetArtRequestStatus,\r\n  selectGetDeleteArtRequestStatus,\r\n} from \"./services/artOpenSlice/selectors.js\";\r\n\r\nimport {\r\n  selectIsAuthenticated,\r\n  selectUserId,\r\n} from \"../../../../services/authenticatedSlice/selectors.js\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const query = useQuery();\r\n\r\n  const { artId: queriedArtId } = useParams();\r\n\r\n  const creatorId = useSelector(selectCreatorId);\r\n  const title = useSelector(selectTitle);\r\n  const description = useSelector(selectDescription);\r\n  const content = useSelector(selectContent);\r\n\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n  const userId = useSelector(selectUserId);\r\n  const isCreator = userId === creatorId;\r\n\r\n  const getArtRequestStatus = useSelector(selectGetArtRequestStatus);\r\n\r\n  const initiateLoadingRequest = () => dispatch(getArt(queriedArtId));\r\n  const loadingRequestStatus = getArtRequestStatus;\r\n\r\n  const initiateDeleteRequest = () => dispatch(getDeleteArt(queriedArtId));\r\n  const deleteRequestStatus = useSelector(selectGetDeleteArtRequestStatus);\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"art-open d-flex flex-column\" style={{ flex: 1 }}>\r\n      <GetRequestCard\r\n        initiateLoadingRequest={initiateLoadingRequest}\r\n        loadingRequestStatus={loadingRequestStatus}\r\n        fulfilledComponent={() => (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <h2>{title}</h2>\r\n            <hr />\r\n            {description}\r\n            <Card className=\"my-2\">\r\n              <Card.Body\r\n                style={{ whiteSpace: \"pre-line\", fontFamily: \"monospace\" }}\r\n              >\r\n                {content}\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <div className=\"my-4 d-flex\">\r\n              <Button\r\n                className=\"mr-2\"\r\n                variant=\"success\"\r\n                onClick={() =>\r\n                  history.push(\r\n                    `/account/profile/${creatorId}?${query.toString()}`\r\n                  )\r\n                }\r\n              >\r\n                Creator Profile\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => navigator.clipboard.writeText(content)}\r\n              >\r\n                Copy\r\n              </Button>\r\n\r\n              <div className=\"ml-auto\">\r\n                {isCreator && (\r\n                  <PostRequestButton\r\n                    className=\"mr-2\"\r\n                    idleText=\"Delete\"\r\n                    idleButtonVariant=\"danger\"\r\n                    initiateLoadingRequest={initiateDeleteRequest}\r\n                    loadingRequestStatus={deleteRequestStatus}\r\n                    redirectLink={`/art/browse?${query.toString()}`}\r\n                  />\r\n                )}\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => {\r\n                    history.push(`/art/browse?${query.toString()}`);\r\n                  }}\r\n                >\r\n                  Back To Browse\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export async function postLoginUserApi(userAndRecaptchaToken) {\r\n  const response = await fetch(\"/api/authentication/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userAndRecaptchaToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import Joi from \"joi\";\r\n\r\nconst userSchema = Joi.object({\r\n  username: Joi.string().alphanum().trim().min(3).max(20).required(),\r\n  password: Joi.string().min(10).max(100).required(),\r\n});\r\n\r\nexport default Joi.object({\r\n  user: userSchema,\r\n  recaptchaToken: Joi.string().required(),\r\n});\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postLoginUserApi } from \"./api.js\";\r\nimport userSchema from \"../../../../services/userSchema.js\";\r\n\r\nimport { getAuthenticated } from \"../../../../../../services/authenticatedSlice\";\r\n\r\nexport const postLoginUser = createAsyncThunk(\r\n  \"login/postLoginUser\",\r\n  async (userAndRecaptchaToken, { dispatch, rejectWithValue }) => {\r\n    const validationResult = userSchema.validate(userAndRecaptchaToken, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postLoginUserApi(userAndRecaptchaToken);\r\n\r\n      if (data.success) {\r\n        await dispatch(getAuthenticated());\r\n        return data;\r\n      } else {\r\n        if (data.error.authenticated) {\r\n          await dispatch(getAuthenticated());\r\n          return rejectWithValue(\"preventStateUpdates\");\r\n        }\r\n        if (data.error) {\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  password: \"\",\r\n  validationErrors: [],\r\n  postLoginUserRequestStatus: \"idle\",\r\n};\r\n\r\nconst authenticationLoginSlice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setUsername: (state, action) => {\r\n      state.username = action.payload;\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setRecaptchaToken: (state, action) => {\r\n      state.recaptchaToken = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n\r\n    setPostLoginUserRequestStatus: (state, action) => {\r\n      state.postLoginUserRequestStatus = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postLoginUser.pending, (state, action) => {\r\n        state.postLoginUserRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postLoginUser.rejected, (state, action) => {\r\n        if (action.payload !== \"preventStateUpdates\")\r\n          state.postLoginUserRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postLoginUser.fulfilled, (state, action) => {\r\n        state.postLoginUserRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  setUsername,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  setValidationErrors,\r\n} = authenticationLoginSlice.actions;\r\n\r\nexport default authenticationLoginSlice.reducer;\r\n","export const selectLogin = (state) => state.authentication.login;\r\n\r\nexport const selectUsername = (state) => selectLogin(state).username;\r\n\r\nexport const selectPassword = (state) => selectLogin(state).password;\r\n\r\nexport const selectRecaptchaToken = (state) =>\r\n  selectLogin(state).recaptchaToken;\r\n\r\nexport const selectPostLoginUserRequestStatus = (state) =>\r\n  selectLogin(state).postLoginUserRequestStatus;\r\n\r\nexport const selectUsernameError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"username\"\r\n  )[0]?.message;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectLogin(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"password\"\r\n  )[0]?.message;\r\n","export const SITE_KEY = \"6Lfvwf8aAAAAAGfNx8ZjRBw3wawxBMmDTkdttG6g\";\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport useQuery from \"../../../../services/hooks/useQuery.js\";\r\n\r\nimport {\r\n  reset,\r\n  setUsername,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  postLoginUser,\r\n} from \"./services/authenticationLoginSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectPassword,\r\n  selectRecaptchaToken,\r\n  selectPostLoginUserRequestStatus,\r\n  selectUsernameError,\r\n  selectPasswordError,\r\n} from \"./services/authenticationLoginSlice/selectors.js\";\r\n\r\nimport { SITE_KEY } from \"../../../../services/constants.js\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const query = useQuery();\r\n\r\n  const redirectValue = query.get(\"redirect\");\r\n  const isRedirect = Boolean(redirectValue);\r\n  if (isRedirect) query.delete(\"redirect\");\r\n  const redirectLink = isRedirect ? `${redirectValue}?${query.toString()}` : \"\";\r\n\r\n  const username = useSelector(selectUsername);\r\n  const password = useSelector(selectPassword);\r\n  const recaptchaToken = useSelector(selectRecaptchaToken);\r\n\r\n  const usernameError = useSelector(selectUsernameError);\r\n  const passwordError = useSelector(selectPasswordError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(postLoginUser({ user: { username, password }, recaptchaToken }));\r\n  const loadingRequestStatus = useSelector(selectPostLoginUserRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-login d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Login</h2>\r\n        <hr />\r\n\r\n        <Form>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={username}\r\n              isInvalid={Boolean(usernameError)}\r\n              onChange={(event) => dispatch(setUsername(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {usernameError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              isInvalid={Boolean(passwordError)}\r\n              onChange={(event) => dispatch(setPassword(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {passwordError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        <ReCAPTCHA\r\n          sitekey={SITE_KEY}\r\n          onChange={(tokenValue) => dispatch(setRecaptchaToken(tokenValue))}\r\n        />\r\n\r\n        <div className=\"mt-3 d-flex\">\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Login\"\r\n            redirectLink={isRedirect ? redirectLink : \"/account/dashboard\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export async function postRegisterUserApi(userAndRecaptchaToken) {\r\n  const response = await fetch(\"/api/authentication/register\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(userAndRecaptchaToken),\r\n  });\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { postRegisterUserApi } from \"./api.js\";\r\nimport userSchema from \"../../../../services/userSchema.js\";\r\n\r\nexport const postRegisterUser = createAsyncThunk(\r\n  \"register/postRegisterUser\",\r\n  async (userAndRecaptchaToken, { dispatch, rejectWithValue }) => {\r\n    const validationResult = userSchema.validate(userAndRecaptchaToken, {\r\n      abortEarly: false,\r\n    });\r\n\r\n    if (validationResult.error) {\r\n      const validationErrors = validationResult.error.details.map(\r\n        ({ message, path }) => ({\r\n          message,\r\n          path,\r\n        })\r\n      );\r\n\r\n      dispatch(setValidationErrors(validationErrors));\r\n      return rejectWithValue();\r\n    } else {\r\n      dispatch(setValidationErrors([]));\r\n      const data = await postRegisterUserApi(userAndRecaptchaToken);\r\n\r\n      if (data.success) {\r\n        return data;\r\n      } else {\r\n        if (data.error) {\r\n          dispatch(setValidationErrors([data.error]));\r\n        }\r\n        return rejectWithValue();\r\n      }\r\n    }\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  username: \"\",\r\n  password: \"\",\r\n  recaptchaToken: \"\",\r\n  postRegisterUserRequestStatus: \"idle\",\r\n  validationErrors: [],\r\n};\r\n\r\nconst authenticationRegisterSlice = createSlice({\r\n  name: \"register\",\r\n  initialState,\r\n  reducers: {\r\n    reset: (state, action) => {\r\n      return { ...initialState };\r\n    },\r\n\r\n    setUsername: (state, action) => {\r\n      state.username = action.payload;\r\n    },\r\n\r\n    setPassword: (state, action) => {\r\n      state.password = action.payload;\r\n    },\r\n\r\n    setRecaptchaToken: (state, action) => {\r\n      state.recaptchaToken = action.payload;\r\n    },\r\n\r\n    setValidationErrors: (state, action) => {\r\n      state.validationErrors = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postRegisterUser.pending, (state, action) => {\r\n        state.postRegisterUserRequestStatus = \"pending\";\r\n      })\r\n      .addCase(postRegisterUser.rejected, (state, action) => {\r\n        state.postRegisterUserRequestStatus = \"rejected\";\r\n      })\r\n      .addCase(postRegisterUser.fulfilled, (state, action) => {\r\n        state.postRegisterUserRequestStatus = \"fulfilled\";\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  reset,\r\n  setUsername,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  setValidationErrors,\r\n} = authenticationRegisterSlice.actions;\r\n\r\nexport default authenticationRegisterSlice.reducer;\r\n","export const selectRegister = (state) => state.authentication.register;\r\n\r\nexport const selectUsername = (state) => selectRegister(state).username;\r\n\r\nexport const selectPassword = (state) => selectRegister(state).password;\r\n\r\nexport const selectRecaptchaToken = (state) =>\r\n  selectRegister(state).recaptchaToken;\r\n\r\nexport const selectPostRegisterUserRequestStatus = (state) =>\r\n  selectRegister(state).postRegisterUserRequestStatus;\r\n\r\nexport const selectUsernameError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"username\"\r\n  )[0]?.message;\r\n\r\nexport const selectPasswordError = (state) =>\r\n  selectRegister(state).validationErrors.filter(\r\n    ({ path }) =>\r\n      path.length == 2 && path[0] === \"user\" && path[1] === \"password\"\r\n  )[0]?.message;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  reset,\r\n  setUsername,\r\n  setPassword,\r\n  setRecaptchaToken,\r\n  postRegisterUser,\r\n} from \"./services/authenticationRegisterSlice\";\r\nimport {\r\n  selectUsername,\r\n  selectPassword,\r\n  selectRecaptchaToken,\r\n  selectPostRegisterUserRequestStatus,\r\n  selectUsernameError,\r\n  selectPasswordError,\r\n} from \"./services/authenticationRegisterSlice/selectors.js\";\r\n\r\nimport { SITE_KEY } from \"../../../../services/constants.js\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\nimport PostRequestButton from \"../../../../components/PostRequestButton\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n\r\n  const username = useSelector(selectUsername);\r\n  const password = useSelector(selectPassword);\r\n  const recaptchaToken = useSelector(selectRecaptchaToken);\r\n\r\n  const usernameError = useSelector(selectUsernameError);\r\n  const passwordError = useSelector(selectPasswordError);\r\n\r\n  const initiateLoadingRequest = () =>\r\n    dispatch(\r\n      postRegisterUser({ user: { username, password }, recaptchaToken })\r\n    );\r\n  const loadingRequestStatus = useSelector(selectPostRegisterUserRequestStatus);\r\n\r\n  useEffect(() => {\r\n    return () => dispatch(reset());\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"authentication-register d-flex flex-column\"\r\n      style={{ flex: 1 }}\r\n    >\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\" }}>Register</h2>\r\n        <hr />\r\n\r\n        <Form>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={username}\r\n              isInvalid={Boolean(usernameError)}\r\n              onChange={(event) => dispatch(setUsername(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {usernameError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              isInvalid={Boolean(passwordError)}\r\n              onChange={(event) => dispatch(setPassword(event.target.value))}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {passwordError}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <ReCAPTCHA\r\n            sitekey={SITE_KEY}\r\n            onChange={(tokenValue) => dispatch(setRecaptchaToken(tokenValue))}\r\n          />\r\n        </Form>\r\n\r\n        <div className=\"mt-3 d-flex\">\r\n          <PostRequestButton\r\n            initiateLoadingRequest={initiateLoadingRequest}\r\n            loadingRequestStatus={loadingRequestStatus}\r\n            idleText=\"Register\"\r\n            redirectLink=\"/authentication/login\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { loadResources } from \"../../services/loaderSlice\";\r\nimport { selectLoadResourcesRequestStatus } from \"../../services/loaderSlice/selectors.js\";\r\n\r\nimport { Switch } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport GetRequestCard from \"../GetRequestCard\";\r\n\r\nimport Account from \"../../areas/Account\";\r\nimport Art from \"../../areas/Art\";\r\nimport Authentication from \"../../areas/Authentication\";\r\n\r\nexport default function () {\r\n  const dispatch = useDispatch();\r\n\r\n  const initiateLoadingRequest = () => dispatch(loadResources());\r\n  const loadingRequestStatus = useSelector(selectLoadResourcesRequestStatus);\r\n\r\n  useEffect(() => {\r\n    initiateLoadingRequest();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main d-flex flex-column\" style={{ flex: 1 }}>\r\n      <Container className=\"my-3 d-flex flex-column\" style={{ flex: 1 }}>\r\n        <GetRequestCard\r\n          initiateLoadingRequest={initiateLoadingRequest}\r\n          loadingRequestStatus={loadingRequestStatus}\r\n          fulfilledComponent={() => (\r\n            <Switch>\r\n              {Account()}\r\n              {Art()}\r\n              {Authentication()}\r\n            </Switch>\r\n          )}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\n\r\nimport Dashboard from \"./scenes/Dashboard\";\r\nimport Profile from \"./scenes/Profile\";\r\n\r\nexport default function () {\r\n  return [\r\n    <ProtectedRoute exact path=\"/account/dashboard\" key=\"/account/dashboard\">\r\n      <Dashboard />\r\n    </ProtectedRoute>,\r\n    <Route exact path=\"/account/profile/:userId\" key=\"/account/profile\">\r\n      <Profile />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\n\r\nimport Browse from \"./scenes/Browse\";\r\nimport Create from \"./scenes/Create\";\r\nimport Open from \"./scenes/Open\";\r\n\r\nexport default function () {\r\n  return [\r\n    <Route exact path=\"/art/browse\" key=\"/art/browse\">\r\n      <Browse />\r\n    </Route>,\r\n    <ProtectedRoute exact path=\"/art/create\" key=\"/art/create\">\r\n      <Create />\r\n    </ProtectedRoute>,\r\n    <Route exact path=\"/art/open/:artId\" key=\"/art/open\">\r\n      <Open />\r\n    </Route>,\r\n  ];\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectIsAuthenticated } from \"../../services/authenticatedSlice/selectors.js\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Login from \"./scenes/Login\";\r\nimport Register from \"./scenes/Register\";\r\n\r\nexport default function () {\r\n  const isAuthenticated = useSelector(selectIsAuthenticated);\r\n\r\n  return isAuthenticated ? (\r\n    <Redirect exact to=\"/account/dashboard\" />\r\n  ) : (\r\n    [\r\n      <Route exact path=\"/authentication/login\" key=\"/authentication/login\">\r\n        <Login />\r\n      </Route>,\r\n      <Route\r\n        exact\r\n        path=\"/authentication/register\"\r\n        key=\"/authentication/register\"\r\n      >\r\n        <Register />\r\n      </Route>,\r\n    ]\r\n  );\r\n}\r\n","import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function () {\r\n  return (\r\n    <div className=\"footer pbc p-3\">\r\n      <Container fluid>\r\n        {/* Columns have extra divs to hold link items so that the link items don't span the entire width of the column. */}\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col md>\r\n            <h5>ASCII-CRAFT</h5>\r\n            <div className=\"d-flex flex-column\">\r\n              <div>\r\n                <a className=\"px-2\" href=\"#\">\r\n                  Contact us\r\n                </a>\r\n              </div>\r\n              <div>\r\n                <a href=\"#\">Privacy Policy</a>\r\n              </div>\r\n              <div>\r\n                <a href=\"#\">Terms of Service</a>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md>\r\n            <h5>HELP</h5>\r\n            <div className=\"d-flex flex-column\">\r\n              <div>\r\n                <a href=\"#\">FAQ</a>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <hr />\r\n\r\n        <small>\r\n          Please respect ASCII artists and do not remove their signature while\r\n          sharing their art.\r\n        </small>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import Header from \"./components/Header\";\r\nimport Main from \"./components/Main\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nimport \"./style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default function () {\r\n  return (\r\n    <div className=\"app d-flex flex-column\" style={{ minHeight: \"100vh\" }}>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport createReducer from \"../scenes/Create/services/artCreateSlice\";\r\nimport browseReducer from \"../scenes/Browse/services/artBrowseSlice\";\r\nimport openReducer from \"../scenes/Open/services/artOpenSlice\";\r\n\r\nconst artReducer = combineReducers({\r\n  create: createReducer,\r\n  browse: browseReducer,\r\n  open: openReducer,\r\n});\r\n\r\nexport default artReducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport registerReducer from \"../scenes/Register/services/authenticationRegisterSlice\";\r\nimport loginReducer from \"../scenes/Login/services/authenticationLoginSlice\";\r\n\r\nconst authenticationReducer = combineReducers({\r\n  register: registerReducer,\r\n  login: loginReducer,\r\n});\r\n\r\nexport default authenticationReducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport dashboardReducer from \"../scenes/Dashboard/services/accountDashboardSlice\";\r\nimport profileReducer from \"../scenes/Profile/services/accountProfileSlice\";\r\n\r\nconst accountReducer = combineReducers({\r\n  dashboard: dashboardReducer,\r\n  profile: profileReducer,\r\n});\r\n\r\nexport default accountReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport artReducer from \"../../areas/Art/services/artReducer.js\";\r\nimport authenticationReducer from \"../../areas/Authentication/services/authenticationReducer.js\";\r\nimport accountReducer from \"../../areas/Account/services/accountReducer.js\";\r\n\r\nimport loaderReducer from \"../loaderSlice\";\r\nimport authenticatedSlice from \"../authenticatedSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    art: artReducer,\r\n    authentication: authenticationReducer,\r\n    account: accountReducer,\r\n\r\n    loader: loaderReducer,\r\n    authenticated: authenticatedSlice,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./services/redux/store.js\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}